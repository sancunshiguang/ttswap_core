{
    "contracts": {
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1MarketManager.sol": {
            "MoonV1MarketManager": {
                "abi": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "delMarketManager",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "ismarketManager",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketCreator",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "marketManagers",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "setMarketManager",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "constructor": {
                            "details": "Explain to a developer any extra details"
                        },
                        "delMarketManager(address)": {
                            "details": "Explain to a developer any extra details"
                        },
                        "ismarketManager()": {
                            "details": "Explain to a developer any extra details"
                        },
                        "setMarketManager(address)": {
                            "details": "Explain to a developer any extra details"
                        }
                    },
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {
                            "@_44": {
                                "entryPoint": null,
                                "id": 44,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            }
                        },
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60a060405234801561001057600080fd5b503360805260805161022461003d60003960008181608a0152818161011a015261017001526102246000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631487f2521461005c57806327cbaabe146100855780632b890543146100c4578063753c5188146100d9578063d82aff11146100fc575b600080fd5b3360009081526020819052604090205460ff165b60405190151581526020015b60405180910390f35b6100ac7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007c565b6100d76100d23660046101be565b61010f565b005b6100706100e73660046101be565b60006020819052908152604090205460ff1681565b6100d761010a3660046101be565b610165565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461014457600080fd5b6001600160a01b03166000908152602081905260409020805460ff19169055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461019a57600080fd5b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b6000602082840312156101d057600080fd5b81356001600160a01b03811681146101e757600080fd5b939250505056fea26469706673582212209a1df843ebaf7fd1bdc63746bb9067fd6cbdd593aa06cadd2b3112975edb49c364736f6c634300080f0033",
                        "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH2 0x224 PUSH2 0x3D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x8A ADD MSTORE DUP2 DUP2 PUSH2 0x11A ADD MSTORE PUSH2 0x170 ADD MSTORE PUSH2 0x224 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1487F252 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x27CBAABE EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x2B890543 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x753C5188 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xD82AFF11 EQ PUSH2 0xFC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7C JUMP JUMPDEST PUSH2 0xD7 PUSH2 0xD2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x70 PUSH2 0xE7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 SAR 0xF8 NUMBER 0xEB 0xAF PUSH32 0xD1BDC63746BB9067FD6CBDD593AA06CADD2B3112975EDB49C364736F6C634300 ADDMOD 0xF STOP CALLER ",
                        "sourceMap": "139:1481:0:-:0;;;756:57;;;;;;;;;-1:-1:-1;796:10:0;780:26;;139:1481;;;;;;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {
                            "@delMarketManager_73": {
                                "entryPoint": 271,
                                "id": 73,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@ismarketManager_85": {
                                "entryPoint": null,
                                "id": 85,
                                "parameterSlots": 0,
                                "returnSlots": 1
                            },
                            "@marketCreator_5": {
                                "entryPoint": null,
                                "id": 5,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@marketManagers_9": {
                                "entryPoint": null,
                                "id": 9,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@setMarketManager_59": {
                                "entryPoint": 357,
                                "id": 59,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "abi_decode_tuple_t_address": {
                                "entryPoint": 446,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            }
                        },
                        "generatedSources": [
                            {
                                "ast": {
                                    "nodeType": "YulBlock",
                                    "src": "0:702:4",
                                    "statements": [
                                        {
                                            "nodeType": "YulBlock",
                                            "src": "6:3:4",
                                            "statements": []
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "109:92:4",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "119:26:4",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "131:9:4"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "142:2:4",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "127:3:4"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "127:18:4"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "119:4:4"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "161:9:4"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "186:6:4"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "179:6:4"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "179:14:4"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "iszero",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "172:6:4"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "172:22:4"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "154:6:4"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "154:41:4"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "154:41:4"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "78:9:4",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "89:6:4",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "100:4:4",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "14:187:4"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "307:102:4",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "317:26:4",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "329:9:4"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "340:2:4",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "325:3:4"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "325:18:4"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "317:4:4"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "359:9:4"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "374:6:4"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "390:3:4",
                                                                                            "type": "",
                                                                                            "value": "160"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "395:1:4",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "shl",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "386:3:4"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "386:11:4"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "399:1:4",
                                                                                    "type": "",
                                                                                    "value": "1"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "sub",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "382:3:4"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "382:19:4"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "370:3:4"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "370:32:4"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "352:6:4"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "352:51:4"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "352:51:4"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "276:9:4",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "287:6:4",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "298:4:4",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "206:203:4"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "484:216:4",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "530:16:4",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "539:1:4",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "542:1:4",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "532:6:4"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "532:12:4"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "532:12:4"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "505:7:4"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "514:9:4"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "501:3:4"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "501:23:4"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "526:2:4",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "497:3:4"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "497:32:4"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "494:52:4"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "555:36:4",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "581:9:4"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "568:12:4"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "568:23:4"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulTypedName",
                                                                "src": "559:5:4",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "654:16:4",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "663:1:4",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "666:1:4",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "656:6:4"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "656:12:4"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "656:12:4"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "613:5:4"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "624:5:4"
                                                                                },
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "639:3:4",
                                                                                                    "type": "",
                                                                                                    "value": "160"
                                                                                                },
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "644:1:4",
                                                                                                    "type": "",
                                                                                                    "value": "1"
                                                                                                }
                                                                                            ],
                                                                                            "functionName": {
                                                                                                "name": "shl",
                                                                                                "nodeType": "YulIdentifier",
                                                                                                "src": "635:3:4"
                                                                                            },
                                                                                            "nodeType": "YulFunctionCall",
                                                                                            "src": "635:11:4"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "648:1:4",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "sub",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "631:3:4"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "631:19:4"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "620:3:4"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "620:31:4"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "610:2:4"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "610:42:4"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "603:6:4"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "603:50:4"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "600:70:4"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "679:15:4",
                                                        "value": {
                                                            "name": "value",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "689:5:4"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "679:6:4"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "450:9:4",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "461:7:4",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "473:6:4",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "414:286:4"
                                        }
                                    ]
                                },
                                "contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
                                "id": 4,
                                "language": "Yul",
                                "name": "#utility.yul"
                            }
                        ],
                        "immutableReferences": {
                            "5": [
                                {
                                    "length": 32,
                                    "start": 138
                                },
                                {
                                    "length": 32,
                                    "start": 282
                                },
                                {
                                    "length": 32,
                                    "start": 368
                                }
                            ]
                        },
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80631487f2521461005c57806327cbaabe146100855780632b890543146100c4578063753c5188146100d9578063d82aff11146100fc575b600080fd5b3360009081526020819052604090205460ff165b60405190151581526020015b60405180910390f35b6100ac7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007c565b6100d76100d23660046101be565b61010f565b005b6100706100e73660046101be565b60006020819052908152604090205460ff1681565b6100d761010a3660046101be565b610165565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461014457600080fd5b6001600160a01b03166000908152602081905260409020805460ff19169055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461019a57600080fd5b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b6000602082840312156101d057600080fd5b81356001600160a01b03811681146101e757600080fd5b939250505056fea26469706673582212209a1df843ebaf7fd1bdc63746bb9067fd6cbdd593aa06cadd2b3112975edb49c364736f6c634300080f0033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1487F252 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x27CBAABE EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x2B890543 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x753C5188 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xD82AFF11 EQ PUSH2 0xFC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7C JUMP JUMPDEST PUSH2 0xD7 PUSH2 0xD2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x70 PUSH2 0xE7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 SAR 0xF8 NUMBER 0xEB 0xAF PUSH32 0xD1BDC63746BB9067FD6CBDD593AA06CADD2B3112975EDB49C364736F6C634300 ADDMOD 0xF STOP CALLER ",
                        "sourceMap": "139:1481:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1512:106;1600:10;1562:4;1585:26;;;;;;;;;;;;;1512:106;;;179:14:4;;172:22;154:41;;142:2;127:18;1512:106:0;;;;;;;;174:38;;;;;;;;-1:-1:-1;;;;;370:32:4;;;352:51;;340:2;325:18;174:38:0;206:203:4;1283:115:0;;;;;;:::i;:::-;;:::i;:::-;;261:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1054:115;;;;;;:::i;:::-;;:::i;1283:::-;360:10;-1:-1:-1;;;;;374:13:0;360:27;;352:36;;;;;;-1:-1:-1;;;;;1369:22:0::1;:14;:22:::0;;;::::1;::::0;;;;;;1362:29;;-1:-1:-1;;1362:29:0::1;::::0;;1283:115::o;1054:::-;360:10;-1:-1:-1;;;;;374:13:0;360:27;;352:36;;;;;;-1:-1:-1;;;;;1133:22:0::1;:14;:22:::0;;;::::1;::::0;;;;;;:29;;-1:-1:-1;;1133:29:0::1;1158:4;1133:29;::::0;;1054:115::o;414:286:4:-;473:6;526:2;514:9;505:7;501:23;497:32;494:52;;;542:1;539;532:12;494:52;568:23;;-1:-1:-1;;;;;620:31:4;;610:42;;600:70;;666:1;663;656:12;600:70;689:5;414:286;-1:-1:-1;;;414:286:4:o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "109600",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "delMarketManager(address)": "infinite",
                            "ismarketManager()": "2331",
                            "marketCreator()": "infinite",
                            "marketManagers(address)": "2532",
                            "setMarketManager(address)": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "delMarketManager(address)": "2b890543",
                        "ismarketManager()": "1487f252",
                        "marketCreator()": "27cbaabe",
                        "marketManagers(address)": "753c5188",
                        "setMarketManager(address)": "d82aff11"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ismarketManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketManagers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Explain to a developer any extra details\"},\"delMarketManager(address)\":{\"details\":\"Explain to a developer any extra details\"},\"ismarketManager()\":{\"details\":\"Explain to a developer any extra details\"},\"setMarketManager(address)\":{\"details\":\"Explain to a developer any extra details\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Explain to an end user what this does\"},\"delMarketManager(address)\":{\"notice\":\"Explain to an end user what this does\"},\"ismarketManager()\":{\"notice\":\"Explain to an end user what this does\"},\"setMarketManager(address)\":{\"notice\":\"Explain to an end user what this does\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1MarketManager.sol\":\"MoonV1MarketManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1MarketManager.sol\":{\"keccak256\":\"0xda9797a4ff7cbf82e48880f8243df53237873232b0784a8b8f0f5e95587fb3e1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3b2579699d4d489dfd089373f2b328ddd13e754c06ff2fdb4e1c2e6425e82f34\",\"dweb:/ipfs/QmfArh7CcwXZZMq3jgtLXP75UZC2xar94wnjSaMKg5DKmn\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/NoDelegateCall.sol\":{\"keccak256\":\"0x2ab29a2d0765c68425e211acb66687eb1955b77396fc051bb0a0f6ea5786d6b1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2c2ed438b9a3b74f0b38adc33085e1383861eb4948f3501327fb4e72a778bb94\",\"dweb:/ipfs/Qmf6WNNJSP69fJWGbSQvA6GPdvyJFSP6oTfLbwiiAJ1zKj\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/LProfitShares.sol\":{\"keccak256\":\"0x99649085faf6e49c76506927ae3e225b7f73f1f3a5fa5ad2e8aac77824c1cf2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4c4de3f3a397ebca7a4656c53292cf49cdddbfd908858a2cd4070654c6e1b481\",\"dweb:/ipfs/QmWVYMxuhVomPwk92oSBb2tuAhxG14MKPtETigqHvxyvaS\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LShop.sol\":{\"keccak256\":\"0xb8f7b47345b022ecbd97491b79385ee69c226a62c832048df9ad74c6e4132102\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a821cb2570143bb2c30910d7949ddb1846be13451024c341ea8a59512609d202\",\"dweb:/ipfs/QmQg5uxtJaYg4JMVaQZRugK2m92t9fCcrPcXHbx1sqkJVS\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 9,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1MarketManager.sol:MoonV1MarketManager",
                            "label": "marketManagers",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_mapping(t_address,t_bool)"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_bool": {
                            "encoding": "inplace",
                            "label": "bool",
                            "numberOfBytes": "1"
                        },
                        "t_mapping(t_address,t_bool)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => bool)",
                            "numberOfBytes": "32",
                            "value": "t_bool"
                        }
                    }
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "constructor": {
                            "notice": "Explain to an end user what this does"
                        },
                        "delMarketManager(address)": {
                            "notice": "Explain to an end user what this does"
                        },
                        "ismarketManager()": {
                            "notice": "Explain to an end user what this does"
                        },
                        "setMarketManager(address)": {
                            "notice": "Explain to an end user what this does"
                        }
                    },
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/NoDelegateCall.sol": {
            "NoDelegateCall": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "stateVariables": {
                        "original": {
                            "details": "The original address of this contract"
                        }
                    },
                    "title": "Prevents delegatecall to a contract",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"original\":{\"details\":\"The original address of this contract\"}},\"title\":\"Prevents delegatecall to a contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Base contract that provides a modifier for preventing delegatecall to methods in a child contract NoDelegateCall\\u5408\\u7ea6\\u7684\\u4e3b\\u8981\\u529f\\u80fd\\u662f\\u63d0\\u4f9b\\u4e00\\u4e2a\\u4fee\\u9970\\u5668\\u6765\\u963b\\u6b62\\u5bf9\\u4f7f\\u7528\\u4fee\\u9970\\u5668\\u4fee\\u9970\\u8fc7\\u7684\\u51fd\\u6570\\u8fdb\\u884cdelegatecall\\u8c03\\u7528\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/NoDelegateCall.sol\":\"NoDelegateCall\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/NoDelegateCall.sol\":{\"keccak256\":\"0x2ab29a2d0765c68425e211acb66687eb1955b77396fc051bb0a0f6ea5786d6b1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2c2ed438b9a3b74f0b38adc33085e1383861eb4948f3501327fb4e72a778bb94\",\"dweb:/ipfs/Qmf6WNNJSP69fJWGbSQvA6GPdvyJFSP6oTfLbwiiAJ1zKj\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Base contract that provides a modifier for preventing delegatecall to methods in a child contract NoDelegateCall合约的主要功能是提供一个修饰器来阻止对使用修饰器修饰过的函数进行delegatecall调用",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/LProfitShares.sol": {
            "LProfitShares": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122006b254bb156479f6022b7ffd423900d6769fb26441dffc57f1e5a55f1f93a46364736f6c634300080f0033",
                        "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xB2 SLOAD 0xBB ISZERO PUSH5 0x79F6022B7F REVERT TIMESTAMP CODECOPY STOP 0xD6 PUSH23 0x9FB26441DFFC57F1E5A55F1F93A46364736F6C63430008 0xF STOP CALLER ",
                        "sourceMap": "70:157:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;70:157:2;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122006b254bb156479f6022b7ffd423900d6769fb26441dffc57f1e5a55f1f93a46364736f6c634300080f0033",
                        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xB2 SLOAD 0xBB ISZERO PUSH5 0x79F6022B7F REVERT TIMESTAMP CODECOPY STOP 0xD6 PUSH23 0x9FB26441DFFC57F1E5A55F1F93A46364736F6C63430008 0xF STOP CALLER ",
                        "sourceMap": "70:157:2:-:0;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "17200",
                            "executionCost": "103",
                            "totalCost": "17303"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/LProfitShares.sol\":\"LProfitShares\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/LProfitShares.sol\":{\"keccak256\":\"0x99649085faf6e49c76506927ae3e225b7f73f1f3a5fa5ad2e8aac77824c1cf2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4c4de3f3a397ebca7a4656c53292cf49cdddbfd908858a2cd4070654c6e1b481\",\"dweb:/ipfs/QmWVYMxuhVomPwk92oSBb2tuAhxG14MKPtETigqHvxyvaS\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LShop.sol": {
            "LShop": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206c1445d62c8beea4cdce75c5a8ab81bbc7dafa9a43537a38ee62114188a4b00864736f6c634300080f0033",
                        "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x1445D62C8BEEA4CDCE75C5A8AB DUP2 0xBB 0xC7 0xDA STATICCALL SWAP11 NUMBER MSTORE8 PUSH27 0x38EE62114188A4B00864736F6C634300080F003300000000000000 ",
                        "sourceMap": "102:245:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;102:245:3;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206c1445d62c8beea4cdce75c5a8ab81bbc7dafa9a43537a38ee62114188a4b00864736f6c634300080f0033",
                        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x1445D62C8BEEA4CDCE75C5A8AB DUP2 0xBB 0xC7 0xDA STATICCALL SWAP11 NUMBER MSTORE8 PUSH27 0x38EE62114188A4B00864736F6C634300080F003300000000000000 ",
                        "sourceMap": "102:245:3:-:0;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "17200",
                            "executionCost": "103",
                            "totalCost": "17303"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LShop.sol\":\"LShop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/LProfitShares.sol\":{\"keccak256\":\"0x99649085faf6e49c76506927ae3e225b7f73f1f3a5fa5ad2e8aac77824c1cf2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4c4de3f3a397ebca7a4656c53292cf49cdddbfd908858a2cd4070654c6e1b481\",\"dweb:/ipfs/QmWVYMxuhVomPwk92oSBb2tuAhxG14MKPtETigqHvxyvaS\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LShop.sol\":{\"keccak256\":\"0xb8f7b47345b022ecbd97491b79385ee69c226a62c832048df9ad74c6e4132102\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a821cb2570143bb2c30910d7949ddb1846be13451024c341ea8a59512609d202\",\"dweb:/ipfs/QmQg5uxtJaYg4JMVaQZRugK2m92t9fCcrPcXHbx1sqkJVS\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        }
    },
    "sources": {
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1MarketManager.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1MarketManager.sol",
                "exportedSymbols": {
                    "LProfitShares": [
                        138
                    ],
                    "LShop": [
                        160
                    ],
                    "MoonV1MarketManager": [
                        86
                    ],
                    "NoDelegateCall": [
                        126
                    ]
                },
                "id": 87,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:0"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/NoDelegateCall.sol",
                        "file": "./NoDelegateCall.sol",
                        "id": 2,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 87,
                        "sourceUnit": 127,
                        "src": "70:30:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LShop.sol",
                        "file": "./libraries/base/LShop.sol",
                        "id": 3,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 87,
                        "sourceUnit": 161,
                        "src": "101:36:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "MoonV1MarketManager",
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 86,
                        "linearizedBaseContracts": [
                            86
                        ],
                        "name": "MoonV1MarketManager",
                        "nameLocation": "148:19:0",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "functionSelector": "27cbaabe",
                                "id": 5,
                                "mutability": "immutable",
                                "name": "marketCreator",
                                "nameLocation": "199:13:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 86,
                                "src": "174:38:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 4,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "174:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "753c5188",
                                "id": 9,
                                "mutability": "mutable",
                                "name": "marketManagers",
                                "nameLocation": "293:14:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 86,
                                "src": "261:46:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                },
                                "typeName": {
                                    "id": 8,
                                    "keyType": {
                                        "id": 6,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "269:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "261:24:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                    },
                                    "valueType": {
                                        "id": 7,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "280:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 19,
                                    "nodeType": "Block",
                                    "src": "342:64:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 15,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 12,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "360:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 13,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "360:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "id": 14,
                                                            "name": "marketCreator",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 5,
                                                            "src": "374:13:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "360:27:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 11,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "352:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 16,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "352:36:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 17,
                                            "nodeType": "ExpressionStatement",
                                            "src": "352:36:0"
                                        },
                                        {
                                            "id": 18,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "398:1:0"
                                        }
                                    ]
                                },
                                "id": 20,
                                "name": "onlyMarketCreator",
                                "nameLocation": "322:17:0",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 10,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "339:2:0"
                                },
                                "src": "313:93:0",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 33,
                                    "nodeType": "Block",
                                    "src": "549:71:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 29,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "baseExpression": {
                                                                "id": 24,
                                                                "name": "marketManagers",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 9,
                                                                "src": "567:14:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                                    "typeString": "mapping(address => bool)"
                                                                }
                                                            },
                                                            "id": 27,
                                                            "indexExpression": {
                                                                "expression": {
                                                                    "id": 25,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967281,
                                                                    "src": "582:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 26,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "src": "582:10:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "567:26:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "74727565",
                                                            "id": 28,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "597:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "src": "567:34:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 23,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "559:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 30,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "559:43:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 31,
                                            "nodeType": "ExpressionStatement",
                                            "src": "559:43:0"
                                        },
                                        {
                                            "id": 32,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "612:1:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 21,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "412:103:0",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "id": 34,
                                "name": "onlyMarketManager",
                                "nameLocation": "529:17:0",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 22,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "546:2:0"
                                },
                                "src": "520:100:0",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 43,
                                    "nodeType": "Block",
                                    "src": "770:43:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 41,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 38,
                                                    "name": "marketCreator",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5,
                                                    "src": "780:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "expression": {
                                                        "id": 39,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "796:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 40,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "796:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "780:26:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 42,
                                            "nodeType": "ExpressionStatement",
                                            "src": "780:26:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 35,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "626:104:0",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "id": 44,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nameLocation": "-1:-1:-1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 36,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "767:2:0"
                                },
                                "returnParameters": {
                                    "id": 37,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "770:0:0"
                                },
                                "scope": 86,
                                "src": "756:57:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 58,
                                    "nodeType": "Block",
                                    "src": "1123:46:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 56,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 52,
                                                        "name": "marketManagers",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 9,
                                                        "src": "1133:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 54,
                                                    "indexExpression": {
                                                        "id": 53,
                                                        "name": "_owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 47,
                                                        "src": "1148:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "1133:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 55,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1158:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "1133:29:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 57,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1133:29:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 45,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "946:103:0",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "functionSelector": "d82aff11",
                                "id": 59,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 50,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 49,
                                            "name": "onlyMarketCreator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 20,
                                            "src": "1105:17:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1105:17:0"
                                    }
                                ],
                                "name": "setMarketManager",
                                "nameLocation": "1063:16:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 48,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 47,
                                            "mutability": "mutable",
                                            "name": "_owner",
                                            "nameLocation": "1088:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 59,
                                            "src": "1080:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 46,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1080:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1079:16:0"
                                },
                                "returnParameters": {
                                    "id": 51,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1123:0:0"
                                },
                                "scope": 86,
                                "src": "1054:115:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 72,
                                    "nodeType": "Block",
                                    "src": "1352:46:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 70,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "delete",
                                                "prefix": true,
                                                "src": "1362:29:0",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "id": 67,
                                                        "name": "marketManagers",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 9,
                                                        "src": "1369:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 69,
                                                    "indexExpression": {
                                                        "id": 68,
                                                        "name": "_owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 62,
                                                        "src": "1384:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "1369:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 71,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1362:29:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 60,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1175:103:0",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "functionSelector": "2b890543",
                                "id": 73,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 65,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 64,
                                            "name": "onlyMarketCreator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 20,
                                            "src": "1334:17:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1334:17:0"
                                    }
                                ],
                                "name": "delMarketManager",
                                "nameLocation": "1292:16:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 63,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 62,
                                            "mutability": "mutable",
                                            "name": "_owner",
                                            "nameLocation": "1317:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 73,
                                            "src": "1309:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 61,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1309:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1308:16:0"
                                },
                                "returnParameters": {
                                    "id": 66,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1352:0:0"
                                },
                                "scope": 86,
                                "src": "1283:115:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 84,
                                    "nodeType": "Block",
                                    "src": "1568:50:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "baseExpression": {
                                                    "id": 79,
                                                    "name": "marketManagers",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 9,
                                                    "src": "1585:14:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                        "typeString": "mapping(address => bool)"
                                                    }
                                                },
                                                "id": 82,
                                                "indexExpression": {
                                                    "expression": {
                                                        "id": 80,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "1600:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 81,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1600:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "1585:26:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 78,
                                            "id": 83,
                                            "nodeType": "Return",
                                            "src": "1578:33:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 74,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1404:103:0",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "functionSelector": "1487f252",
                                "id": 85,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "ismarketManager",
                                "nameLocation": "1521:15:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 75,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1536:2:0"
                                },
                                "returnParameters": {
                                    "id": 78,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 77,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 85,
                                            "src": "1562:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 76,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1562:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1561:6:0"
                                },
                                "scope": 86,
                                "src": "1512:106:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 87,
                        "src": "139:1481:0",
                        "usedErrors": []
                    }
                ],
                "src": "45:1576:0"
            },
            "id": 0
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/NoDelegateCall.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/NoDelegateCall.sol",
                "exportedSymbols": {
                    "NoDelegateCall": [
                        126
                    ]
                },
                "id": 127,
                "license": "BUSL-1.1",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 88,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "37:23:1"
                    },
                    {
                        "abstract": true,
                        "baseContracts": [],
                        "canonicalName": "NoDelegateCall",
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 89,
                            "nodeType": "StructuredDocumentation",
                            "src": "62:290:1",
                            "text": "@title Prevents delegatecall to a contract\n @notice Base contract that provides a modifier for preventing delegatecall to methods in a child contract\n NoDelegateCall合约的主要功能是提供一个修饰器来阻止对使用修饰器修饰过的函数进行delegatecall调用"
                        },
                        "fullyImplemented": true,
                        "id": 126,
                        "linearizedBaseContracts": [
                            126
                        ],
                        "name": "NoDelegateCall",
                        "nameLocation": "370:14:1",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "documentation": {
                                    "id": 90,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "391:46:1",
                                    "text": "@dev The original address of this contract"
                                },
                                "id": 92,
                                "mutability": "immutable",
                                "name": "original",
                                "nameLocation": "468:8:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 126,
                                "src": "442:34:1",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 91,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "442:7:1",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "body": {
                                    "id": 102,
                                    "nodeType": "Block",
                                    "src": "497:239:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 100,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 95,
                                                    "name": "original",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 92,
                                                    "src": "705:8:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "id": 98,
                                                            "name": "this",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967268,
                                                            "src": "724:4:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_NoDelegateCall_$126",
                                                                "typeString": "contract NoDelegateCall"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_contract$_NoDelegateCall_$126",
                                                                "typeString": "contract NoDelegateCall"
                                                            }
                                                        ],
                                                        "id": 97,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "716:7:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 96,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "716:7:1",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 99,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "716:13:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "705:24:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 101,
                                            "nodeType": "ExpressionStatement",
                                            "src": "705:24:1"
                                        }
                                    ]
                                },
                                "id": 103,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nameLocation": "-1:-1:-1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 93,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "494:2:1"
                                },
                                "returnParameters": {
                                    "id": 94,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "497:0:1"
                                },
                                "scope": 126,
                                "src": "483:253:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 116,
                                    "nodeType": "Block",
                                    "src": "1013:51:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 113,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 110,
                                                                    "name": "this",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967268,
                                                                    "src": "1039:4:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_NoDelegateCall_$126",
                                                                        "typeString": "contract NoDelegateCall"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_contract$_NoDelegateCall_$126",
                                                                        "typeString": "contract NoDelegateCall"
                                                                    }
                                                                ],
                                                                "id": 109,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "1031:7:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 108,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "1031:7:1",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 111,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1031:13:1",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "id": 112,
                                                            "name": "original",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 92,
                                                            "src": "1048:8:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "1031:25:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 107,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "1023:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 114,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1023:34:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 115,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1023:34:1"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 104,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "742:221:1",
                                    "text": "@dev Private method is used instead of inlining into modifier because modifiers are copied into each method,\n     and the use of immutable means the address bytes are copied in every place the modifier is used."
                                },
                                "id": 117,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "checkNotDelegateCall",
                                "nameLocation": "977:20:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 105,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "997:2:1"
                                },
                                "returnParameters": {
                                    "id": 106,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1013:0:1"
                                },
                                "scope": 126,
                                "src": "968:96:1",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "private"
                            },
                            {
                                "body": {
                                    "id": 124,
                                    "nodeType": "Block",
                                    "src": "1159:50:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 120,
                                                    "name": "checkNotDelegateCall",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 117,
                                                    "src": "1169:20:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                                                        "typeString": "function () view"
                                                    }
                                                },
                                                "id": 121,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1169:22:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 122,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1169:22:1"
                                        },
                                        {
                                            "id": 123,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "1201:1:1"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 118,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1070:58:1",
                                    "text": "@notice Prevents delegatecall into the modified method"
                                },
                                "id": 125,
                                "name": "noDelegateCall",
                                "nameLocation": "1142:14:1",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 119,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1156:2:1"
                                },
                                "src": "1133:76:1",
                                "virtual": false,
                                "visibility": "internal"
                            }
                        ],
                        "scope": 127,
                        "src": "352:859:1",
                        "usedErrors": []
                    }
                ],
                "src": "37:1175:1"
            },
            "id": 1
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/LProfitShares.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/LProfitShares.sol",
                "exportedSymbols": {
                    "LProfitShares": [
                        138
                    ]
                },
                "id": 139,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 128,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:2"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "LProfitShares",
                        "contractDependencies": [],
                        "contractKind": "library",
                        "fullyImplemented": true,
                        "id": 138,
                        "linearizedBaseContracts": [
                            138
                        ],
                        "name": "LProfitShares",
                        "nameLocation": "78:13:2",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "canonicalName": "LProfitShares.Info",
                                "id": 137,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 130,
                                        "mutability": "mutable",
                                        "name": "marketshare",
                                        "nameLocation": "126:11:2",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 137,
                                        "src": "120:17:2",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        },
                                        "typeName": {
                                            "id": 129,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "120:5:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 132,
                                        "mutability": "mutable",
                                        "name": "gatershare",
                                        "nameLocation": "153:10:2",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 137,
                                        "src": "147:16:2",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        },
                                        "typeName": {
                                            "id": 131,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "147:5:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 134,
                                        "mutability": "mutable",
                                        "name": "commandershare",
                                        "nameLocation": "179:14:2",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 137,
                                        "src": "173:20:2",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        },
                                        "typeName": {
                                            "id": 133,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "173:5:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 136,
                                        "mutability": "mutable",
                                        "name": "usershare",
                                        "nameLocation": "209:9:2",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 137,
                                        "src": "203:15:2",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        },
                                        "typeName": {
                                            "id": 135,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "203:5:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "Info",
                                "nameLocation": "105:4:2",
                                "nodeType": "StructDefinition",
                                "scope": 138,
                                "src": "98:127:2",
                                "visibility": "public"
                            }
                        ],
                        "scope": 139,
                        "src": "70:157:2",
                        "usedErrors": []
                    }
                ],
                "src": "45:183:2"
            },
            "id": 2
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LShop.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LShop.sol",
                "exportedSymbols": {
                    "LProfitShares": [
                        138
                    ],
                    "LShop": [
                        160
                    ]
                },
                "id": 161,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 140,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:3"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/LProfitShares.sol",
                        "file": "../LProfitShares.sol",
                        "id": 141,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 161,
                        "sourceUnit": 139,
                        "src": "70:30:3",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "LShop",
                        "contractDependencies": [],
                        "contractKind": "library",
                        "fullyImplemented": true,
                        "id": 160,
                        "linearizedBaseContracts": [
                            160
                        ],
                        "name": "LShop",
                        "nameLocation": "110:5:3",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "canonicalName": "LShop.Info",
                                "id": 159,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 143,
                                        "mutability": "mutable",
                                        "name": "Market",
                                        "nameLocation": "152:6:3",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 159,
                                        "src": "144:14:3",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 142,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "144:7:3",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 145,
                                        "mutability": "mutable",
                                        "name": "coin",
                                        "nameLocation": "176:4:3",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 159,
                                        "src": "168:12:3",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 144,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "168:7:3",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 147,
                                        "mutability": "mutable",
                                        "name": "thing",
                                        "nameLocation": "198:5:3",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 159,
                                        "src": "190:13:3",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 146,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "190:7:3",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 149,
                                        "mutability": "mutable",
                                        "name": "profit",
                                        "nameLocation": "220:6:3",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 159,
                                        "src": "213:13:3",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint24",
                                            "typeString": "uint24"
                                        },
                                        "typeName": {
                                            "id": 148,
                                            "name": "uint24",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "213:6:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint24",
                                                "typeString": "uint24"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 151,
                                        "mutability": "mutable",
                                        "name": "unitSpacing",
                                        "nameLocation": "242:11:3",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 159,
                                        "src": "236:17:3",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                        },
                                        "typeName": {
                                            "id": 150,
                                            "name": "int24",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "236:5:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_int24",
                                                "typeString": "int24"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 154,
                                        "mutability": "mutable",
                                        "name": "profitshares",
                                        "nameLocation": "282:12:3",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 159,
                                        "src": "263:31:3",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Info_$137_storage_ptr",
                                            "typeString": "struct LProfitShares.Info"
                                        },
                                        "typeName": {
                                            "id": 153,
                                            "nodeType": "UserDefinedTypeName",
                                            "pathNode": {
                                                "id": 152,
                                                "name": "LProfitShares.Info",
                                                "nodeType": "IdentifierPath",
                                                "referencedDeclaration": 137,
                                                "src": "263:18:3"
                                            },
                                            "referencedDeclaration": 137,
                                            "src": "263:18:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$137_storage_ptr",
                                                "typeString": "struct LProfitShares.Info"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 156,
                                        "mutability": "mutable",
                                        "name": "gater",
                                        "nameLocation": "312:5:3",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 159,
                                        "src": "304:13:3",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 155,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "304:7:3",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 158,
                                        "mutability": "mutable",
                                        "name": "isUsed",
                                        "nameLocation": "332:6:3",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 159,
                                        "src": "327:11:3",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 157,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "327:4:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "Info",
                                "nameLocation": "129:4:3",
                                "nodeType": "StructDefinition",
                                "scope": 160,
                                "src": "122:223:3",
                                "visibility": "public"
                            }
                        ],
                        "scope": 161,
                        "src": "102:245:3",
                        "usedErrors": []
                    }
                ],
                "src": "45:303:3"
            },
            "id": 3
        }
    }
}