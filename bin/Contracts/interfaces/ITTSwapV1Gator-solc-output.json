{
    "contracts": {
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1CustomerActions.sol": {
            "IGatorV1CustomerActions": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "address",
                                        "name": "market",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "gateAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "uint160",
                                        "name": "authority",
                                        "type": "uint160"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "name",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "website",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32[10]",
                                        "name": "webserverip",
                                        "type": "bytes32[10]"
                                    },
                                    {
                                        "internalType": "uint32",
                                        "name": "createtimestamp",
                                        "type": "uint32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LGate.Info",
                                "name": "_gator",
                                "type": "tuple"
                            }
                        ],
                        "name": "addGater",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Permissioned pool actions",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "addGater((address,address,uint160,bytes32,bytes32,bytes32[10],uint32,bool,bool,bool))": "d8feb7ff"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"authority\",\"type\":\"uint160\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[10]\",\"name\":\"webserverip\",\"type\":\"bytes32[10]\"},{\"internalType\":\"uint32\",\"name\":\"createtimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"_gator\",\"type\":\"tuple\"}],\"name\":\"addGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1CustomerActions.sol\":\"IGatorV1CustomerActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1CustomerActions.sol\":{\"keccak256\":\"0x5166995889ad764ce7379845df7e6f55f5114294f18795a07da173466418c010\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c101332272e023fd17dd3e96270424a42aa257e02f14650314bf133ff3105221\",\"dweb:/ipfs/QmUznHitEEPeBRc7PxrUMggmyLveBtW2MJyKGUt8KDrjUn\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":{\"keccak256\":\"0xdbbcc3e545cc8d7d8eebe4b1dbaccee4d2adbce4785cb7ac5f4712093c72db52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d7251ca8ee12ad7009fe9f280aa8be028502f51e7465fe5314b85b9a2815991\",\"dweb:/ipfs/QmRQ5Z78r3qDKhBbRbDs8d4ThNk5fLN5S5g6tosHwa6jdo\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Contains pool methods that may only be called by the factory owner",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Events.sol": {
            "IGatorV1Events": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Events emitted by a pool",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Events.sol\":\"IGatorV1Events\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Events.sol\":{\"keccak256\":\"0xcddaf97a05e7a5b4706705dd9618ad9a97ebe6559365deaa3bcbe21eef84d462\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0432642546822e3e6bb77c89815cda36aea85154bb8431c0837db1b5fb199dcd\",\"dweb:/ipfs/QmYSkG65spVSpN1WDkF5iFtPSBvYeDWvSNRVpYygR9iJkr\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Contains all events emitted by the pool",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1GatorActions.sol": {
            "IGatorV1GatorActions": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "lockGatebyGater",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "unlockGatebyGater",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "address",
                                        "name": "market",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "gateAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "uint160",
                                        "name": "authority",
                                        "type": "uint160"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "name",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "website",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32[10]",
                                        "name": "webserverip",
                                        "type": "bytes32[10]"
                                    },
                                    {
                                        "internalType": "uint32",
                                        "name": "createtimestamp",
                                        "type": "uint32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LGate.Info",
                                "name": "_gator",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateGatebyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Permissioned pool actions",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "lockGatebyGater()": "3bbae141",
                        "unlockGatebyGater()": "f1c9f40f",
                        "updateGatebyGator((address,address,uint160,bytes32,bytes32,bytes32[10],uint32,bool,bool,bool))": "f3a42537"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"lockGatebyGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockGatebyGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"authority\",\"type\":\"uint160\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[10]\",\"name\":\"webserverip\",\"type\":\"bytes32[10]\"},{\"internalType\":\"uint32\",\"name\":\"createtimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"_gator\",\"type\":\"tuple\"}],\"name\":\"updateGatebyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1GatorActions.sol\":\"IGatorV1GatorActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1GatorActions.sol\":{\"keccak256\":\"0x43e783a765bf4f5a4de8591ceb9556c215372e068e80827637f22aec41460359\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://23b287fe77c961c6f7dc7b7a1591eddd0772b687faf41e7c0400c66114e8a452\",\"dweb:/ipfs/QmVKaaxjY7ya3HSkdUt7zqw2J8BqxMDGvUbUjobVCcUsHk\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":{\"keccak256\":\"0xdbbcc3e545cc8d7d8eebe4b1dbaccee4d2adbce4785cb7ac5f4712093c72db52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d7251ca8ee12ad7009fe9f280aa8be028502f51e7465fe5314b85b9a2815991\",\"dweb:/ipfs/QmRQ5Z78r3qDKhBbRbDs8d4ThNk5fLN5S5g6tosHwa6jdo\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Contains pool methods that may only be called by the factory owner",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Immutables.sol": {
            "IGatorV1Immutables": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "marketorContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "marketorContractAddress()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "title": "Pool state that never changes",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "marketorContractAddress()": "492b7107"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"marketorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"marketorContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"marketorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Immutables.sol\":\"IGatorV1Immutables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Immutables.sol\":{\"keccak256\":\"0x8cbeb007a8321dee1ef73ed11e1af76c30acb64c6829d2c0d02c6f6cb4e8fdc3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://00b5dc4c7cbcec92fdfa6e6d512209d63cf2cac6a1ae6969b853172fc9fb8319\",\"dweb:/ipfs/QmYoRZuN8XvT6eESqy5BFEDxbs12beWtBHgkjxna3Jy7CF\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "marketorContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        }
                    },
                    "notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1MarketorActions.sol": {
            "IGatorV1MarketorActions": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_gator",
                                "type": "address"
                            }
                        ],
                        "name": "delGatebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_gatoraddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockGatebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_gatoraddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockGatebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "address",
                                        "name": "market",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "gateAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "uint160",
                                        "name": "authority",
                                        "type": "uint160"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "name",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "website",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32[10]",
                                        "name": "webserverip",
                                        "type": "bytes32[10]"
                                    },
                                    {
                                        "internalType": "uint32",
                                        "name": "createtimestamp",
                                        "type": "uint32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LGate.Info",
                                "name": "_gator",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateGatebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Permissioned pool actions",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "delGatebyMarketor(address)": "b614984d",
                        "lockGatebyMarketor(address)": "a4786088",
                        "unlockGatebyMarketor(address)": "76941300",
                        "updateGatebyMarketor((address,address,uint160,bytes32,bytes32,bytes32[10],uint32,bool,bool,bool))": "71271f4d"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gator\",\"type\":\"address\"}],\"name\":\"delGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gatoraddress\",\"type\":\"address\"}],\"name\":\"lockGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gatoraddress\",\"type\":\"address\"}],\"name\":\"unlockGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"authority\",\"type\":\"uint160\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[10]\",\"name\":\"webserverip\",\"type\":\"bytes32[10]\"},{\"internalType\":\"uint32\",\"name\":\"createtimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"_gator\",\"type\":\"tuple\"}],\"name\":\"updateGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1MarketorActions.sol\":\"IGatorV1MarketorActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1MarketorActions.sol\":{\"keccak256\":\"0xcd27934c7288dbf950975c629280d20b5d2b79f3f1d4cda94e866f2b24255fa9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7ea87e856a6e52e3171e4395b05feff4264454f7e5a106117f4f49328aa72492\",\"dweb:/ipfs/QmYZkYNsqvEnKsqN5HLjo2JsWJqksniSkRXkC8bJsPKGJp\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":{\"keccak256\":\"0xdbbcc3e545cc8d7d8eebe4b1dbaccee4d2adbce4785cb7ac5f4712093c72db52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d7251ca8ee12ad7009fe9f280aa8be028502f51e7465fe5314b85b9a2815991\",\"dweb:/ipfs/QmRQ5Z78r3qDKhBbRbDs8d4ThNk5fLN5S5g6tosHwa6jdo\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Contains pool methods that may only be called by the factory owner",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol": {
            "IGatorV1State": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "isValidGator",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Pool state that can change",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "isValidGator()": "54a460f6"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"isValidGator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol\":\"IGatorV1State\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol\":{\"keccak256\":\"0xe3c37b988423c5989fce2b078a598788c052dc23403dff95509d57464bb1c12f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5c3766825c2fa5442d265a5524ae150626d18e235be99d1b485182ebbc9c0e1e\",\"dweb:/ipfs/Qme7hkgr2K3vEUst6YPBaq55dycpXBaffWLKXDSPX3QnvK\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":{\"keccak256\":\"0x6acb4a762f349ab39bd48ff34c150b55f55aabc4826379838391749136f3aee9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58552a104e1a046883cf116fe6748600caf7c8ebe341f82a38aa6fbfb09355cb\",\"dweb:/ipfs/QmQxUAK9fzefN6afoJ2CGyRWtETz1TEcZoJhDFCYJ3WY4V\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Gator.sol": {
            "ITTSwapV1Gator": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "address",
                                        "name": "market",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "gateAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "uint160",
                                        "name": "authority",
                                        "type": "uint160"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "name",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "website",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32[10]",
                                        "name": "webserverip",
                                        "type": "bytes32[10]"
                                    },
                                    {
                                        "internalType": "uint32",
                                        "name": "createtimestamp",
                                        "type": "uint32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LGate.Info",
                                "name": "_gator",
                                "type": "tuple"
                            }
                        ],
                        "name": "addGater",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_gator",
                                "type": "address"
                            }
                        ],
                        "name": "delGatebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "isValidGator",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "lockGatebyGater",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_gatoraddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockGatebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketorContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "unlockGatebyGater",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_gatoraddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockGatebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "address",
                                        "name": "market",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "gateAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "uint160",
                                        "name": "authority",
                                        "type": "uint160"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "name",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "website",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32[10]",
                                        "name": "webserverip",
                                        "type": "bytes32[10]"
                                    },
                                    {
                                        "internalType": "uint32",
                                        "name": "createtimestamp",
                                        "type": "uint32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LGate.Info",
                                "name": "_gator",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateGatebyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "address",
                                        "name": "market",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "gateAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "uint160",
                                        "name": "authority",
                                        "type": "uint160"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "name",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "website",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32[10]",
                                        "name": "webserverip",
                                        "type": "bytes32[10]"
                                    },
                                    {
                                        "internalType": "uint32",
                                        "name": "createtimestamp",
                                        "type": "uint32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LGate.Info",
                                "name": "_gator",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateGatebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "details": "The pool interface is broken up into many smaller pieces",
                    "kind": "dev",
                    "methods": {
                        "marketorContractAddress()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "title": "The interface for a Uniswap V3 Pool",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "addGater((address,address,uint160,bytes32,bytes32,bytes32[10],uint32,bool,bool,bool))": "d8feb7ff",
                        "delGatebyMarketor(address)": "b614984d",
                        "isValidGator()": "54a460f6",
                        "lockGatebyGater()": "3bbae141",
                        "lockGatebyMarketor(address)": "a4786088",
                        "marketorContractAddress()": "492b7107",
                        "unlockGatebyGater()": "f1c9f40f",
                        "unlockGatebyMarketor(address)": "76941300",
                        "updateGatebyGator((address,address,uint160,bytes32,bytes32,bytes32[10],uint32,bool,bool,bool))": "f3a42537",
                        "updateGatebyMarketor((address,address,uint160,bytes32,bytes32,bytes32[10],uint32,bool,bool,bool))": "71271f4d"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"authority\",\"type\":\"uint160\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[10]\",\"name\":\"webserverip\",\"type\":\"bytes32[10]\"},{\"internalType\":\"uint32\",\"name\":\"createtimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"_gator\",\"type\":\"tuple\"}],\"name\":\"addGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gator\",\"type\":\"address\"}],\"name\":\"delGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isValidGator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockGatebyGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gatoraddress\",\"type\":\"address\"}],\"name\":\"lockGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockGatebyGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gatoraddress\",\"type\":\"address\"}],\"name\":\"unlockGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"authority\",\"type\":\"uint160\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[10]\",\"name\":\"webserverip\",\"type\":\"bytes32[10]\"},{\"internalType\":\"uint32\",\"name\":\"createtimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"_gator\",\"type\":\"tuple\"}],\"name\":\"updateGatebyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"authority\",\"type\":\"uint160\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[10]\",\"name\":\"webserverip\",\"type\":\"bytes32[10]\"},{\"internalType\":\"uint32\",\"name\":\"createtimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"_gator\",\"type\":\"tuple\"}],\"name\":\"updateGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"marketorContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"marketorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Gator.sol\":\"ITTSwapV1Gator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1CustomerActions.sol\":{\"keccak256\":\"0x5166995889ad764ce7379845df7e6f55f5114294f18795a07da173466418c010\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c101332272e023fd17dd3e96270424a42aa257e02f14650314bf133ff3105221\",\"dweb:/ipfs/QmUznHitEEPeBRc7PxrUMggmyLveBtW2MJyKGUt8KDrjUn\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Events.sol\":{\"keccak256\":\"0xcddaf97a05e7a5b4706705dd9618ad9a97ebe6559365deaa3bcbe21eef84d462\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0432642546822e3e6bb77c89815cda36aea85154bb8431c0837db1b5fb199dcd\",\"dweb:/ipfs/QmYSkG65spVSpN1WDkF5iFtPSBvYeDWvSNRVpYygR9iJkr\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1GatorActions.sol\":{\"keccak256\":\"0x43e783a765bf4f5a4de8591ceb9556c215372e068e80827637f22aec41460359\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://23b287fe77c961c6f7dc7b7a1591eddd0772b687faf41e7c0400c66114e8a452\",\"dweb:/ipfs/QmVKaaxjY7ya3HSkdUt7zqw2J8BqxMDGvUbUjobVCcUsHk\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Immutables.sol\":{\"keccak256\":\"0x8cbeb007a8321dee1ef73ed11e1af76c30acb64c6829d2c0d02c6f6cb4e8fdc3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://00b5dc4c7cbcec92fdfa6e6d512209d63cf2cac6a1ae6969b853172fc9fb8319\",\"dweb:/ipfs/QmYoRZuN8XvT6eESqy5BFEDxbs12beWtBHgkjxna3Jy7CF\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1MarketorActions.sol\":{\"keccak256\":\"0xcd27934c7288dbf950975c629280d20b5d2b79f3f1d4cda94e866f2b24255fa9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7ea87e856a6e52e3171e4395b05feff4264454f7e5a106117f4f49328aa72492\",\"dweb:/ipfs/QmYZkYNsqvEnKsqN5HLjo2JsWJqksniSkRXkC8bJsPKGJp\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol\":{\"keccak256\":\"0xe3c37b988423c5989fce2b078a598788c052dc23403dff95509d57464bb1c12f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5c3766825c2fa5442d265a5524ae150626d18e235be99d1b485182ebbc9c0e1e\",\"dweb:/ipfs/Qme7hkgr2K3vEUst6YPBaq55dycpXBaffWLKXDSPX3QnvK\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Gator.sol\":{\"keccak256\":\"0xcc6a9f594874f75e8f19b2d65a3d0892bd9d3f75636e93e8d52cf4aea6703652\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c434a90d0ac2d2afc87a43147c85d3f9d48530eb2cd8fd2b491262be8a7238db\",\"dweb:/ipfs/QmWyyaWVvSVVduUiS3vKQ4guLHnP4ugcCQp46kNvLsz2iJ\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":{\"keccak256\":\"0x6acb4a762f349ab39bd48ff34c150b55f55aabc4826379838391749136f3aee9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58552a104e1a046883cf116fe6748600caf7c8ebe341f82a38aa6fbfb09355cb\",\"dweb:/ipfs/QmQxUAK9fzefN6afoJ2CGyRWtETz1TEcZoJhDFCYJ3WY4V\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":{\"keccak256\":\"0xdbbcc3e545cc8d7d8eebe4b1dbaccee4d2adbce4785cb7ac5f4712093c72db52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d7251ca8ee12ad7009fe9f280aa8be028502f51e7465fe5314b85b9a2815991\",\"dweb:/ipfs/QmRQ5Z78r3qDKhBbRbDs8d4ThNk5fLN5S5g6tosHwa6jdo\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "marketorContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        }
                    },
                    "notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol": {
            "LCustomer": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208604bc6434f4003f527ebdca05addb404cd4ddc5709077507b21bd6a7178cda864736f6c634300080f0033",
                        "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DIV 0xBC PUSH5 0x34F4003F52 PUSH31 0xBDCA05ADDB404CD4DDC5709077507B21BD6A7178CDA864736F6C634300080F STOP CALLER ",
                        "sourceMap": "70:677:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;70:677:7;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208604bc6434f4003f527ebdca05addb404cd4ddc5709077507b21bd6a7178cda864736f6c634300080f0033",
                        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DIV 0xBC PUSH5 0x34F4003F52 PUSH31 0xBDCA05ADDB404CD4DDC5709077507B21BD6A7178CDA864736F6C634300080F STOP CALLER ",
                        "sourceMap": "70:677:7:-:0;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "17200",
                            "executionCost": "103",
                            "totalCost": "17303"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":\"LCustomer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":{\"keccak256\":\"0x6acb4a762f349ab39bd48ff34c150b55f55aabc4826379838391749136f3aee9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58552a104e1a046883cf116fe6748600caf7c8ebe341f82a38aa6fbfb09355cb\",\"dweb:/ipfs/QmQxUAK9fzefN6afoJ2CGyRWtETz1TEcZoJhDFCYJ3WY4V\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol": {
            "LGate": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c9fd77834cb97cc9a5188fb3f3c1400e5093fe255ad00a92b14c1013e566a6564736f6c634300080f0033",
                        "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC SWAP16 0xD7 PUSH25 0x34CB97CC9A5188FB3F3C1400E5093FE255AD00A92B14C1013E JUMP PUSH11 0x6564736F6C634300080F00 CALLER ",
                        "sourceMap": "70:900:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;70:900:8;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c9fd77834cb97cc9a5188fb3f3c1400e5093fe255ad00a92b14c1013e566a6564736f6c634300080f0033",
                        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC SWAP16 0xD7 PUSH25 0x34CB97CC9A5188FB3F3C1400E5093FE255AD00A92B14C1013E JUMP PUSH11 0x6564736F6C634300080F00 CALLER ",
                        "sourceMap": "70:900:8:-:0;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "17200",
                            "executionCost": "103",
                            "totalCost": "17303"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":\"LGate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":{\"keccak256\":\"0xdbbcc3e545cc8d7d8eebe4b1dbaccee4d2adbce4785cb7ac5f4712093c72db52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d7251ca8ee12ad7009fe9f280aa8be028502f51e7465fe5314b85b9a2815991\",\"dweb:/ipfs/QmRQ5Z78r3qDKhBbRbDs8d4ThNk5fLN5S5g6tosHwa6jdo\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        }
    },
    "sources": {
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1CustomerActions.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1CustomerActions.sol",
                "exportedSymbols": {
                    "IGatorV1CustomerActions": [
                        10
                    ],
                    "LGate": [
                        147
                    ]
                },
                "id": 11,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:0"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol",
                        "file": "../../libraries/base/LGate.sol",
                        "id": 2,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 11,
                        "sourceUnit": 148,
                        "src": "69:40:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IGatorV1CustomerActions",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 3,
                            "nodeType": "StructuredDocumentation",
                            "src": "111:116:0",
                            "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
                        },
                        "fullyImplemented": false,
                        "id": 10,
                        "linearizedBaseContracts": [
                            10
                        ],
                        "name": "IGatorV1CustomerActions",
                        "nameLocation": "237:23:0",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "d8feb7ff",
                                "id": 9,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "addGater",
                                "nameLocation": "276:8:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 7,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 6,
                                            "mutability": "mutable",
                                            "name": "_gator",
                                            "nameLocation": "303:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 9,
                                            "src": "285:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$146_memory_ptr",
                                                "typeString": "struct LGate.Info"
                                            },
                                            "typeName": {
                                                "id": 5,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 4,
                                                    "name": "LGate.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 146,
                                                    "src": "285:10:0"
                                                },
                                                "referencedDeclaration": 146,
                                                "src": "285:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$146_storage_ptr",
                                                    "typeString": "struct LGate.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "284:26:0"
                                },
                                "returnParameters": {
                                    "id": 8,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "319:0:0"
                                },
                                "scope": 10,
                                "src": "267:53:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 11,
                        "src": "227:95:0",
                        "usedErrors": []
                    }
                ],
                "src": "45:278:0"
            },
            "id": 0
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Events.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Events.sol",
                "exportedSymbols": {
                    "IGatorV1Events": [
                        14
                    ]
                },
                "id": 15,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 12,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:1"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IGatorV1Events",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 13,
                            "nodeType": "StructuredDocumentation",
                            "src": "70:88:1",
                            "text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
                        },
                        "fullyImplemented": true,
                        "id": 14,
                        "linearizedBaseContracts": [
                            14
                        ],
                        "name": "IGatorV1Events",
                        "nameLocation": "168:14:1",
                        "nodeType": "ContractDefinition",
                        "nodes": [],
                        "scope": 15,
                        "src": "158:29:1",
                        "usedErrors": []
                    }
                ],
                "src": "45:143:1"
            },
            "id": 1
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1GatorActions.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1GatorActions.sol",
                "exportedSymbols": {
                    "IGatorV1GatorActions": [
                        31
                    ],
                    "LGate": [
                        147
                    ]
                },
                "id": 32,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 16,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:2"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol",
                        "file": "../../libraries/base/LGate.sol",
                        "id": 17,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 32,
                        "sourceUnit": 148,
                        "src": "69:40:2",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IGatorV1GatorActions",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 18,
                            "nodeType": "StructuredDocumentation",
                            "src": "111:116:2",
                            "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
                        },
                        "fullyImplemented": false,
                        "id": 31,
                        "linearizedBaseContracts": [
                            31
                        ],
                        "name": "IGatorV1GatorActions",
                        "nameLocation": "237:20:2",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "3bbae141",
                                "id": 21,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "lockGatebyGater",
                                "nameLocation": "273:15:2",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 19,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "288:2:2"
                                },
                                "returnParameters": {
                                    "id": 20,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "299:0:2"
                                },
                                "scope": 31,
                                "src": "264:36:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "f1c9f40f",
                                "id": 24,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "unlockGatebyGater",
                                "nameLocation": "315:17:2",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 22,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "332:2:2"
                                },
                                "returnParameters": {
                                    "id": 23,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "343:0:2"
                                },
                                "scope": 31,
                                "src": "306:38:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "f3a42537",
                                "id": 30,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "updateGatebyGator",
                                "nameLocation": "384:17:2",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 28,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 27,
                                            "mutability": "mutable",
                                            "name": "_gator",
                                            "nameLocation": "420:6:2",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 30,
                                            "src": "402:24:2",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$146_memory_ptr",
                                                "typeString": "struct LGate.Info"
                                            },
                                            "typeName": {
                                                "id": 26,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 25,
                                                    "name": "LGate.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 146,
                                                    "src": "402:10:2"
                                                },
                                                "referencedDeclaration": 146,
                                                "src": "402:10:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$146_storage_ptr",
                                                    "typeString": "struct LGate.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "401:26:2"
                                },
                                "returnParameters": {
                                    "id": 29,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "436:0:2"
                                },
                                "scope": 31,
                                "src": "375:62:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 32,
                        "src": "227:212:2",
                        "usedErrors": []
                    }
                ],
                "src": "45:395:2"
            },
            "id": 2
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Immutables.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Immutables.sol",
                "exportedSymbols": {
                    "IGatorV1Immutables": [
                        41
                    ]
                },
                "id": 42,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 33,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:3"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IGatorV1Immutables",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 34,
                            "nodeType": "StructuredDocumentation",
                            "src": "70:153:3",
                            "text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
                        },
                        "fullyImplemented": false,
                        "id": 41,
                        "linearizedBaseContracts": [
                            41
                        ],
                        "name": "IGatorV1Immutables",
                        "nameLocation": "233:18:3",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "documentation": {
                                    "id": 35,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "258:138:3",
                                    "text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
                                },
                                "functionSelector": "492b7107",
                                "id": 40,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "marketorContractAddress",
                                "nameLocation": "410:23:3",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 36,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "433:2:3"
                                },
                                "returnParameters": {
                                    "id": 39,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 38,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 40,
                                            "src": "459:7:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 37,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "459:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "458:9:3"
                                },
                                "scope": 41,
                                "src": "401:67:3",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 42,
                        "src": "223:247:3",
                        "usedErrors": []
                    }
                ],
                "src": "45:426:3"
            },
            "id": 3
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1MarketorActions.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1MarketorActions.sol",
                "exportedSymbols": {
                    "IGatorV1MarketorActions": [
                        67
                    ],
                    "LGate": [
                        147
                    ]
                },
                "id": 68,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 43,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:4"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol",
                        "file": "../../libraries/base/LGate.sol",
                        "id": 44,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 68,
                        "sourceUnit": 148,
                        "src": "69:40:4",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IGatorV1MarketorActions",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 45,
                            "nodeType": "StructuredDocumentation",
                            "src": "111:116:4",
                            "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
                        },
                        "fullyImplemented": false,
                        "id": 67,
                        "linearizedBaseContracts": [
                            67
                        ],
                        "name": "IGatorV1MarketorActions",
                        "nameLocation": "237:23:4",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "a4786088",
                                "id": 50,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "lockGatebyMarketor",
                                "nameLocation": "276:18:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 48,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 47,
                                            "mutability": "mutable",
                                            "name": "_gatoraddress",
                                            "nameLocation": "303:13:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 50,
                                            "src": "295:21:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 46,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "295:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "294:23:4"
                                },
                                "returnParameters": {
                                    "id": 49,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "326:0:4"
                                },
                                "scope": 67,
                                "src": "267:60:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "76941300",
                                "id": 55,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "unlockGatebyMarketor",
                                "nameLocation": "342:20:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 53,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 52,
                                            "mutability": "mutable",
                                            "name": "_gatoraddress",
                                            "nameLocation": "371:13:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 55,
                                            "src": "363:21:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 51,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "363:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "362:23:4"
                                },
                                "returnParameters": {
                                    "id": 54,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "394:0:4"
                                },
                                "scope": 67,
                                "src": "333:62:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "71271f4d",
                                "id": 61,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "updateGatebyMarketor",
                                "nameLocation": "475:20:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 59,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 58,
                                            "mutability": "mutable",
                                            "name": "_gator",
                                            "nameLocation": "514:6:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 61,
                                            "src": "496:24:4",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$146_memory_ptr",
                                                "typeString": "struct LGate.Info"
                                            },
                                            "typeName": {
                                                "id": 57,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 56,
                                                    "name": "LGate.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 146,
                                                    "src": "496:10:4"
                                                },
                                                "referencedDeclaration": 146,
                                                "src": "496:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$146_storage_ptr",
                                                    "typeString": "struct LGate.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "495:26:4"
                                },
                                "returnParameters": {
                                    "id": 60,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "530:0:4"
                                },
                                "scope": 67,
                                "src": "466:65:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "b614984d",
                                "id": 66,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "delGatebyMarketor",
                                "nameLocation": "546:17:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 64,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 63,
                                            "mutability": "mutable",
                                            "name": "_gator",
                                            "nameLocation": "572:6:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 66,
                                            "src": "564:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 62,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "564:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "563:16:4"
                                },
                                "returnParameters": {
                                    "id": 65,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "588:0:4"
                                },
                                "scope": 67,
                                "src": "537:52:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 68,
                        "src": "227:364:4",
                        "usedErrors": []
                    }
                ],
                "src": "45:547:4"
            },
            "id": 4
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol",
                "exportedSymbols": {
                    "IGatorV1State": [
                        77
                    ],
                    "LCustomer": [
                        121
                    ]
                },
                "id": 78,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 69,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:5"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol",
                        "file": "../../libraries/base/LCustomer.sol",
                        "id": 70,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 78,
                        "sourceUnit": 122,
                        "src": "70:44:5",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IGatorV1State",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 71,
                            "nodeType": "StructuredDocumentation",
                            "src": "116:169:5",
                            "text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
                        },
                        "fullyImplemented": false,
                        "id": 77,
                        "linearizedBaseContracts": [
                            77
                        ],
                        "name": "IGatorV1State",
                        "nameLocation": "295:13:5",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "54a460f6",
                                "id": 76,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isValidGator",
                                "nameLocation": "324:12:5",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 72,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "336:2:5"
                                },
                                "returnParameters": {
                                    "id": 75,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 74,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 76,
                                            "src": "362:4:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 73,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "362:4:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "361:6:5"
                                },
                                "scope": 77,
                                "src": "315:53:5",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 78,
                        "src": "285:85:5",
                        "usedErrors": []
                    }
                ],
                "src": "45:326:5"
            },
            "id": 5
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Gator.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Gator.sol",
                "exportedSymbols": {
                    "IGatorV1CustomerActions": [
                        10
                    ],
                    "IGatorV1Events": [
                        14
                    ],
                    "IGatorV1GatorActions": [
                        31
                    ],
                    "IGatorV1Immutables": [
                        41
                    ],
                    "IGatorV1MarketorActions": [
                        67
                    ],
                    "IGatorV1State": [
                        77
                    ],
                    "ITTSwapV1Gator": [
                        99
                    ],
                    "LCustomer": [
                        121
                    ],
                    "LGate": [
                        147
                    ]
                },
                "id": 100,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 79,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:6"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1CustomerActions.sol",
                        "file": "./Gator/IGatorV1CustomerActions.sol",
                        "id": 80,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 100,
                        "sourceUnit": 11,
                        "src": "70:45:6",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Events.sol",
                        "file": "./Gator/IGatorV1Events.sol",
                        "id": 81,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 100,
                        "sourceUnit": 15,
                        "src": "116:36:6",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1GatorActions.sol",
                        "file": "./Gator/IGatorV1GatorActions.sol",
                        "id": 82,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 100,
                        "sourceUnit": 32,
                        "src": "153:42:6",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1Immutables.sol",
                        "file": "./Gator/IGatorV1Immutables.sol",
                        "id": 83,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 100,
                        "sourceUnit": 42,
                        "src": "196:40:6",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1MarketorActions.sol",
                        "file": "./Gator/IGatorV1MarketorActions.sol",
                        "id": 84,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 100,
                        "sourceUnit": 68,
                        "src": "237:45:6",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol",
                        "file": "./Gator/IGatorV1State.sol",
                        "id": 85,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 100,
                        "sourceUnit": 78,
                        "src": "283:35:6",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 87,
                                    "name": "IGatorV1CustomerActions",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 10,
                                    "src": "617:23:6"
                                },
                                "id": 88,
                                "nodeType": "InheritanceSpecifier",
                                "src": "617:23:6"
                            },
                            {
                                "baseName": {
                                    "id": 89,
                                    "name": "IGatorV1Events",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 14,
                                    "src": "646:14:6"
                                },
                                "id": 90,
                                "nodeType": "InheritanceSpecifier",
                                "src": "646:14:6"
                            },
                            {
                                "baseName": {
                                    "id": 91,
                                    "name": "IGatorV1GatorActions",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 31,
                                    "src": "666:20:6"
                                },
                                "id": 92,
                                "nodeType": "InheritanceSpecifier",
                                "src": "666:20:6"
                            },
                            {
                                "baseName": {
                                    "id": 93,
                                    "name": "IGatorV1Immutables",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 41,
                                    "src": "692:18:6"
                                },
                                "id": 94,
                                "nodeType": "InheritanceSpecifier",
                                "src": "692:18:6"
                            },
                            {
                                "baseName": {
                                    "id": 95,
                                    "name": "IGatorV1MarketorActions",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 67,
                                    "src": "716:23:6"
                                },
                                "id": 96,
                                "nodeType": "InheritanceSpecifier",
                                "src": "716:23:6"
                            },
                            {
                                "baseName": {
                                    "id": 97,
                                    "name": "IGatorV1State",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 77,
                                    "src": "745:13:6"
                                },
                                "id": 98,
                                "nodeType": "InheritanceSpecifier",
                                "src": "745:13:6"
                            }
                        ],
                        "canonicalName": "ITTSwapV1Gator",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 86,
                            "nodeType": "StructuredDocumentation",
                            "src": "320:265:6",
                            "text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
                        },
                        "fullyImplemented": false,
                        "id": 99,
                        "linearizedBaseContracts": [
                            99,
                            77,
                            67,
                            41,
                            31,
                            14,
                            10
                        ],
                        "name": "ITTSwapV1Gator",
                        "nameLocation": "595:14:6",
                        "nodeType": "ContractDefinition",
                        "nodes": [],
                        "scope": 100,
                        "src": "585:178:6",
                        "usedErrors": []
                    }
                ],
                "src": "45:719:6"
            },
            "id": 6
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol",
                "exportedSymbols": {
                    "LCustomer": [
                        121
                    ]
                },
                "id": 122,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 101,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:7"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "LCustomer",
                        "contractDependencies": [],
                        "contractKind": "library",
                        "fullyImplemented": true,
                        "id": 121,
                        "linearizedBaseContracts": [
                            121
                        ],
                        "name": "LCustomer",
                        "nameLocation": "78:9:7",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "canonicalName": "LCustomer.Info",
                                "id": 120,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 103,
                                        "mutability": "mutable",
                                        "name": "neckname",
                                        "nameLocation": "246:8:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 120,
                                        "src": "238:16:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 102,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "238:7:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 105,
                                        "mutability": "mutable",
                                        "name": "createtimestamp",
                                        "nameLocation": "359:15:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 120,
                                        "src": "352:22:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                        },
                                        "typeName": {
                                            "id": 104,
                                            "name": "uint32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "352:6:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 107,
                                        "mutability": "mutable",
                                        "name": "recommender",
                                        "nameLocation": "480:11:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 120,
                                        "src": "472:19:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 106,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "472:7:7",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 109,
                                        "mutability": "mutable",
                                        "name": "customerKey",
                                        "nameLocation": "544:11:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 120,
                                        "src": "537:18:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint40",
                                            "typeString": "uint40"
                                        },
                                        "typeName": {
                                            "id": 108,
                                            "name": "uint40",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "537:6:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint40",
                                                "typeString": "uint40"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 111,
                                        "mutability": "mutable",
                                        "name": "Gater",
                                        "nameLocation": "609:5:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 120,
                                        "src": "601:13:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 110,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "601:7:7",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 113,
                                        "mutability": "mutable",
                                        "name": "GaterKey",
                                        "nameLocation": "631:8:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 120,
                                        "src": "624:15:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                        },
                                        "typeName": {
                                            "id": 112,
                                            "name": "uint32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "624:6:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 115,
                                        "mutability": "mutable",
                                        "name": "contractAddress",
                                        "nameLocation": "681:15:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 120,
                                        "src": "673:23:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 114,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "673:7:7",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 117,
                                        "mutability": "mutable",
                                        "name": "isUsed",
                                        "nameLocation": "711:6:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 120,
                                        "src": "706:11:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 116,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "706:4:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 119,
                                        "mutability": "mutable",
                                        "name": "unlock",
                                        "nameLocation": "732:6:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 120,
                                        "src": "727:11:7",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 118,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "727:4:7",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "Info",
                                "nameLocation": "101:4:7",
                                "nodeType": "StructDefinition",
                                "scope": 121,
                                "src": "94:651:7",
                                "visibility": "public"
                            }
                        ],
                        "scope": 122,
                        "src": "70:677:7",
                        "usedErrors": []
                    }
                ],
                "src": "45:703:7"
            },
            "id": 7
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol",
                "exportedSymbols": {
                    "LGate": [
                        147
                    ]
                },
                "id": 148,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 123,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:8"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "LGate",
                        "contractDependencies": [],
                        "contractKind": "library",
                        "fullyImplemented": true,
                        "id": 147,
                        "linearizedBaseContracts": [
                            147
                        ],
                        "name": "LGate",
                        "nameLocation": "78:5:8",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "canonicalName": "LGate.Info",
                                "id": 146,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 125,
                                        "mutability": "mutable",
                                        "name": "market",
                                        "nameLocation": "187:6:8",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 146,
                                        "src": "179:14:8",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 124,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "179:7:8",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 127,
                                        "mutability": "mutable",
                                        "name": "gateAddress",
                                        "nameLocation": "233:11:8",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 146,
                                        "src": "225:19:8",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 126,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "225:7:8",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 129,
                                        "mutability": "mutable",
                                        "name": "authority",
                                        "nameLocation": "335:9:8",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 146,
                                        "src": "327:17:8",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint160",
                                            "typeString": "uint160"
                                        },
                                        "typeName": {
                                            "id": 128,
                                            "name": "uint160",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "327:7:8",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint160",
                                                "typeString": "uint160"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 131,
                                        "mutability": "mutable",
                                        "name": "name",
                                        "nameLocation": "435:4:8",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 146,
                                        "src": "427:12:8",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 130,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "427:7:8",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 133,
                                        "mutability": "mutable",
                                        "name": "website",
                                        "nameLocation": "541:7:8",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 146,
                                        "src": "533:15:8",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 132,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "533:7:8",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 137,
                                        "mutability": "mutable",
                                        "name": "webserverip",
                                        "nameLocation": "657:11:8",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 146,
                                        "src": "645:23:8",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_bytes32_$10_storage_ptr",
                                            "typeString": "bytes32[10]"
                                        },
                                        "typeName": {
                                            "baseType": {
                                                "id": 134,
                                                "name": "bytes32",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "645:7:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "id": 136,
                                            "length": {
                                                "hexValue": "3130",
                                                "id": 135,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "653:2:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                },
                                                "value": "10"
                                            },
                                            "nodeType": "ArrayTypeName",
                                            "src": "645:11:8",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_bytes32_$10_storage_ptr",
                                                "typeString": "bytes32[10]"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 139,
                                        "mutability": "mutable",
                                        "name": "createtimestamp",
                                        "nameLocation": "785:15:8",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 146,
                                        "src": "778:22:8",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                        },
                                        "typeName": {
                                            "id": 138,
                                            "name": "uint32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "778:6:8",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 141,
                                        "mutability": "mutable",
                                        "name": "marketunlock",
                                        "nameLocation": "876:12:8",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 146,
                                        "src": "871:17:8",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 140,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "871:4:8",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 143,
                                        "mutability": "mutable",
                                        "name": "unlock",
                                        "nameLocation": "934:6:8",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 146,
                                        "src": "929:11:8",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 142,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "929:4:8",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 145,
                                        "mutability": "mutable",
                                        "name": "isUsed",
                                        "nameLocation": "955:6:8",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 146,
                                        "src": "950:11:8",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 144,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "950:4:8",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "Info",
                                "nameLocation": "97:4:8",
                                "nodeType": "StructDefinition",
                                "scope": 147,
                                "src": "90:878:8",
                                "visibility": "public"
                            }
                        ],
                        "scope": 148,
                        "src": "70:900:8",
                        "usedErrors": []
                    }
                ],
                "src": "45:926:8"
            },
            "id": 8
        }
    }
}