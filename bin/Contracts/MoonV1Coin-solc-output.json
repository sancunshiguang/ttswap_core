{
    "contracts": {
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol": {
            "MoonV1Coin": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_gateContractAddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_marketorContractAddress",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "addCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "addCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            },
                            {
                                "internalType": "uint8",
                                "name": "_scope",
                                "type": "uint8"
                            }
                        ],
                        "name": "changeCoinScopebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "coinList",
                        "outputs": [
                            {
                                "internalType": "bytes32",
                                "name": "coinFullName",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "bytes6",
                                "name": "symbol",
                                "type": "bytes6"
                            },
                            {
                                "internalType": "uint8",
                                "name": "scope",
                                "type": "uint8"
                            },
                            {
                                "internalType": "uint8",
                                "name": "decimals",
                                "type": "uint8"
                            },
                            {
                                "internalType": "uint256",
                                "name": "maxSupply",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "totalSupply",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "contractAddress",
                                "type": "address"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "WhitePaperUrl",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "OfficalWebsite",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "blockExplorerUrl",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "bool",
                                "name": "marketunlock",
                                "type": "bool"
                            },
                            {
                                "internalType": "bool",
                                "name": "unlock",
                                "type": "bool"
                            },
                            {
                                "internalType": "address",
                                "name": "creator",
                                "type": "address"
                            },
                            {
                                "internalType": "bool",
                                "name": "isUsed",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            }
                        ],
                        "name": "delCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_gateaddress",
                                "type": "address"
                            }
                        ],
                        "name": "delGateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "gateCoinList",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "gateContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            }
                        ],
                        "name": "getCoinInfo",
                        "outputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "",
                                "type": "tuple"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_gateaddress",
                                "type": "address"
                            }
                        ],
                        "name": "impoveGateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_coinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "isValidCoin",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "marketCoinList",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketorContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": {
                            "details": "Explain to a developer any extra details"
                        }
                    },
                    "stateVariables": {
                        "gateContractAddress": {
                            "return": "The contract address",
                            "returns": {
                                "_0": "The contract address"
                            }
                        },
                        "marketorContractAddress": {
                            "return": "The contract address",
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {
                            "@_42": {
                                "entryPoint": null,
                                "id": 42,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "abi_decode_address_fromMemory": {
                                "entryPoint": 76,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_decode_tuple_t_addresst_address_fromMemory": {
                                "entryPoint": 105,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 2
                            }
                        },
                        "generatedSources": [
                            {
                                "ast": {
                                    "nodeType": "YulBlock",
                                    "src": "0:491:18",
                                    "statements": [
                                        {
                                            "nodeType": "YulBlock",
                                            "src": "6:3:18",
                                            "statements": []
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "74:117:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "84:22:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "99:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "93:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "93:13:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "84:5:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "169:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "178:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "181:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "171:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "171:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "171:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "128:5:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "139:5:18"
                                                                                },
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "154:3:18",
                                                                                                    "type": "",
                                                                                                    "value": "160"
                                                                                                },
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "159:1:18",
                                                                                                    "type": "",
                                                                                                    "value": "1"
                                                                                                }
                                                                                            ],
                                                                                            "functionName": {
                                                                                                "name": "shl",
                                                                                                "nodeType": "YulIdentifier",
                                                                                                "src": "150:3:18"
                                                                                            },
                                                                                            "nodeType": "YulFunctionCall",
                                                                                            "src": "150:11:18"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "163:1:18",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "sub",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "146:3:18"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "146:19:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "135:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "135:31:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "125:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "125:42:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "118:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "118:50:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "115:70:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_address_fromMemory",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "53:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "64:5:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "14:177:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "294:195:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "340:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "349:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "352:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "342:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "342:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "342:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "315:7:18"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "324:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "311:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "311:23:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "336:2:18",
                                                                    "type": "",
                                                                    "value": "64"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "307:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "307:32:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "304:52:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "365:50:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "405:9:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address_fromMemory",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "375:29:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "375:40:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "365:6:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "424:59:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "468:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "479:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "464:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "464:18:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address_fromMemory",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "434:29:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "434:49:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value1",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "424:6:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "252:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "263:7:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "275:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value1",
                                                    "nodeType": "YulTypedName",
                                                    "src": "283:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "196:293:18"
                                        }
                                    ]
                                },
                                "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
                                "id": 18,
                                "language": "Yul",
                                "name": "#utility.yul"
                            }
                        ],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1EC9 CODESIZE SUB DUP1 PUSH3 0x1EC9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH3 0xA1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x88 DUP4 PUSH3 0x4C JUMP JUMPDEST SWAP2 POP PUSH3 0x98 PUSH1 0x20 DUP5 ADD PUSH3 0x4C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1DAE PUSH3 0x11B PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2D6 ADD MSTORE DUP2 DUP2 PUSH2 0x3E6 ADD MSTORE DUP2 DUP2 PUSH2 0x498 ADD MSTORE DUP2 DUP2 PUSH2 0x89D ADD MSTORE DUP2 DUP2 PUSH2 0x965 ADD MSTORE DUP2 DUP2 PUSH2 0xA4F ADD MSTORE DUP2 DUP2 PUSH2 0x105B ADD MSTORE DUP2 DUP2 PUSH2 0x110A ADD MSTORE PUSH2 0x1879 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x153 ADD MSTORE DUP2 DUP2 PUSH2 0x6AC ADD MSTORE DUP2 DUP2 PUSH2 0x7AB ADD MSTORE DUP2 DUP2 PUSH2 0xDE5 ADD MSTORE PUSH2 0x1434 ADD MSTORE PUSH2 0x1DAE PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5385CBF5 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCC0BF757 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCC0BF757 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xCFCDCA52 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xE8DD4655 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xE911ABEC EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xEAEC0112 EQ PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5385CBF5 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x7C3E2F02 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x87A70938 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xA935B6AF EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xB20BE2B4 EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x328320BF GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x328320BF EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x385E4B7A EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x3B830305 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x441EB548 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x492B7107 EQ PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D3B8F67 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x24FD7139 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x2F17D5DF EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x31ECDEB8 EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH2 0x175 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP8 PUSH1 0xD0 DUP2 SWAP1 SHL SWAP8 PUSH1 0xFF PUSH1 0x1 PUSH1 0x30 SHL DUP4 DIV DUP2 AND SWAP9 PUSH1 0x1 PUSH1 0x38 SHL SWAP1 SWAP4 DIV DUP2 AND SWAP8 SWAP7 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 SWAP5 SWAP4 DUP1 DUP4 AND SWAP3 PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH3 0x10000 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV AND DUP15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP15 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B1D JUMP JUMPDEST PUSH2 0x272 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x189 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x175 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x175 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBD JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST PUSH2 0x139 PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x139 PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x1059 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0x139 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x1877 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x442 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x54A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD DUP2 DUP2 MSTORE PUSH2 0x160 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 PUSH1 0x8 SWAP1 DUP2 ADD SLOAD PUSH3 0x10000 SWAP1 DUP2 SWAP1 DIV DUP7 AND PUSH2 0x180 DUP15 ADD SWAP1 DUP2 MSTORE DUP8 MLOAD DUP8 AND DUP14 MSTORE DUP6 DUP6 MSTORE SWAP12 DUP4 SWAP1 KECCAK256 DUP14 MLOAD DUP2 SSTORE SWAP4 DUP14 ADD MLOAD SWAP9 DUP5 ADD DUP1 SLOAD SWAP4 DUP15 ADD MLOAD PUSH1 0x60 DUP16 ADD MLOAD PUSH1 0xD0 SWAP12 SWAP1 SWAP12 SHR PUSH7 0xFFFFFFFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x30 SHL PUSH1 0xFF SWAP6 DUP7 AND MUL OR PUSH1 0xFF PUSH1 0x38 SHL NOT AND PUSH1 0x1 PUSH1 0x38 SHL SWAP5 SWAP1 SWAP11 AND SWAP4 SWAP1 SWAP4 MUL SWAP9 SWAP1 SWAP9 OR SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP12 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xA0 DUP11 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE SWAP3 MLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP10 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x120 SWAP1 SWAP10 ADD MLOAD PUSH1 0x7 DUP5 ADD SSTORE SWAP6 MLOAD SWAP2 SWAP1 SWAP6 ADD DUP1 SLOAD SWAP5 MLOAD SWAP7 MLOAD SWAP3 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP2 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP2 SWAP1 SWAP2 OR SWAP6 ISZERO ISZERO SWAP1 SWAP7 MUL SWAP5 SWAP1 SWAP5 OR PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP4 SWAP1 SWAP3 AND SWAP1 SWAP2 MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xB0 SHL SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAB3ACB5C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x708 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x72C SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAB3ACB5C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x807 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91D SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x30 SHL MUL PUSH7 0xFF000000000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0xA26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACF SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0xAD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xD45 JUMPI CALLER DUP2 PUSH2 0x180 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x140 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x160 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH2 0x1A0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xD0 SHR MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 DUP1 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2065786973747320696E20746865206D61726B6574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x777 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAB3ACB5C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE65 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0xEB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND PUSH1 0x4 EQ PUSH2 0xF0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2073636F7065206973206E6F74206A757374696669656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x777 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD DUP2 DUP2 MSTORE PUSH2 0x160 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP6 ADD DUP2 DUP2 MSTORE CALLER PUSH2 0x180 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xC0 DUP8 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP10 DUP11 SWAP1 KECCAK256 DUP12 MLOAD DUP2 SSTORE SWAP1 DUP12 ADD MLOAD SWAP7 DUP2 ADD DUP1 SLOAD SWAP11 DUP13 ADD MLOAD PUSH1 0x60 DUP14 ADD MLOAD PUSH1 0xD0 SWAP10 SWAP1 SWAP10 SHR PUSH7 0xFFFFFFFFFFFFFF NOT SWAP1 SWAP13 AND SWAP12 SWAP1 SWAP12 OR PUSH1 0x1 PUSH1 0x30 SHL PUSH1 0xFF SWAP13 DUP14 AND MUL OR PUSH1 0xFF PUSH1 0x38 SHL NOT AND PUSH1 0x1 PUSH1 0x38 SHL SWAP12 SWAP1 SWAP9 AND SWAP11 SWAP1 SWAP11 MUL SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP9 SSTORE PUSH1 0x80 DUP10 ADD MLOAD SWAP8 DUP6 ADD SWAP8 SWAP1 SWAP8 SSTORE PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE MLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH2 0x100 DUP1 DUP9 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x120 SWAP1 SWAP8 ADD MLOAD PUSH1 0x7 DUP5 ADD SSTORE SWAP4 MLOAD PUSH1 0x8 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP4 MLOAD SWAP5 MLOAD SWAP2 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP3 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP3 SWAP1 SWAP3 OR SWAP4 ISZERO ISZERO SWAP1 SWAP6 MUL SWAP3 SWAP1 SWAP3 OR PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND PUSH3 0x10000 SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xB0 SHL SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10DB SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x10E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1166 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118A SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x1193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND PUSH2 0x11D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E206973202065786973747320696E206D61726B6574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x777 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP5 AND DUP4 MSTORE DUP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 DUP5 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP4 SSTORE SWAP3 SWAP1 SWAP3 MSTORE DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1C0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1A0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1348 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x1C0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT PUSH1 0xD0 DUP3 SWAP1 SHL AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x30 SHL DUP5 DIV DUP2 AND SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x38 SHL SWAP1 SWAP3 DIV DUP5 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP5 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH2 0x100 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x8 SWAP1 SWAP3 ADD SLOAD DUP1 DUP5 AND ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE SWAP2 DUP3 DIV DUP4 AND ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE PUSH3 0x10000 DUP3 DIV SWAP1 SWAP4 AND PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV AND ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAB3ACB5C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1490 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B4 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x14BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x174E JUMPI CALLER DUP2 PUSH2 0x180 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x140 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x160 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH2 0x1A0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xD0 SHR MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x17BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2065786973747320696E20746865206D61726B6574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x777 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND ISZERO PUSH2 0x1833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2065786973747320696E2074686520676174650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x777 JUMP JUMPDEST PUSH1 0xC0 ADD DUP1 MLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18F9 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x1902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x1947 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B6 DUP3 PUSH2 0x197F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x19EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1996 DUP2 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A52 PUSH2 0x19BD JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE PUSH2 0x1A62 PUSH1 0x20 DUP5 ADD PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1A73 PUSH1 0x40 DUP5 ADD PUSH2 0x1A0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1A84 PUSH1 0x60 DUP5 ADD PUSH2 0x1A0D JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x1AA9 PUSH1 0xC0 DUP5 ADD PUSH2 0x197F JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x1ADC DUP2 DUP6 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0x1AEE DUP5 DUP3 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x180 PUSH2 0x1B00 DUP5 DUP3 ADD PUSH2 0x197F JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 PUSH2 0x1B12 DUP5 DUP3 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP15 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT DUP15 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xFF DUP14 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP13 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C0 DUP2 ADD DUP12 PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1B67 PUSH1 0xC0 DUP4 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST DUP9 PUSH1 0xE0 DUP4 ADD MSTORE DUP8 PUSH2 0x100 DUP4 ADD MSTORE DUP7 PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x1B8A PUSH2 0x140 DUP4 ADD DUP8 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH2 0x180 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x1A0 SWAP1 SWAP2 ADD MSTORE SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BD9 DUP4 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE7 PUSH1 0x20 DUP5 ADD PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C0C DUP4 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE7 PUSH1 0x20 DUP5 ADD PUSH2 0x197F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH2 0x1C0 DUP4 ADD SWAP2 PUSH2 0x1C3F SWAP1 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1C54 PUSH1 0x40 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1C69 PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1C98 PUSH1 0xC0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 DUP2 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x140 DUP1 DUP5 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x160 DUP1 DUP5 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x180 DUP1 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH2 0x1A0 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19B6 DUP2 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x1E5BDD481A185D99481B9BDD081D1A19481C9A59DA1D PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x74686520636F696E206973206E6F7420657869737473 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0x4C PUSH21 0x129FE6C2C4B6141EDD22EAEFA27DC9AE1689C6C03F 0xC3 DIV CALL TIMESTAMP PUSH16 0xD12A8564736F6C634300080F00330000 ",
                        "sourceMap": "206:7103:0:-:0;;;831:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;921:42:0;;;;;973:50;;;206:7103;;14:177:18;93:13;;-1:-1:-1;;;;;135:31:18;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;206:7103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {
                            "@addCoinbyGator_462": {
                                "entryPoint": 5170,
                                "id": 462,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@addCoinbyMarketor_148": {
                                "entryPoint": 2637,
                                "id": 148,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@changeCoinScopebyMarketor_165": {
                                "entryPoint": 2203,
                                "id": 165,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "@coinList_22": {
                                "entryPoint": null,
                                "id": 22,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@delCoinbyMarketor_329": {
                                "entryPoint": 2403,
                                "id": 329,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@delGateCoinbyMarketor_360": {
                                "entryPoint": 6263,
                                "id": 360,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "@gateCoinList_17": {
                                "entryPoint": null,
                                "id": 17,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@gateContractAddress_24": {
                                "entryPoint": null,
                                "id": 24,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@getCoinInfo_598": {
                                "entryPoint": 4752,
                                "id": 598,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "@impoveGateCoinbyMarketor_304": {
                                "entryPoint": 4360,
                                "id": 304,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "@isValidCoin_611": {
                                "entryPoint": null,
                                "id": 611,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "@lockCoinbyGator_514": {
                                "entryPoint": 1961,
                                "id": 514,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@lockCoinbyMarketor_180": {
                                "entryPoint": 4185,
                                "id": 180,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@marketCoinList_11": {
                                "entryPoint": null,
                                "id": 11,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@marketorContractAddress_26": {
                                "entryPoint": null,
                                "id": 26,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@unlockCoinbyGator_488": {
                                "entryPoint": 1706,
                                "id": 488,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@unlockCoinbyMarketor_195": {
                                "entryPoint": 996,
                                "id": 195,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@updateCoinbyGator_575": {
                                "entryPoint": 3555,
                                "id": 575,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@updateCoinbyMarketor_251": {
                                "entryPoint": 1174,
                                "id": 251,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "abi_decode_address": {
                                "entryPoint": 6527,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_decode_bool": {
                                "entryPoint": 6700,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_decode_bytes6": {
                                "entryPoint": 6645,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_decode_tuple_t_address": {
                                "entryPoint": 6555,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_decode_tuple_t_addresst_address": {
                                "entryPoint": 7152,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 2
                            },
                            "abi_decode_tuple_t_addresst_uint8": {
                                "entryPoint": 7101,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 2
                            },
                            "abi_decode_tuple_t_bool_fromMemory": {
                                "entryPoint": 7419,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_decode_tuple_t_struct$_Info_$1284_memory_ptr": {
                                "entryPoint": 6711,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_decode_uint8": {
                                "entryPoint": 6669,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_address": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "abi_encode_bool": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "abi_encode_bytes6": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_bytes32_t_bytes6_t_uint8_t_uint8_t_uint256_t_uint256_t_address_t_bytes32_t_bytes32_t_bytes32_t_bool_t_bool_t_address_t_bool__to_t_bytes32_t_bytes6_t_uint8_t_uint8_t_uint256_t_uint256_t_address_t_bytes32_t_bytes32_t_bytes32_t_bool_t_bool_t_address_t_bool__fromStack_reversed": {
                                "entryPoint": 6941,
                                "id": null,
                                "parameterSlots": 15,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": 7496,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_55b5ab3acaf98f73f24e340e3fce4376f33427349016b0431ff2c4efa932d18e__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_81cb1dfb23a252b826bafd64e1a5e758717edd6cb6cf234d6b50e48a1bea516b__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": 7448,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_d35edcbfadff3d182421fe87d6d101d172666bcdd07b46d70b2a94d2cce5545f__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_struct$_Info_$1284_memory_ptr__to_t_struct$_Info_$1284_memory_ptr__fromStack_reversed": {
                                "entryPoint": 7194,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_uint8": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "allocate_memory": {
                                "entryPoint": 6589,
                                "id": null,
                                "parameterSlots": 0,
                                "returnSlots": 1
                            },
                            "validator_revert_bool": {
                                "entryPoint": 6686,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            }
                        },
                        "generatedSources": [
                            {
                                "ast": {
                                    "nodeType": "YulBlock",
                                    "src": "0:9148:18",
                                    "statements": [
                                        {
                                            "nodeType": "YulBlock",
                                            "src": "6:3:18",
                                            "statements": []
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "63:124:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "73:29:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "95:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "82:12:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "82:20:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "73:5:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "165:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "174:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "177:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "167:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "167:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "167:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "124:5:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "135:5:18"
                                                                                },
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "150:3:18",
                                                                                                    "type": "",
                                                                                                    "value": "160"
                                                                                                },
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "155:1:18",
                                                                                                    "type": "",
                                                                                                    "value": "1"
                                                                                                }
                                                                                            ],
                                                                                            "functionName": {
                                                                                                "name": "shl",
                                                                                                "nodeType": "YulIdentifier",
                                                                                                "src": "146:3:18"
                                                                                            },
                                                                                            "nodeType": "YulFunctionCall",
                                                                                            "src": "146:11:18"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "159:1:18",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "sub",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "142:3:18"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "142:19:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "131:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "131:31:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "121:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "121:42:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "114:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "114:50:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "111:70:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "42:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "53:5:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "14:173:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "262:116:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "308:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "317:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "320:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "310:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "310:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "310:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "283:7:18"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "292:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "279:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "279:23:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "304:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "275:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "275:32:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "272:52:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "333:39:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "362:9:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "343:18:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "343:29:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "333:6:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "228:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "239:7:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "251:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "192:186:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "424:303:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "434:19:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "450:2:18",
                                                                    "type": "",
                                                                    "value": "64"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "444:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "444:9:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "memPtr",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "434:6:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "462:34:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memPtr",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "484:6:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "492:3:18",
                                                                    "type": "",
                                                                    "value": "448"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "480:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "480:16:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "newFreePtr",
                                                                "nodeType": "YulTypedName",
                                                                "src": "466:10:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "579:111:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "600:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "arguments": [
                                                                                    {
                                                                                        "kind": "number",
                                                                                        "nodeType": "YulLiteral",
                                                                                        "src": "607:3:18",
                                                                                        "type": "",
                                                                                        "value": "224"
                                                                                    },
                                                                                    {
                                                                                        "kind": "number",
                                                                                        "nodeType": "YulLiteral",
                                                                                        "src": "612:10:18",
                                                                                        "type": "",
                                                                                        "value": "0x4e487b71"
                                                                                    }
                                                                                ],
                                                                                "functionName": {
                                                                                    "name": "shl",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "603:3:18"
                                                                                },
                                                                                "nodeType": "YulFunctionCall",
                                                                                "src": "603:20:18"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "mstore",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "593:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "593:31:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "593:31:18"
                                                                },
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "644:1:18",
                                                                                "type": "",
                                                                                "value": "4"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "647:4:18",
                                                                                "type": "",
                                                                                "value": "0x41"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "mstore",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "637:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "637:15:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "637:15:18"
                                                                },
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "672:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "675:4:18",
                                                                                "type": "",
                                                                                "value": "0x24"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "665:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "665:15:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "665:15:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "newFreePtr",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "514:10:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "526:18:18",
                                                                            "type": "",
                                                                            "value": "0xffffffffffffffff"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "gt",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "511:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "511:34:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "newFreePtr",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "550:10:18"
                                                                        },
                                                                        {
                                                                            "name": "memPtr",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "562:6:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "lt",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "547:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "547:22:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "or",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "508:2:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "508:62:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "505:185:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "706:2:18",
                                                                    "type": "",
                                                                    "value": "64"
                                                                },
                                                                {
                                                                    "name": "newFreePtr",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "710:10:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "699:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "699:22:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "699:22:18"
                                                    }
                                                ]
                                            },
                                            "name": "allocate_memory",
                                            "nodeType": "YulFunctionDefinition",
                                            "returnVariables": [
                                                {
                                                    "name": "memPtr",
                                                    "nodeType": "YulTypedName",
                                                    "src": "413:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "383:344:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "780:129:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "790:29:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "812:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "799:12:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "799:20:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "790:5:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "887:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "896:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "899:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "889:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "889:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "889:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "841:5:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "852:5:18"
                                                                                },
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "863:3:18",
                                                                                            "type": "",
                                                                                            "value": "208"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "868:14:18",
                                                                                            "type": "",
                                                                                            "value": "0xffffffffffff"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "shl",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "859:3:18"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "859:24:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "848:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "848:36:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "838:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "838:47:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "831:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "831:55:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "828:75:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_bytes6",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "759:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "770:5:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "732:177:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "961:109:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "971:29:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "993:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "980:12:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "980:20:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "971:5:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "1048:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "1057:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "1060:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1050:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "1050:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "1050:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1022:5:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1033:5:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1040:4:18",
                                                                                    "type": "",
                                                                                    "value": "0xff"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1029:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1029:16:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1019:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1019:27:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1012:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1012:35:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "1009:55:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_uint8",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "940:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "951:5:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "914:156:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "1117:76:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "1171:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "1180:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "1183:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1173:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "1173:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "1173:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1140:5:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "name": "value",
                                                                                            "nodeType": "YulIdentifier",
                                                                                            "src": "1161:5:18"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "iszero",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "1154:6:18"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "1154:13:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1147:6:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1147:21:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1137:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1137:32:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1130:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1130:40:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "1127:60:18"
                                                    }
                                                ]
                                            },
                                            "name": "validator_revert_bool",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1106:5:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "1075:118:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "1244:82:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "1254:29:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1276:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1263:12:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1263:20:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1254:5:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1314:5:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "validator_revert_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1292:21:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1292:28:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1292:28:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_bool",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1223:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1234:5:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "1198:128:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "1423:1198:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "1470:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "1479:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "1482:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1472:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "1472:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "1472:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1444:7:18"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1453:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1440:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1440:23:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1465:3:18",
                                                                    "type": "",
                                                                    "value": "448"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1436:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1436:33:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "1433:53:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "1495:30:18",
                                                        "value": {
                                                            "arguments": [],
                                                            "functionName": {
                                                                "name": "allocate_memory",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1508:15:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1508:17:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulTypedName",
                                                                "src": "1499:5:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1541:5:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1561:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1548:12:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1548:23:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1534:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1534:38:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1534:38:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1592:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1599:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1588:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1588:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1626:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1637:2:18",
                                                                                    "type": "",
                                                                                    "value": "32"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1622:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1622:18:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_bytes6",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1604:17:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1604:37:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1581:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1581:61:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1581:61:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1662:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1669:2:18",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1658:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1658:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1695:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1706:2:18",
                                                                                    "type": "",
                                                                                    "value": "64"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1691:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1691:18:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_uint8",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1674:16:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1674:36:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1651:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1651:60:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1651:60:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1731:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1738:2:18",
                                                                            "type": "",
                                                                            "value": "96"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1727:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1727:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1764:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1775:2:18",
                                                                                    "type": "",
                                                                                    "value": "96"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1760:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1760:18:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_uint8",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1743:16:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1743:36:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1720:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1720:60:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1720:60:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1800:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1807:3:18",
                                                                            "type": "",
                                                                            "value": "128"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1796:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1796:15:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1830:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1841:3:18",
                                                                                    "type": "",
                                                                                    "value": "128"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1826:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1826:19:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1813:12:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1813:33:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1789:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1789:58:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1789:58:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1867:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1874:3:18",
                                                                            "type": "",
                                                                            "value": "160"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1863:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1863:15:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1897:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1908:3:18",
                                                                                    "type": "",
                                                                                    "value": "160"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1893:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1893:19:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1880:12:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1880:33:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1856:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1856:58:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1856:58:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1934:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1941:3:18",
                                                                            "type": "",
                                                                            "value": "192"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1930:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1930:15:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1970:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1981:3:18",
                                                                                    "type": "",
                                                                                    "value": "192"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1966:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1966:19:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_address",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1947:18:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1947:39:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1923:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1923:64:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1923:64:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2007:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "2014:3:18",
                                                                            "type": "",
                                                                            "value": "224"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2003:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2003:15:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2037:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "2048:3:18",
                                                                                    "type": "",
                                                                                    "value": "224"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2033:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2033:19:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2020:12:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2020:33:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1996:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1996:58:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1996:58:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2063:13:18",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2073:3:18",
                                                            "type": "",
                                                            "value": "256"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_1",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2067:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2096:5:18"
                                                                        },
                                                                        {
                                                                            "name": "_1",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2103:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2092:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2092:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2125:9:18"
                                                                                },
                                                                                {
                                                                                    "name": "_1",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2136:2:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2121:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2121:18:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2108:12:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2108:32:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2085:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2085:56:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2085:56:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2150:13:18",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2160:3:18",
                                                            "type": "",
                                                            "value": "288"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_2",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2154:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2183:5:18"
                                                                        },
                                                                        {
                                                                            "name": "_2",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2190:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2179:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2179:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2212:9:18"
                                                                                },
                                                                                {
                                                                                    "name": "_2",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2223:2:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2208:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2208:18:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2195:12:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2195:32:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2172:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2172:56:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2172:56:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2237:13:18",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2247:3:18",
                                                            "type": "",
                                                            "value": "320"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_3",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2241:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2270:5:18"
                                                                        },
                                                                        {
                                                                            "name": "_3",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2277:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2266:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2266:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2302:9:18"
                                                                                },
                                                                                {
                                                                                    "name": "_3",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2313:2:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2298:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2298:18:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_bool",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2282:15:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2282:35:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2259:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2259:59:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2259:59:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2327:13:18",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2337:3:18",
                                                            "type": "",
                                                            "value": "352"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_4",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2331:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2360:5:18"
                                                                        },
                                                                        {
                                                                            "name": "_4",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2367:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2356:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2356:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2392:9:18"
                                                                                },
                                                                                {
                                                                                    "name": "_4",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2403:2:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2388:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2388:18:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_bool",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2372:15:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2372:35:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2349:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2349:59:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2349:59:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2417:13:18",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2427:3:18",
                                                            "type": "",
                                                            "value": "384"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_5",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2421:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2450:5:18"
                                                                        },
                                                                        {
                                                                            "name": "_5",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2457:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2446:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2446:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2485:9:18"
                                                                                },
                                                                                {
                                                                                    "name": "_5",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2496:2:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2481:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2481:18:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_address",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2462:18:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2462:38:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2439:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2439:62:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2439:62:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2510:13:18",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2520:3:18",
                                                            "type": "",
                                                            "value": "416"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_6",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2514:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2543:5:18"
                                                                        },
                                                                        {
                                                                            "name": "_6",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2550:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2539:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2539:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2575:9:18"
                                                                                },
                                                                                {
                                                                                    "name": "_6",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2586:2:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2571:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2571:18:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_bool",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2555:15:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2555:35:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2532:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2532:59:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2532:59:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "2600:15:18",
                                                        "value": {
                                                            "name": "value",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "2610:5:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2600:6:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_struct$_Info_$1284_memory_ptr",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1389:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1400:7:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1412:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "1331:1290:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "2670:60:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "pos",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2687:3:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2696:5:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "2711:3:18",
                                                                                            "type": "",
                                                                                            "value": "160"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "2716:1:18",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "shl",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "2707:3:18"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "2707:11:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "2720:1:18",
                                                                                    "type": "",
                                                                                    "value": "1"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "sub",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2703:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2703:19:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2692:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2692:31:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2680:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2680:44:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2680:44:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2654:5:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "pos",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2661:3:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "2626:104:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "2836:102:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "2846:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2858:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "2869:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2854:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2854:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2846:4:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2888:9:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2903:6:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "2919:3:18",
                                                                                            "type": "",
                                                                                            "value": "160"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "2924:1:18",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "shl",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "2915:3:18"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "2915:11:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "2928:1:18",
                                                                                    "type": "",
                                                                                    "value": "1"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "sub",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2911:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2911:19:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2899:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2899:32:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2881:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2881:51:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2881:51:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2805:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2816:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2827:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "2735:203:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "2986:65:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "pos",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3003:3:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3012:5:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3023:3:18",
                                                                                    "type": "",
                                                                                    "value": "208"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3028:14:18",
                                                                                    "type": "",
                                                                                    "value": "0xffffffffffff"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "shl",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "3019:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "3019:24:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3008:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3008:36:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2996:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2996:49:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2996:49:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_bytes6",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2970:5:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "pos",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2977:3:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "2943:108:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "3098:33:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "pos",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3107:3:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3116:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3123:4:18",
                                                                            "type": "",
                                                                            "value": "0xff"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3112:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3112:16:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3100:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3100:29:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3100:29:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_uint8",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3082:5:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "pos",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3089:3:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "3056:75:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "3177:50:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "pos",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3194:3:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "3213:5:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "3206:6:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "3206:13:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "iszero",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3199:6:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3199:21:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3187:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3187:34:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3187:34:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_bool",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3161:5:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "pos",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3168:3:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "3136:91:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "3673:753:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "3683:27:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3695:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "3706:3:18",
                                                                    "type": "",
                                                                    "value": "448"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3691:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3691:19:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3683:4:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3726:9:18"
                                                                },
                                                                {
                                                                    "name": "value0",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3737:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3719:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3719:25:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3719:25:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3764:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3775:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3760:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3760:18:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value1",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3784:6:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3796:3:18",
                                                                                    "type": "",
                                                                                    "value": "208"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3801:14:18",
                                                                                    "type": "",
                                                                                    "value": "0xffffffffffff"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "shl",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "3792:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "3792:24:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3780:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3780:37:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3753:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3753:65:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3753:65:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3838:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3849:2:18",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3834:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3834:18:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value2",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3858:6:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3866:4:18",
                                                                            "type": "",
                                                                            "value": "0xff"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3854:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3854:17:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3827:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3827:45:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3827:45:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value3",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3898:6:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3910:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3921:2:18",
                                                                            "type": "",
                                                                            "value": "96"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3906:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3906:18:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_uint8",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3881:16:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3881:44:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3881:44:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3945:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3956:3:18",
                                                                            "type": "",
                                                                            "value": "128"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3941:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3941:19:18"
                                                                },
                                                                {
                                                                    "name": "value4",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3962:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3934:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3934:35:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3934:35:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3989:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4000:3:18",
                                                                            "type": "",
                                                                            "value": "160"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3985:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3985:19:18"
                                                                },
                                                                {
                                                                    "name": "value5",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4006:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3978:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3978:35:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3978:35:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value6",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4041:6:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4053:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4064:3:18",
                                                                            "type": "",
                                                                            "value": "192"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4049:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4049:19:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4022:18:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4022:47:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4022:47:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4089:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4100:3:18",
                                                                            "type": "",
                                                                            "value": "224"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4085:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4085:19:18"
                                                                },
                                                                {
                                                                    "name": "value7",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4106:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4078:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4078:35:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4078:35:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4133:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4144:3:18",
                                                                            "type": "",
                                                                            "value": "256"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4129:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4129:19:18"
                                                                },
                                                                {
                                                                    "name": "value8",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4150:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4122:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4122:35:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4122:35:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4177:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4188:3:18",
                                                                            "type": "",
                                                                            "value": "288"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4173:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4173:19:18"
                                                                },
                                                                {
                                                                    "name": "value9",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4194:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4166:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4166:35:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4166:35:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value10",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4226:7:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4239:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4250:3:18",
                                                                            "type": "",
                                                                            "value": "320"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4235:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4235:19:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4210:15:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4210:45:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4210:45:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value11",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4280:7:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4293:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4304:3:18",
                                                                            "type": "",
                                                                            "value": "352"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4289:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4289:19:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4264:15:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4264:45:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4264:45:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value12",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4337:7:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4350:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4361:3:18",
                                                                            "type": "",
                                                                            "value": "384"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4346:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4346:19:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4318:18:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4318:48:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4318:48:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value13",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4391:7:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4404:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4415:3:18",
                                                                            "type": "",
                                                                            "value": "416"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4400:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4400:19:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4375:15:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4375:45:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4375:45:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_bytes32_t_bytes6_t_uint8_t_uint8_t_uint256_t_uint256_t_address_t_bytes32_t_bytes32_t_bytes32_t_bool_t_bool_t_address_t_bool__to_t_bytes32_t_bytes6_t_uint8_t_uint8_t_uint256_t_uint256_t_address_t_bytes32_t_bytes32_t_bytes32_t_bool_t_bool_t_address_t_bool__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3534:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value13",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3545:7:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value12",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3554:7:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value11",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3563:7:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value10",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3572:7:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value9",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3581:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value8",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3589:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value7",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3597:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value6",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3605:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value5",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3613:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value4",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3621:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value3",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3629:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value2",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3637:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value1",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3645:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3653:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3664:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "3232:1194:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "4526:92:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "4536:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4548:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4559:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4544:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4544:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4536:4:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4578:9:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "4603:6:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "4596:6:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "4596:14:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "iszero",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4589:6:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4589:22:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4571:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4571:41:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4571:41:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4495:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4506:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4517:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "4431:187:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "4708:171:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "4754:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "4763:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "4766:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4756:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "4756:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "4756:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4729:7:18"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4738:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4725:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4725:23:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4750:2:18",
                                                                    "type": "",
                                                                    "value": "64"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4721:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4721:32:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "4718:52:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "4779:39:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4808:9:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4789:18:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4789:29:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4779:6:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "4827:46:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4858:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4869:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4854:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4854:18:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_uint8",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4837:16:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4837:36:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value1",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4827:6:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_addresst_uint8",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4666:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4677:7:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4689:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value1",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4697:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "4623:256:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "4971:173:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "5017:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "5026:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "5029:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5019:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "5019:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "5019:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4992:7:18"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5001:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4988:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4988:23:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "5013:2:18",
                                                                    "type": "",
                                                                    "value": "64"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4984:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4984:32:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "4981:52:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "5042:39:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5071:9:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5052:18:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5052:29:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5042:6:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "5090:48:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5123:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5134:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5119:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5119:18:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5100:18:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5100:38:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value1",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5090:6:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_addresst_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4929:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4940:7:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4952:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value1",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4960:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "4884:260:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "5294:1467:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "5304:27:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5316:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "5327:3:18",
                                                                    "type": "",
                                                                    "value": "448"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5312:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5312:19:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5304:4:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5347:9:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5364:6:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "mload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5358:5:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5358:13:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5340:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5340:32:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5340:32:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "5381:44:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5411:6:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5419:4:18",
                                                                            "type": "",
                                                                            "value": "0x20"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5407:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5407:17:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5401:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5401:24:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0",
                                                                "nodeType": "YulTypedName",
                                                                "src": "5385:12:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5452:12:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5470:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5481:4:18",
                                                                            "type": "",
                                                                            "value": "0x20"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5466:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5466:20:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bytes6",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5434:17:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5434:53:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5434:53:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "5496:46:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5528:6:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5536:4:18",
                                                                            "type": "",
                                                                            "value": "0x40"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5524:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5524:17:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5518:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5518:24:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_1",
                                                                "nodeType": "YulTypedName",
                                                                "src": "5500:14:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_1",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5568:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5588:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5599:4:18",
                                                                            "type": "",
                                                                            "value": "0x40"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5584:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5584:20:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_uint8",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5551:16:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5551:54:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5551:54:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "5614:46:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5646:6:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5654:4:18",
                                                                            "type": "",
                                                                            "value": "0x60"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5642:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5642:17:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5636:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5636:24:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_2",
                                                                "nodeType": "YulTypedName",
                                                                "src": "5618:14:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_2",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5686:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5706:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5717:4:18",
                                                                            "type": "",
                                                                            "value": "0x60"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5702:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5702:20:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_uint8",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5669:16:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5669:54:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5669:54:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5743:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5754:4:18",
                                                                            "type": "",
                                                                            "value": "0x80"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5739:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5739:20:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "5771:6:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "5779:4:18",
                                                                                    "type": "",
                                                                                    "value": "0x80"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "5767:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "5767:17:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "mload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5761:5:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5761:24:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5732:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5732:54:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5732:54:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5806:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5817:4:18",
                                                                            "type": "",
                                                                            "value": "0xa0"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5802:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5802:20:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "5834:6:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "5842:4:18",
                                                                                    "type": "",
                                                                                    "value": "0xa0"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "5830:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "5830:17:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "mload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5824:5:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5824:24:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5795:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5795:54:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5795:54:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "5858:46:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5890:6:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5898:4:18",
                                                                            "type": "",
                                                                            "value": "0xc0"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5886:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5886:17:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5880:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5880:24:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_3",
                                                                "nodeType": "YulTypedName",
                                                                "src": "5862:14:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_3",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5932:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5952:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5963:4:18",
                                                                            "type": "",
                                                                            "value": "0xc0"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5948:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5948:20:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5913:18:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5913:56:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5913:56:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5989:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "6000:4:18",
                                                                            "type": "",
                                                                            "value": "0xe0"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5985:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5985:20:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "6017:6:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "6025:4:18",
                                                                                    "type": "",
                                                                                    "value": "0xe0"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "6013:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "6013:17:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "mload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6007:5:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6007:24:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5978:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5978:54:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5978:54:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6041:16:18",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "6051:6:18",
                                                            "type": "",
                                                            "value": "0x0100"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_1",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6045:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6077:9:18"
                                                                        },
                                                                        {
                                                                            "name": "_1",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6088:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6073:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6073:18:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "6103:6:18"
                                                                                },
                                                                                {
                                                                                    "name": "_1",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "6111:2:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "6099:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "6099:15:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "mload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6093:5:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6093:22:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6066:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6066:50:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6066:50:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6125:16:18",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "6135:6:18",
                                                            "type": "",
                                                            "value": "0x0120"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_2",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6129:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6161:9:18"
                                                                        },
                                                                        {
                                                                            "name": "_2",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6172:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6157:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6157:18:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "6187:6:18"
                                                                                },
                                                                                {
                                                                                    "name": "_2",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "6195:2:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "6183:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "6183:15:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "mload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6177:5:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6177:22:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6150:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6150:50:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6150:50:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6209:16:18",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "6219:6:18",
                                                            "type": "",
                                                            "value": "0x0140"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_3",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6213:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6234:44:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6266:6:18"
                                                                        },
                                                                        {
                                                                            "name": "_3",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6274:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6262:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6262:15:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6256:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6256:22:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_4",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6238:14:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_4",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6303:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6323:9:18"
                                                                        },
                                                                        {
                                                                            "name": "_3",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6334:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6319:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6319:18:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6287:15:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6287:51:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6287:51:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6347:16:18",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "6357:6:18",
                                                            "type": "",
                                                            "value": "0x0160"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_4",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6351:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6372:44:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6404:6:18"
                                                                        },
                                                                        {
                                                                            "name": "_4",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6412:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6400:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6400:15:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6394:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6394:22:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_5",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6376:14:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_5",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6441:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6461:9:18"
                                                                        },
                                                                        {
                                                                            "name": "_4",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6472:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6457:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6457:18:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6425:15:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6425:51:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6425:51:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6485:16:18",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "6495:6:18",
                                                            "type": "",
                                                            "value": "0x0180"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_5",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6489:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6510:44:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6542:6:18"
                                                                        },
                                                                        {
                                                                            "name": "_5",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6550:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6538:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6538:15:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6532:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6532:22:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_6",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6514:14:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_6",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6582:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6602:9:18"
                                                                        },
                                                                        {
                                                                            "name": "_5",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6613:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6598:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6598:18:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6563:18:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6563:54:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6563:54:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6626:16:18",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "6636:6:18",
                                                            "type": "",
                                                            "value": "0x01a0"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_6",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6630:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6651:44:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6683:6:18"
                                                                        },
                                                                        {
                                                                            "name": "_6",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6691:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6679:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6679:15:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6673:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6673:22:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_7",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6655:14:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_7",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6720:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6740:9:18"
                                                                        },
                                                                        {
                                                                            "name": "_6",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6751:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6736:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6736:18:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6704:15:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6704:51:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6704:51:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_struct$_Info_$1284_memory_ptr__to_t_struct$_Info_$1284_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "5263:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "5274:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "5285:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "5149:1612:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "6844:167:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "6890:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "6899:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "6902:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6892:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "6892:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "6892:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6865:7:18"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6874:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6861:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6861:23:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "6886:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6857:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6857:32:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "6854:52:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6915:29:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6934:9:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6928:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6928:16:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6919:5:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6975:5:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "validator_revert_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6953:21:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6953:28:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6953:28:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "6990:15:18",
                                                        "value": {
                                                            "name": "value",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7000:5:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6990:6:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_bool_fromMemory",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "6810:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "6821:7:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "6833:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "6766:245:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "7190:172:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7207:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7218:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7200:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7200:21:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7200:21:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "7241:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "7252:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "7237:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7237:18:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7257:2:18",
                                                                    "type": "",
                                                                    "value": "22"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7230:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7230:30:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7230:30:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "7280:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "7291:2:18",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "7276:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7276:18:18"
                                                                },
                                                                {
                                                                    "hexValue": "796f752068617665206e6f7420746865207269676874",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7296:24:18",
                                                                    "type": "",
                                                                    "value": "you have not the right"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7269:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7269:52:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7269:52:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "7330:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7342:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7353:2:18",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7338:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7338:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7330:4:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "7167:9:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "7181:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "7016:346:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "7541:172:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7558:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7569:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7551:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7551:21:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7551:21:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "7592:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "7603:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "7588:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7588:18:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7608:2:18",
                                                                    "type": "",
                                                                    "value": "22"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7581:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7581:30:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7581:30:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "7631:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "7642:2:18",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "7627:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7627:18:18"
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e206973206e6f7420657869737473",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7647:24:18",
                                                                    "type": "",
                                                                    "value": "the coin is not exists"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7620:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7620:52:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7620:52:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "7681:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7693:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7704:2:18",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7689:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7689:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7681:4:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "7518:9:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "7532:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "7367:346:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "7892:179:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7909:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7920:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7902:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7902:21:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7902:21:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "7943:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "7954:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "7939:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7939:18:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7959:2:18",
                                                                    "type": "",
                                                                    "value": "29"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7932:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7932:30:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7932:30:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "7982:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "7993:2:18",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "7978:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7978:18:18"
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e2065786973747320696e20746865206d61726b6574",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7998:31:18",
                                                                    "type": "",
                                                                    "value": "the coin exists in the market"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7971:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7971:59:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7971:59:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "8039:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "8051:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8062:2:18",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8047:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8047:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8039:4:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "7869:9:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "7883:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "7718:353:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "8250:182:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "8267:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8278:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8260:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8260:21:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8260:21:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "8301:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "8312:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "8297:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "8297:18:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8317:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8290:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8290:30:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8290:30:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "8340:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "8351:2:18",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "8336:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "8336:18:18"
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e2073636f7065206973206e6f74206a757374696669656420",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8356:34:18",
                                                                    "type": "",
                                                                    "value": "the coin scope is not justified "
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8329:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8329:62:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8329:62:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "8400:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "8412:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8423:2:18",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8408:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8408:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8400:4:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_d35edcbfadff3d182421fe87d6d101d172666bcdd07b46d70b2a94d2cce5545f__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "8227:9:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "8241:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "8076:356:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "8611:179:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "8628:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8639:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8621:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8621:21:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8621:21:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "8662:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "8673:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "8658:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "8658:18:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8678:2:18",
                                                                    "type": "",
                                                                    "value": "29"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8651:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8651:30:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8651:30:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "8701:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "8712:2:18",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "8697:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "8697:18:18"
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e206973202065786973747320696e206d61726b6574",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8717:31:18",
                                                                    "type": "",
                                                                    "value": "the coin is  exists in market"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8690:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8690:59:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8690:59:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "8758:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "8770:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8781:2:18",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8766:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8766:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8758:4:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_81cb1dfb23a252b826bafd64e1a5e758717edd6cb6cf234d6b50e48a1bea516b__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "8588:9:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "8602:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "8437:353:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "8969:177:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "8986:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8997:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8979:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8979:21:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8979:21:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "9020:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "9031:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "9016:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "9016:18:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "9036:2:18",
                                                                    "type": "",
                                                                    "value": "27"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "9009:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "9009:30:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "9009:30:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "9059:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "9070:2:18",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "9055:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "9055:18:18"
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e2065786973747320696e207468652067617465",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "9075:29:18",
                                                                    "type": "",
                                                                    "value": "the coin exists in the gate"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "9048:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "9048:57:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "9048:57:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "9114:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "9126:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "9137:2:18",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "9122:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "9122:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "9114:4:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_55b5ab3acaf98f73f24e340e3fce4376f33427349016b0431ff2c4efa932d18e__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "8946:9:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "8960:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "8795:351:18"
                                        }
                                    ]
                                },
                                "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 448)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_bytes6(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, shl(208, 0xffffffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_bool(value)\n    }\n    function abi_decode_tuple_t_struct$_Info_$1284_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 448) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, calldataload(headStart))\n        mstore(add(value, 32), abi_decode_bytes6(add(headStart, 32)))\n        mstore(add(value, 64), abi_decode_uint8(add(headStart, 64)))\n        mstore(add(value, 96), abi_decode_uint8(add(headStart, 96)))\n        mstore(add(value, 128), calldataload(add(headStart, 128)))\n        mstore(add(value, 160), calldataload(add(headStart, 160)))\n        mstore(add(value, 192), abi_decode_address(add(headStart, 192)))\n        mstore(add(value, 224), calldataload(add(headStart, 224)))\n        let _1 := 256\n        mstore(add(value, _1), calldataload(add(headStart, _1)))\n        let _2 := 288\n        mstore(add(value, _2), calldataload(add(headStart, _2)))\n        let _3 := 320\n        mstore(add(value, _3), abi_decode_bool(add(headStart, _3)))\n        let _4 := 352\n        mstore(add(value, _4), abi_decode_bool(add(headStart, _4)))\n        let _5 := 384\n        mstore(add(value, _5), abi_decode_address(add(headStart, _5)))\n        let _6 := 416\n        mstore(add(value, _6), abi_decode_bool(add(headStart, _6)))\n        value0 := value\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_bytes6(value, pos)\n    {\n        mstore(pos, and(value, shl(208, 0xffffffffffff)))\n    }\n    function abi_encode_uint8(value, pos)\n    { mstore(pos, and(value, 0xff)) }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes6_t_uint8_t_uint8_t_uint256_t_uint256_t_address_t_bytes32_t_bytes32_t_bytes32_t_bool_t_bool_t_address_t_bool__to_t_bytes32_t_bytes6_t_uint8_t_uint8_t_uint256_t_uint256_t_address_t_bytes32_t_bytes32_t_bytes32_t_bool_t_bool_t_address_t_bool__fromStack_reversed(headStart, value13, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 448)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, shl(208, 0xffffffffffff)))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        abi_encode_uint8(value3, add(headStart, 96))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        abi_encode_address(value6, add(headStart, 192))\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        abi_encode_bool(value10, add(headStart, 320))\n        abi_encode_bool(value11, add(headStart, 352))\n        abi_encode_address(value12, add(headStart, 384))\n        abi_encode_bool(value13, add(headStart, 416))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_Info_$1284_memory_ptr__to_t_struct$_Info_$1284_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 448)\n        mstore(headStart, mload(value0))\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_bytes6(memberValue0, add(headStart, 0x20))\n        let memberValue0_1 := mload(add(value0, 0x40))\n        abi_encode_uint8(memberValue0_1, add(headStart, 0x40))\n        let memberValue0_2 := mload(add(value0, 0x60))\n        abi_encode_uint8(memberValue0_2, add(headStart, 0x60))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        let memberValue0_3 := mload(add(value0, 0xc0))\n        abi_encode_address(memberValue0_3, add(headStart, 0xc0))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n        let _1 := 0x0100\n        mstore(add(headStart, _1), mload(add(value0, _1)))\n        let _2 := 0x0120\n        mstore(add(headStart, _2), mload(add(value0, _2)))\n        let _3 := 0x0140\n        let memberValue0_4 := mload(add(value0, _3))\n        abi_encode_bool(memberValue0_4, add(headStart, _3))\n        let _4 := 0x0160\n        let memberValue0_5 := mload(add(value0, _4))\n        abi_encode_bool(memberValue0_5, add(headStart, _4))\n        let _5 := 0x0180\n        let memberValue0_6 := mload(add(value0, _5))\n        abi_encode_address(memberValue0_6, add(headStart, _5))\n        let _6 := 0x01a0\n        let memberValue0_7 := mload(add(value0, _6))\n        abi_encode_bool(memberValue0_7, add(headStart, _6))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"you have not the right\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"the coin is not exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"the coin exists in the market\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d35edcbfadff3d182421fe87d6d101d172666bcdd07b46d70b2a94d2cce5545f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"the coin scope is not justified \")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_81cb1dfb23a252b826bafd64e1a5e758717edd6cb6cf234d6b50e48a1bea516b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"the coin is  exists in market\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_55b5ab3acaf98f73f24e340e3fce4376f33427349016b0431ff2c4efa932d18e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"the coin exists in the gate\")\n        tail := add(headStart, 96)\n    }\n}",
                                "id": 18,
                                "language": "Yul",
                                "name": "#utility.yul"
                            }
                        ],
                        "immutableReferences": {
                            "24": [
                                {
                                    "length": 32,
                                    "start": 339
                                },
                                {
                                    "length": 32,
                                    "start": 1708
                                },
                                {
                                    "length": 32,
                                    "start": 1963
                                },
                                {
                                    "length": 32,
                                    "start": 3557
                                },
                                {
                                    "length": 32,
                                    "start": 5172
                                }
                            ],
                            "26": [
                                {
                                    "length": 32,
                                    "start": 726
                                },
                                {
                                    "length": 32,
                                    "start": 998
                                },
                                {
                                    "length": 32,
                                    "start": 1176
                                },
                                {
                                    "length": 32,
                                    "start": 2205
                                },
                                {
                                    "length": 32,
                                    "start": 2405
                                },
                                {
                                    "length": 32,
                                    "start": 2639
                                },
                                {
                                    "length": 32,
                                    "start": 4187
                                },
                                {
                                    "length": 32,
                                    "start": 4362
                                },
                                {
                                    "length": 32,
                                    "start": 6265
                                }
                            ]
                        },
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5385CBF5 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCC0BF757 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCC0BF757 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xCFCDCA52 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xE8DD4655 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xE911ABEC EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xEAEC0112 EQ PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5385CBF5 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x7C3E2F02 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x87A70938 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xA935B6AF EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xB20BE2B4 EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x328320BF GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x328320BF EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x385E4B7A EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x3B830305 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x441EB548 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x492B7107 EQ PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D3B8F67 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x24FD7139 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x2F17D5DF EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x31ECDEB8 EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH2 0x175 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP8 PUSH1 0xD0 DUP2 SWAP1 SHL SWAP8 PUSH1 0xFF PUSH1 0x1 PUSH1 0x30 SHL DUP4 DIV DUP2 AND SWAP9 PUSH1 0x1 PUSH1 0x38 SHL SWAP1 SWAP4 DIV DUP2 AND SWAP8 SWAP7 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 SWAP5 SWAP4 DUP1 DUP4 AND SWAP3 PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH3 0x10000 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV AND DUP15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP15 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B1D JUMP JUMPDEST PUSH2 0x272 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x189 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x175 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x175 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBD JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST PUSH2 0x139 PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x139 PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x1059 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0x139 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x1877 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x442 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x54A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD DUP2 DUP2 MSTORE PUSH2 0x160 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 PUSH1 0x8 SWAP1 DUP2 ADD SLOAD PUSH3 0x10000 SWAP1 DUP2 SWAP1 DIV DUP7 AND PUSH2 0x180 DUP15 ADD SWAP1 DUP2 MSTORE DUP8 MLOAD DUP8 AND DUP14 MSTORE DUP6 DUP6 MSTORE SWAP12 DUP4 SWAP1 KECCAK256 DUP14 MLOAD DUP2 SSTORE SWAP4 DUP14 ADD MLOAD SWAP9 DUP5 ADD DUP1 SLOAD SWAP4 DUP15 ADD MLOAD PUSH1 0x60 DUP16 ADD MLOAD PUSH1 0xD0 SWAP12 SWAP1 SWAP12 SHR PUSH7 0xFFFFFFFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x30 SHL PUSH1 0xFF SWAP6 DUP7 AND MUL OR PUSH1 0xFF PUSH1 0x38 SHL NOT AND PUSH1 0x1 PUSH1 0x38 SHL SWAP5 SWAP1 SWAP11 AND SWAP4 SWAP1 SWAP4 MUL SWAP9 SWAP1 SWAP9 OR SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP12 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xA0 DUP11 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE SWAP3 MLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP10 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x120 SWAP1 SWAP10 ADD MLOAD PUSH1 0x7 DUP5 ADD SSTORE SWAP6 MLOAD SWAP2 SWAP1 SWAP6 ADD DUP1 SLOAD SWAP5 MLOAD SWAP7 MLOAD SWAP3 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP2 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP2 SWAP1 SWAP2 OR SWAP6 ISZERO ISZERO SWAP1 SWAP7 MUL SWAP5 SWAP1 SWAP5 OR PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP4 SWAP1 SWAP3 AND SWAP1 SWAP2 MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xB0 SHL SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAB3ACB5C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x708 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x72C SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAB3ACB5C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x807 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91D SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x30 SHL MUL PUSH7 0xFF000000000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0xA26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xACF SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0xAD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xD45 JUMPI CALLER DUP2 PUSH2 0x180 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x140 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x160 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH2 0x1A0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xD0 SHR MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 DUP1 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2065786973747320696E20746865206D61726B6574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x777 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAB3ACB5C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE65 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0xEB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND PUSH1 0x4 EQ PUSH2 0xF0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2073636F7065206973206E6F74206A757374696669656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x777 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD DUP2 DUP2 MSTORE PUSH2 0x160 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP6 ADD DUP2 DUP2 MSTORE CALLER PUSH2 0x180 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xC0 DUP8 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP10 DUP11 SWAP1 KECCAK256 DUP12 MLOAD DUP2 SSTORE SWAP1 DUP12 ADD MLOAD SWAP7 DUP2 ADD DUP1 SLOAD SWAP11 DUP13 ADD MLOAD PUSH1 0x60 DUP14 ADD MLOAD PUSH1 0xD0 SWAP10 SWAP1 SWAP10 SHR PUSH7 0xFFFFFFFFFFFFFF NOT SWAP1 SWAP13 AND SWAP12 SWAP1 SWAP12 OR PUSH1 0x1 PUSH1 0x30 SHL PUSH1 0xFF SWAP13 DUP14 AND MUL OR PUSH1 0xFF PUSH1 0x38 SHL NOT AND PUSH1 0x1 PUSH1 0x38 SHL SWAP12 SWAP1 SWAP9 AND SWAP11 SWAP1 SWAP11 MUL SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP9 SSTORE PUSH1 0x80 DUP10 ADD MLOAD SWAP8 DUP6 ADD SWAP8 SWAP1 SWAP8 SSTORE PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE MLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH2 0x100 DUP1 DUP9 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x120 SWAP1 SWAP8 ADD MLOAD PUSH1 0x7 DUP5 ADD SSTORE SWAP4 MLOAD PUSH1 0x8 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP4 MLOAD SWAP5 MLOAD SWAP2 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP3 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP3 SWAP1 SWAP3 OR SWAP4 ISZERO ISZERO SWAP1 SWAP6 MUL SWAP3 SWAP1 SWAP3 OR PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND PUSH3 0x10000 SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xB0 SHL SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10DB SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x10E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1166 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118A SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x1193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND PUSH2 0x11D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E206973202065786973747320696E206D61726B6574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x777 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP5 AND DUP4 MSTORE DUP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 DUP5 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP4 SSTORE SWAP3 SWAP1 SWAP3 MSTORE DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1C0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1A0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1348 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x1C0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT PUSH1 0xD0 DUP3 SWAP1 SHL AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x30 SHL DUP5 DIV DUP2 AND SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x38 SHL SWAP1 SWAP3 DIV DUP5 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP5 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH2 0x100 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x8 SWAP1 SWAP3 ADD SLOAD DUP1 DUP5 AND ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE SWAP2 DUP3 DIV DUP4 AND ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE PUSH3 0x10000 DUP3 DIV SWAP1 SWAP4 AND PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV AND ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAB3ACB5C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1490 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B4 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x14BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x174E JUMPI CALLER DUP2 PUSH2 0x180 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x140 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x160 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH2 0x1A0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xD0 SHR MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x17BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2065786973747320696E20746865206D61726B6574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x777 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND ISZERO PUSH2 0x1833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2065786973747320696E2074686520676174650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x777 JUMP JUMPDEST PUSH1 0xC0 ADD DUP1 MLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18F9 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x1902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x1947 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B6 DUP3 PUSH2 0x197F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x19EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1996 DUP2 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A52 PUSH2 0x19BD JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE PUSH2 0x1A62 PUSH1 0x20 DUP5 ADD PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1A73 PUSH1 0x40 DUP5 ADD PUSH2 0x1A0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1A84 PUSH1 0x60 DUP5 ADD PUSH2 0x1A0D JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x1AA9 PUSH1 0xC0 DUP5 ADD PUSH2 0x197F JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x1ADC DUP2 DUP6 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0x1AEE DUP5 DUP3 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x180 PUSH2 0x1B00 DUP5 DUP3 ADD PUSH2 0x197F JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 PUSH2 0x1B12 DUP5 DUP3 ADD PUSH2 0x1A2C JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP15 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT DUP15 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xFF DUP14 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP13 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C0 DUP2 ADD DUP12 PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1B67 PUSH1 0xC0 DUP4 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST DUP9 PUSH1 0xE0 DUP4 ADD MSTORE DUP8 PUSH2 0x100 DUP4 ADD MSTORE DUP7 PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x1B8A PUSH2 0x140 DUP4 ADD DUP8 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH2 0x180 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x1A0 SWAP1 SWAP2 ADD MSTORE SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BD9 DUP4 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE7 PUSH1 0x20 DUP5 ADD PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C0C DUP4 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE7 PUSH1 0x20 DUP5 ADD PUSH2 0x197F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH2 0x1C0 DUP4 ADD SWAP2 PUSH2 0x1C3F SWAP1 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1C54 PUSH1 0x40 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1C69 PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1C98 PUSH1 0xC0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 DUP2 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x140 DUP1 DUP5 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x160 DUP1 DUP5 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x180 DUP1 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH2 0x1A0 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19B6 DUP2 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x1E5BDD481A185D99481B9BDD081D1A19481C9A59DA1D PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x74686520636F696E206973206E6F7420657869737473 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0x4C PUSH21 0x129FE6C2C4B6141EDD22EAEFA27DC9AE1689C6C03F 0xC3 DIV CALL TIMESTAMP PUSH16 0xD12A8564736F6C634300080F00330000 ",
                        "sourceMap": "206:7103:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2897:174;;;;;;:::i;:::-;;:::i;:::-;;3077:424;;;;;;:::i;:::-;;:::i;726:44::-;;;;;;;;-1:-1:-1;;;;;2899:32:18;;;2881:51;;2869:2;2854:18;726:44:0;;;;;;;;673:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;673:46:0;;;;;-1:-1:-1;;;673:46:0;;;;;;;;-1:-1:-1;;;;;673:46:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;673:46:0;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7178:129::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7265:22:0;7242:4;7265:22;;;:8;:22;;;;;:35;;;;;;7178:129;;;;4596:14:18;;4589:22;4571:41;;4559:2;4544:18;7178:129:0;4431:187:18;5815:288:0;;;;;;:::i;:::-;;:::i;345:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;345:49:0;;;6109:267;;;;;;:::i;:::-;;:::i;776:48::-;;;;;2522:190;;;;;;:::i;:::-;;:::i;4093:281::-;;;;;;:::i;:::-;;:::i;1732:784::-;;;;;;:::i;:::-;;:::i;6382:497::-;;;;;;:::i;:::-;;:::i;2718:173::-;;;;;;:::i;:::-;;:::i;514:67::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;514:67:0;;;3507:580;;;;;;:::i;:::-;;:::i;6885:287::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4851:958::-;;;;;;:::i;:::-;;:::i;4380:333::-;;;;;;:::i;:::-;;:::i;2897:174::-;1424:23;-1:-1:-1;;;;;1410:54:0;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1402:65;;;;;;-1:-1:-1;;;;;3014:30:0::1;;::::0;;;:8:::1;:30;::::0;;;;:43:::1;;:50:::0;;-1:-1:-1;;3014:50:0::1;3060:4;3014:50;::::0;;2897:174::o;3077:424::-;1424:23;-1:-1:-1;;;;;1410:54:0;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1402:65;;;;;;3216:25:::1;::::0;::::1;::::0;-1:-1:-1;;;;;3201:41:0;;::::1;3254:1;3201:41:::0;;;::::1;::::0;;;;;;;::::1;3193:64;;;::::0;::::1;;3292:5;3267:22;::::0;::::1;:30:::0;;;3307:16:::1;::::0;::::1;:24:::0;;;3267:30;3341:16:::1;::::0;::::1;:23:::0;;;3403:25:::1;::::0;::::1;::::0;;-1:-1:-1;;;;;3394:35:0;;::::1;::::0;;:8:::1;:35;::::0;;;;;;;:43:::1;::::0;;::::1;::::0;;;;;::::1;::::0;::::1;3374:17;::::0;::::1;:63:::0;;;3456:25;;3447:35;::::1;::::0;;;;;;;;;:47;;;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;-1:-1:-1::0;;3447:47:0;;;;;;;-1:-1:-1;;;3447:47:0::1;::::0;;::::1;;;-1:-1:-1::0;;;;3447:47:0::1;-1:-1:-1::0;;;3447:47:0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;3447:47:0::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;3394:43:::1;3447:47:::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;;;;;;;-1:-1:-1;;3447:47:0;;;;::::1;;-1:-1:-1::0;;3447:47:0;;;;;;::::1;;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;;3447:47:0;;;;::::1;::::0;;::::1;-1:-1:-1::0;;;;3447:47:0;;;;;-1:-1:-1;;;3447:47:0;::::1;;::::0;;;::::1;;::::0;;3077:424::o;5815:288::-;1303:19;-1:-1:-1;;;;;1291:45:0;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1283:56;;;;;;-1:-1:-1;;;;;5942:30:0;;::::1;;::::0;;;:8:::1;:30;::::0;;;;:38:::1;;::::0;;;::::1;;5984:10;5942:52;5921:121;;;;-1:-1:-1::0;;;5921:121:0::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;6052:30:0::1;;::::0;;;:8:::1;:30;::::0;;;;:37:::1;;:44:::0;;-1:-1:-1;;6052:44:0::1;;;::::0;;5815:288::o;6109:267::-;1303:19;-1:-1:-1;;;;;1291:45:0;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1283:56;;;;;;-1:-1:-1;;;;;6214:30:0;;::::1;;::::0;;;:8:::1;:30;::::0;;;;:38:::1;;::::0;;;::::1;;6256:10;6214:52;6193:121;;;;-1:-1:-1::0;;;6193:121:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6324:30:0::1;6364:5;6324:30:::0;;;:8:::1;:30;::::0;;;;:37:::1;;:45:::0;;-1:-1:-1;;6324:45:0::1;::::0;;6109:267::o;2522:190::-;1424:23;-1:-1:-1;;;;;1410:54:0;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1402:65;;;;;;-1:-1:-1;;;;;2660:30:0;;::::1;;::::0;;;:8:::1;:30;::::0;;;;:36:::1;;:45:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;2660:45:0::1;-1:-1:-1::0;;2660:45:0;;::::1;::::0;;;::::1;::::0;;2522:190::o;4093:281::-;1424:23;-1:-1:-1;;;;;1410:54:0;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1402:65;;;;;;-1:-1:-1;;;;;4224:32:0;;::::1;4268:1;4224:32:::0;;;::::1;::::0;;;;;;;::::1;:46:::0;4203:115:::1;;;;-1:-1:-1::0;;;4203:115:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4335:32:0::1;:14;:32:::0;;;::::1;::::0;;;;;;4328:39;;-1:-1:-1;;;;;;4328:39:0::1;::::0;;4093:281::o;1732:784::-;1424:23;-1:-1:-1;;;;;1410:54:0;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1402:65;;;;;;1858:25:::1;::::0;::::1;::::0;-1:-1:-1;;;;;1849:35:0::1;;::::0;;;:8:::1;:35;::::0;;;;:42:::1;;::::0;-1:-1:-1;;;1849:42:0;::::1;;;:50;;1895:4;1849:50;1845:665;;1935:10;1915:9;:17;;:30;-1:-1:-1::0;;;;;1915:30:0::1;;;-1:-1:-1::0;;;;;1915:30:0::1;;;::::0;::::1;1984:5;1959:9;:22;;:30;;;;;;;;;::::0;::::1;2022:5;2003:9;:16;;:24;;;;;;;;;::::0;::::1;2060:4;2041:9;:16;;:23;;;;;;;;;::::0;::::1;2116:9;2078:8;:35;2087:9;:25;;;-1:-1:-1::0;;;;;2078:35:0::1;-1:-1:-1::0;;;;;2078:35:0::1;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;2078:47:0::1;;;;;-1:-1:-1::0;;;;;2078:47:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;2078:47:0::1;;;;;-1:-1:-1::0;;;;;2078:47:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2183:9;:42;;;2139:14;:41:::0;2154:9:::1;:25;;;-1:-1:-1::0;;;;;2139:41:0::1;-1:-1:-1::0;;;;;2139:41:0::1;;;;;;;;;;;;;:86;;;;;-1:-1:-1::0;;;;;2139:86:0::1;;;;;-1:-1:-1::0;;;;;2139:86:0::1;;;;;;1732:784:::0;:::o;1845:665::-:1;2296:25;::::0;::::1;::::0;-1:-1:-1;;;;;2281:41:0;;::::1;2334:1;2281:41:::0;;;::::1;::::0;;;;;;;::::1;:55:::0;2256:143:::1;;;::::0;-1:-1:-1;;;2256:143:0;;7920:2:18;2256:143:0::1;::::0;::::1;7902:21:18::0;7959:2;7939:18;;;7932:30;7998:31;7978:18;;;7971:59;8047:18;;2256:143:0::1;7718:353:18::0;2256:143:0::1;2457:42;::::0;::::1;::::0;-1:-1:-1;;;;;2413:41:0::1;:14;:41:::0;;;::::1;::::0;;;;;;:86;;-1:-1:-1;;;;;;2413:86:0::1;::::0;;::::1;::::0;;1845:665:::1;1732:784:::0;:::o;6382:497::-;1303:19;-1:-1:-1;;;;;1291:45:0;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1283:56;;;;;;6497:25:::1;::::0;::::1;::::0;-1:-1:-1;;;;;6488:35:0;;::::1;;::::0;;;:8:::1;:35;::::0;;;;:43:::1;;::::0;;;::::1;;6535:10;6488:57;6467:126;;;;-1:-1:-1::0;;;6467:126:0::1;;;;;;;:::i;:::-;6611:9;:15;;;:20;;6630:1;6611:20;6603:65;;;::::0;-1:-1:-1;;;6603:65:0;;8278:2:18;6603:65:0::1;::::0;::::1;8260:21:18::0;;;8297:18;;;8290:30;8356:34;8336:18;;;8329:62;8408:18;;6603:65:0::1;8076:356:18::0;6603:65:0::1;6703:5;6678:22;::::0;::::1;:30:::0;;;6718:16:::1;::::0;::::1;:24:::0;;;6678:30;6752:16:::1;::::0;::::1;:23:::0;;;6805:10:::1;6785:17;::::0;::::1;:30:::0;;;6834:25:::1;::::0;::::1;::::0;;-1:-1:-1;;;;;6825:35:0;;::::1;::::0;;:8:::1;-1:-1:-1::0;6825:35:0;;;;;;;;:47;;;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;-1:-1:-1::0;;6825:47:0;;;;;;;-1:-1:-1;;;6825:47:0::1;::::0;;::::1;;;-1:-1:-1::0;;;;6825:47:0::1;-1:-1:-1::0;;;6825:47:0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;6825:47:0::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;6825:47:0;;;;::::1;;-1:-1:-1::0;;6825:47:0;;;;;;::::1;;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;;6825:47:0;;;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;6825:47:0;;;;;-1:-1:-1;;;6825:47:0;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;6382:497::o;2718:173::-;1424:23;-1:-1:-1;;;;;1410:54:0;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1402:65;;;;;;-1:-1:-1;;;;;2833:30:0::1;2879:5;2833:30:::0;;;:8:::1;:30;::::0;;;;:43:::1;;:51:::0;;-1:-1:-1;;2833:51:0::1;::::0;;2718:173::o;3507:580::-;1424:23;-1:-1:-1;;;;;1410:54:0;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1402:65;;;;;;-1:-1:-1;;;;;3669:26:0;;::::1;3725:1;3669:26:::0;;;:12:::1;:26;::::0;;;;;;;:44;;::::1;::::0;;;;;;;;::::1;3648:127;;;;-1:-1:-1::0;;;3648:127:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3806:32:0;;::::1;3850:1;3806:32:::0;;;::::1;::::0;;;;;;;::::1;:46:::0;3785:122:::1;;;::::0;-1:-1:-1;;;3785:122:0;;8639:2:18;3785:122:0::1;::::0;::::1;8621:21:18::0;8678:2;8658:18;;;8651:30;8717:31;8697:18;;;8690:59;8766:18;;3785:122:0::1;8437:353:18::0;3785:122:0::1;-1:-1:-1::0;;;;;3952:26:0;;::::1;;::::0;;;:12:::1;:26;::::0;;;;;;;:66;;::::1;::::0;;;;;;;;;;3917:32;;;;;;;:101;;3952:66;;;::::1;-1:-1:-1::0;;;;;;3917:101:0;;::::1;;::::0;;;4036:44;;;;4029:51;;::::1;::::0;;3507:580::o;6885:287::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7033:26:0;;;;;;:8;:26;;;;;:33;;;-1:-1:-1;;;7033:33:0;;;;:41;;7070:4;7033:41;7012:110;;;;-1:-1:-1;;;7012:110:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;;7139:26:0;;;;;;;:8;:26;;;;;;;;;7132:33;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7132:33:0;;;;;;;;;;;;;-1:-1:-1;;;7132:33:0;;;;;;;;;;;-1:-1:-1;;;7132:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7132:33:0;;;;;;;;;;6885:287::o;4851:958::-;1303:19;-1:-1:-1;;;;;1291:45:0;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1283:56;;;;;;4946:25:::1;::::0;::::1;::::0;-1:-1:-1;;;;;4937:35:0::1;;::::0;;;:8:::1;:35;::::0;;;;:42:::1;;::::0;-1:-1:-1;;;4937:42:0;::::1;;;:50;;4983:4;4937:50;4933:870;;5023:10;5003:9;:17;;:30;-1:-1:-1::0;;;;;5003:30:0::1;;;-1:-1:-1::0;;;;;5003:30:0::1;;;::::0;::::1;5072:5;5047:9;:22;;:30;;;;;;;;;::::0;::::1;5110:5;5091:9;:16;;:24;;;;;;;;;::::0;::::1;5148:4;5129:9;:16;;:23;;;;;;;;;::::0;::::1;5204:9;5166:8;:35;5175:9;:25;;;-1:-1:-1::0;;;;;5166:35:0::1;-1:-1:-1::0;;;;;5166:35:0::1;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;5166:47:0::1;;;;;-1:-1:-1::0;;;;;5166:47:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;5166:47:0::1;;;;;-1:-1:-1::0;;;;;5166:47:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5281:9;:42;;;5227:12;:24;5240:10;-1:-1:-1::0;;;;;5227:24:0::1;-1:-1:-1::0;;;;;5227:24:0::1;;;;;;;;;;;;:51;5252:9;:25;;;-1:-1:-1::0;;;;;5227:51:0::1;-1:-1:-1::0;;;;;5227:51:0::1;;;;;;;;;;;;;:96;;;;;-1:-1:-1::0;;;;;5227:96:0::1;;;;;-1:-1:-1::0;;;;;5227:96:0::1;;;;;;1732:784:::0;:::o;4933:870::-:1;5394:25;::::0;::::1;::::0;-1:-1:-1;;;;;5379:41:0;;::::1;5432:1;5379:41:::0;;;::::1;::::0;;;;;;;::::1;:55:::0;5354:143:::1;;;::::0;-1:-1:-1;;;5354:143:0;;7920:2:18;5354:143:0::1;::::0;::::1;7902:21:18::0;7959:2;7939:18;;;7932:30;7998:31;7978:18;;;7971:59;8047:18;;5354:143:0::1;7718:353:18::0;5354:143:0::1;5549:10;5619:1;5536:24:::0;;;:12:::1;:24;::::0;;;;;;;5561:25:::1;::::0;::::1;::::0;-1:-1:-1;;;;;5536:51:0;;::::1;::::0;;;;;;;;::::1;:85:::0;5511:171:::1;;;::::0;-1:-1:-1;;;5511:171:0;;8997:2:18;5511:171:0::1;::::0;::::1;8979:21:18::0;9036:2;9016:18;;;9009:30;9075:29;9055:18;;;9048:57;9122:18;;5511:171:0::1;8795:351:18::0;5511:171:0::1;5750:42;;::::0;;5709:10:::1;5696:24;::::0;;;:12:::1;:24;::::0;;;;;;;5721:25;;-1:-1:-1;;;;;5696:51:0;;::::1;::::0;;;;;;;;:96;;-1:-1:-1;;;;;;5696:96:0::1;::::0;;;::::1;::::0;;;::::1;::::0;;4851:958::o;4380:333::-;1424:23;-1:-1:-1;;;;;1410:54:0;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1402:65;;;;;;-1:-1:-1;;;;;4539:26:0;;::::1;4595:1;4539:26:::0;;;:12:::1;:26;::::0;;;;;;;:44;;::::1;::::0;;;;;;;;::::1;:58:::0;4518:127:::1;;;;-1:-1:-1::0;;;4518:127:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4662:26:0;;::::1;;::::0;;;:12:::1;:26;::::0;;;;;;;:44;;;::::1;::::0;;;;;;;;4655:51;;-1:-1:-1;;;;;;4655:51:0::1;::::0;;4380:333::o;14:173:18:-;82:20;;-1:-1:-1;;;;;131:31:18;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:18:o;383:344::-;450:2;444:9;492:3;480:16;;526:18;511:34;;547:22;;;508:62;505:185;;;612:10;607:3;603:20;600:1;593:31;647:4;644:1;637:15;675:4;672:1;665:15;505:185;706:2;699:22;383:344;:::o;732:177::-;799:20;;-1:-1:-1;;;;;;848:36:18;;838:47;;828:75;;899:1;896;889:12;914:156;980:20;;1040:4;1029:16;;1019:27;;1009:55;;1060:1;1057;1050:12;1075:118;1161:5;1154:13;1147:21;1140:5;1137:32;1127:60;;1183:1;1180;1173:12;1198:128;1263:20;;1292:28;1263:20;1292:28;:::i;1331:1290::-;1412:6;1465:3;1453:9;1444:7;1440:23;1436:33;1433:53;;;1482:1;1479;1472:12;1433:53;1508:17;;:::i;:::-;1561:9;1548:23;1541:5;1534:38;1604:37;1637:2;1626:9;1622:18;1604:37;:::i;:::-;1599:2;1592:5;1588:14;1581:61;1674:36;1706:2;1695:9;1691:18;1674:36;:::i;:::-;1669:2;1662:5;1658:14;1651:60;1743:36;1775:2;1764:9;1760:18;1743:36;:::i;:::-;1738:2;1731:5;1727:14;1720:60;1841:3;1830:9;1826:19;1813:33;1807:3;1800:5;1796:15;1789:58;1908:3;1897:9;1893:19;1880:33;1874:3;1867:5;1863:15;1856:58;1947:39;1981:3;1970:9;1966:19;1947:39;:::i;:::-;1941:3;1930:15;;1923:64;2048:3;2033:19;;;2020:33;2003:15;;;1996:58;2073:3;2121:18;;;2108:32;2092:14;;;2085:56;2160:3;2208:18;;;2195:32;2179:14;;;2172:56;2247:3;2282:35;2298:18;;;2282:35;:::i;:::-;2266:14;;;2259:59;2337:3;2372:35;2388:18;;;2372:35;:::i;:::-;2356:14;;;2349:59;2427:3;2462:38;2481:18;;;2462:38;:::i;:::-;2446:14;;;2439:62;2520:3;2555:35;2571:18;;;2555:35;:::i;:::-;2539:14;;;2532:59;2543:5;1331:1290;-1:-1:-1;;;1331:1290:18:o;3232:1194::-;3719:25;;;-1:-1:-1;;;;;;3780:37:18;;3775:2;3760:18;;3753:65;3866:4;3854:17;;;3849:2;3834:18;;3827:45;3112:16;;3921:2;3906:18;;3100:29;3706:3;3691:19;;3962:6;3956:3;3945:9;3941:19;3934:35;4006:6;4000:3;3989:9;3985:19;3978:35;4022:47;4064:3;4053:9;4049:19;4041:6;-1:-1:-1;;;;;2692:31:18;2680:44;;2626:104;4022:47;4106:6;4100:3;4089:9;4085:19;4078:35;4150:6;4144:3;4133:9;4129:19;4122:35;4194:6;4188:3;4177:9;4173:19;4166:35;4210:45;4250:3;4239:9;4235:19;4226:7;3206:13;3199:21;3187:34;;3136:91;4210:45;3206:13;;3199:21;4304:3;4289:19;;3187:34;-1:-1:-1;;;;;2692:31:18;;;;4361:3;4346:19;;2680:44;3206:13;3199:21;4415:3;4400:19;;;3187:34;3232:1194;;-1:-1:-1;;;;;;;;;;;3232:1194:18:o;4623:256::-;4689:6;4697;4750:2;4738:9;4729:7;4725:23;4721:32;4718:52;;;4766:1;4763;4756:12;4718:52;4789:29;4808:9;4789:29;:::i;:::-;4779:39;;4837:36;4869:2;4858:9;4854:18;4837:36;:::i;:::-;4827:46;;4623:256;;;;;:::o;4884:260::-;4952:6;4960;5013:2;5001:9;4992:7;4988:23;4984:32;4981:52;;;5029:1;5026;5019:12;4981:52;5052:29;5071:9;5052:29;:::i;:::-;5042:39;;5100:38;5134:2;5123:9;5119:18;5100:38;:::i;5149:1612::-;5358:13;;5340:32;;5419:4;5407:17;;;5401:24;5327:3;5312:19;;;5434:53;;5466:20;;5401:24;-1:-1:-1;;;;;;3008:36:18;2996:49;;2943:108;5434:53;;5536:4;5528:6;5524:17;5518:24;5551:54;5599:4;5588:9;5584:20;5568:14;3123:4;3112:16;3100:29;;3056:75;5551:54;;5654:4;5646:6;5642:17;5636:24;5669:54;5717:4;5706:9;5702:20;5686:14;3123:4;3112:16;3100:29;;3056:75;5669:54;;5779:4;5771:6;5767:17;5761:24;5754:4;5743:9;5739:20;5732:54;5842:4;5834:6;5830:17;5824:24;5817:4;5806:9;5802:20;5795:54;5898:4;5890:6;5886:17;5880:24;5913:56;5963:4;5952:9;5948:20;5932:14;-1:-1:-1;;;;;2692:31:18;2680:44;;2626:104;5913:56;-1:-1:-1;6025:4:18;6013:17;;;6007:24;5985:20;;;5978:54;6051:6;6099:15;;;6093:22;6073:18;;;6066:50;6135:6;6183:15;;;6177:22;6157:18;;;6150:50;6219:6;6262:15;;;6256:22;3206:13;3199:21;6319:18;;;3187:34;6357:6;6400:15;;;6394:22;3206:13;3199:21;6457:18;;;3187:34;6495:6;6538:15;;;6532:22;-1:-1:-1;;;;;2692:31:18;6598:18;;;2680:44;6636:6;6679:15;;;6673:22;3206:13;3199:21;6736:18;;;;3187:34;;;;5149:1612;:::o;6766:245::-;6833:6;6886:2;6874:9;6865:7;6861:23;6857:32;6854:52;;;6902:1;6899;6892:12;6854:52;6934:9;6928:16;6953:28;6975:5;6953:28;:::i;7016:346::-;7218:2;7200:21;;;7257:2;7237:18;;;7230:30;-1:-1:-1;;;7291:2:18;7276:18;;7269:52;7353:2;7338:18;;7016:346::o;7367:::-;7569:2;7551:21;;;7608:2;7588:18;;;7581:30;-1:-1:-1;;;7642:2:18;7627:18;;7620:52;7704:2;7689:18;;7367:346::o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "1519600",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "addCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "infinite",
                            "addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "infinite",
                            "changeCoinScopebyMarketor(address,uint8)": "infinite",
                            "coinList(address)": "20128",
                            "delCoinbyMarketor(address)": "infinite",
                            "delGateCoinbyMarketor(address,address)": "infinite",
                            "gateCoinList(address,address)": "infinite",
                            "gateContractAddress()": "infinite",
                            "getCoinInfo(address)": "23091",
                            "impoveGateCoinbyMarketor(address,address)": "infinite",
                            "isValidCoin(address)": "2578",
                            "lockCoinbyGator(address)": "infinite",
                            "lockCoinbyMarketor(address)": "infinite",
                            "marketCoinList(address)": "2617",
                            "marketorContractAddress()": "infinite",
                            "unlockCoinbyGator(address)": "infinite",
                            "unlockCoinbyMarketor(address)": "infinite",
                            "updateCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "infinite",
                            "updateCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "addCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "e911abec",
                        "addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "87a70938",
                        "changeCoinScopebyMarketor(address,uint8)": "5385cbf5",
                        "coinList(address)": "31ecdeb8",
                        "delCoinbyMarketor(address)": "7c3e2f02",
                        "delGateCoinbyMarketor(address,address)": "eaec0112",
                        "gateCoinList(address,address)": "cc0bf757",
                        "gateContractAddress()": "2f17d5df",
                        "getCoinInfo(address)": "e8dd4655",
                        "impoveGateCoinbyMarketor(address,address)": "cfcdca52",
                        "isValidCoin(address)": "328320bf",
                        "lockCoinbyGator(address)": "441eb548",
                        "lockCoinbyMarketor(address)": "b20be2b4",
                        "marketCoinList(address)": "3b830305",
                        "marketorContractAddress()": "492b7107",
                        "unlockCoinbyGator(address)": "385e4b7a",
                        "unlockCoinbyMarketor(address)": "1d3b8f67",
                        "updateCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "a935b6af",
                        "updateCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "24fd7139"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketorContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_scope\",\"type\":\"uint8\"}],\"name\":\"changeCoinScopebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"coinList\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"delCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"delGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gateCoinList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gateContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"getCoinInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"impoveGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coinAddress\",\"type\":\"address\"}],\"name\":\"isValidCoin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketCoinList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))\":{\"details\":\"Explain to a developer any extra details\"}},\"stateVariables\":{\"gateContractAddress\":{\"return\":\"The contract address\",\"returns\":{\"_0\":\"The contract address\"}},\"marketorContractAddress\":{\"return\":\"The contract address\",\"returns\":{\"_0\":\"The contract address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))\":{\"notice\":\"Explain to an end user what this does\"},\"gateContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"marketorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol\":\"MoonV1Coin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol\":{\"keccak256\":\"0x281ce1c33236c0c240cda52bd4c423a178e50522016e05a1ff3b127333cc9df4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://69ad569c8f5e82a0c15a91c7e9c4e73fc6ca22c8511bc80cbc0ee3eadefd5ed6\",\"dweb:/ipfs/QmcQdCTAT3zYYtTi1sheQx6yT4uzr9K3dBebvXqCqQRwMi\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol\":{\"keccak256\":\"0x72f7dcac41d734ccacf09b8d033d1cac3c15becb5a91c2707692557714f2bce7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f39d490129f9e0ba012c388186628efbede8d9091d8caf85504a8ced2d24ca56\",\"dweb:/ipfs/QmRhkZGatrNPPH5cvSYoHEFuarfdzuP3intFKRgj3Ryhew\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Manager.sol\":{\"keccak256\":\"0xd552d947b0bd23c0283bd49548bace3f7d8b0046871ee7f88205f3d73ae3ac1c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3961299517b90f99adc9b88a70b514b2d4cc016adafa5c6dbdb352643129415\",\"dweb:/ipfs/QmeoZUPD8H3NmvPxjLXGnFynEjgH39sFEwSFzrnwZGhFTB\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol\":{\"keccak256\":\"0x1c2a7d25c4df3bd615df013c217ed7a3dab1a1d78bb8f1390dfc88b277fefa57\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ce74856dbf250051fba0f7cf56e6e58102fce98333c2f639c7a1199202eaf9a6\",\"dweb:/ipfs/QmYEhmrsfzyUizcUATMUt2uU7HpqBgVksjf8ToDb559vbh\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GaterActions.sol\":{\"keccak256\":\"0x7c5fd6f95aad0538e5e77aa02d569ad1e92af4fe0adf3c46bd9cc77e2b9d360e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7b07c22acaf7d45e5b1d0e347ec2546fdb97c0e45fc6e22d5df8a2b47ed5e5fb\",\"dweb:/ipfs/QmW3Hqh5gcq4XUYqmQ6ZN8x1Siwci7fkVQ88wn5e4nHZj1\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol\":{\"keccak256\":\"0x78995605789e04e93e9e5cb8e369dc90f24d2a7f3c710be42006f8b84307ba1a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8f4309990de0223472a26293cec956b8d74dd67f3bc4ce017a356a50ee0f34d\",\"dweb:/ipfs/Qmbsfg8dDCRopUET5ABAvSCpKonf7uCHVARW7J3xaqCiGq\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol\":{\"keccak256\":\"0xe009186e1b5ce6f8f883b2d5b6a58b9f7427376fe7d2afd8571dec1fb95ce68b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e2007d95aa5767105375f3046cec93cf51a3a4818c4ebc9513cd7b882de9d95\",\"dweb:/ipfs/QmdLCEF3yhhBkGhHdGaM8WVy2LfBHGLW6T3tRWfqiwPtKy\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol\":{\"keccak256\":\"0xd03715fc3391f5aeb00ca1620a86cd85efc9b3a99a9c283e182f739e427f95b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3b2e2174ee6495d8a354c8825b33f25bd514becf93aca020162d80a256e7291c\",\"dweb:/ipfs/QmaqFMfBz5dELTaFLazLgjXUsJWT6hVga2s3xdYc2hAjF1\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Coin.sol\":{\"keccak256\":\"0xb4c60db7bf50ac85bcd31dcaa9c3d230c17c40d0b58837e995e1546a4c6c4473\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ebc08ef5bc38400943cd6f767929c41d2d7276670918c8344aa34b5c29bd0827\",\"dweb:/ipfs/QmbrgaKvBLLBaFwHXnTK4N3B3Ueb6A3X6oVWQ4yRpLCmVp\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Manager.sol\":{\"keccak256\":\"0x427c430fd81ae0869fe56d41e19ed2dda3dae2c909ecc04377a1ca37983bf877\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9c4fec5c29fe8813cf06d95a9c3f2b4c99675b4b59c44f5481e3987a81f6c29\",\"dweb:/ipfs/QmWBXHQFi4PtL6LiWCRDF35XcVPRHBEAXt1Ye937Yw76KQ\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Events.sol\":{\"keccak256\":\"0xbbaec4165ad9931dbb85bc842c301f0183377bdaa8c192ede335258681676839\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a7e4ce4f6e8b82cb7e823d6b9a2ae682e38bf72f2aefc7e4ff6a150cce59a8bb\",\"dweb:/ipfs/QmNWLmSHKsfvBrdZsMea73wVafTyvZZEgAn5KcDYUXS1Mc\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Immutables.sol\":{\"keccak256\":\"0xd8036ef421a6187d45df01717af3959f3fabd647a35208815ff044e27c2f16d3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d38402d77802f86dce1f6c58bb6166a97f83702c3bb08909fcd856134d4f99c5\",\"dweb:/ipfs/QmXqhJwkcdzWpngoJwXUiAvPAUHVndJLSQW9nHkm33gFYK\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1MarketCreatorActions.sol\":{\"keccak256\":\"0x8e27f2ef0685114e1ee9ff38ae882760458e750030abf7cdd27f03a7c91e0413\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://df1e6fd05ee40468f31bfe0e229a4f19ae258de34bd0034f975190f4d90a453e\",\"dweb:/ipfs/QmU5H2LbDxWGKy4tM4FwXxEEoj72Mbme4XMeB5nuvQfn43\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1State.sol\":{\"keccak256\":\"0x1da7bafb43b2d8e1b62c4b146d9d93c6f9656d16cc75a05e1550545bfd891501\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3eb7ace0bbc0c123e993640afb7cecb023c0615733fdd78d0126c75a581f7a47\",\"dweb:/ipfs/QmWf1ZyabdYkBFcwe32npBnHWGJ3Vy59carWoRQ14FEsgJ\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":{\"keccak256\":\"0x6acb4a762f349ab39bd48ff34c150b55f55aabc4826379838391749136f3aee9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58552a104e1a046883cf116fe6748600caf7c8ebe341f82a38aa6fbfb09355cb\",\"dweb:/ipfs/QmQxUAK9fzefN6afoJ2CGyRWtETz1TEcZoJhDFCYJ3WY4V\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":{\"keccak256\":\"0xdbbcc3e545cc8d7d8eebe4b1dbaccee4d2adbce4785cb7ac5f4712093c72db52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d7251ca8ee12ad7009fe9f280aa8be028502f51e7465fe5314b85b9a2815991\",\"dweb:/ipfs/QmRQ5Z78r3qDKhBbRbDs8d4ThNk5fLN5S5g6tosHwa6jdo\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LSTThings.sol\":{\"keccak256\":\"0x8f10ad7cdca3ab033387dc360617f52dd3b41642cb627866c993e5202bdf8db7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://56243f8b3bcaeb92c7423aa4b040c0fc22b1975b018e4292e3aa98fc251335e8\",\"dweb:/ipfs/QmW7XoPQKzLNmbU3jfMP3BmX5WwZNrddjtmyb7mYMSdj9E\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 11,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                            "label": "marketCoinList",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_mapping(t_address,t_address)"
                        },
                        {
                            "astId": 17,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                            "label": "gateCoinList",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_mapping(t_address,t_mapping(t_address,t_address))"
                        },
                        {
                            "astId": 22,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                            "label": "coinList",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_mapping(t_address,t_struct(Info)1284_storage)"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_bool": {
                            "encoding": "inplace",
                            "label": "bool",
                            "numberOfBytes": "1"
                        },
                        "t_bytes32": {
                            "encoding": "inplace",
                            "label": "bytes32",
                            "numberOfBytes": "32"
                        },
                        "t_bytes6": {
                            "encoding": "inplace",
                            "label": "bytes6",
                            "numberOfBytes": "6"
                        },
                        "t_mapping(t_address,t_address)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => address)",
                            "numberOfBytes": "32",
                            "value": "t_address"
                        },
                        "t_mapping(t_address,t_mapping(t_address,t_address))": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => mapping(address => address))",
                            "numberOfBytes": "32",
                            "value": "t_mapping(t_address,t_address)"
                        },
                        "t_mapping(t_address,t_struct(Info)1284_storage)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => struct LCoin.Info)",
                            "numberOfBytes": "32",
                            "value": "t_struct(Info)1284_storage"
                        },
                        "t_struct(Info)1284_storage": {
                            "encoding": "inplace",
                            "label": "struct LCoin.Info",
                            "members": [
                                {
                                    "astId": 1257,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "coinFullName",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_bytes32"
                                },
                                {
                                    "astId": 1259,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "symbol",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_bytes6"
                                },
                                {
                                    "astId": 1261,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "scope",
                                    "offset": 6,
                                    "slot": "1",
                                    "type": "t_uint8"
                                },
                                {
                                    "astId": 1263,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "decimals",
                                    "offset": 7,
                                    "slot": "1",
                                    "type": "t_uint8"
                                },
                                {
                                    "astId": 1265,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "maxSupply",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 1267,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "totalSupply",
                                    "offset": 0,
                                    "slot": "3",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 1269,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "contractAddress",
                                    "offset": 0,
                                    "slot": "4",
                                    "type": "t_address"
                                },
                                {
                                    "astId": 1271,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "WhitePaperUrl",
                                    "offset": 0,
                                    "slot": "5",
                                    "type": "t_bytes32"
                                },
                                {
                                    "astId": 1273,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "OfficalWebsite",
                                    "offset": 0,
                                    "slot": "6",
                                    "type": "t_bytes32"
                                },
                                {
                                    "astId": 1275,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "blockExplorerUrl",
                                    "offset": 0,
                                    "slot": "7",
                                    "type": "t_bytes32"
                                },
                                {
                                    "astId": 1277,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "marketunlock",
                                    "offset": 0,
                                    "slot": "8",
                                    "type": "t_bool"
                                },
                                {
                                    "astId": 1279,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "unlock",
                                    "offset": 1,
                                    "slot": "8",
                                    "type": "t_bool"
                                },
                                {
                                    "astId": 1281,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "creator",
                                    "offset": 2,
                                    "slot": "8",
                                    "type": "t_address"
                                },
                                {
                                    "astId": 1283,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol:MoonV1Coin",
                                    "label": "isUsed",
                                    "offset": 22,
                                    "slot": "8",
                                    "type": "t_bool"
                                }
                            ],
                            "numberOfBytes": "288"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        },
                        "t_uint8": {
                            "encoding": "inplace",
                            "label": "uint8",
                            "numberOfBytes": "1"
                        }
                    }
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": {
                            "notice": "Explain to an end user what this does"
                        },
                        "gateContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        },
                        "marketorContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        }
                    },
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol": {
            "MoonV1Gater": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_marketContractAddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_marketorContractAddress",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "address",
                                        "name": "market",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "gateAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "uint160",
                                        "name": "authority",
                                        "type": "uint160"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "name",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "website",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32[10]",
                                        "name": "webserverip",
                                        "type": "bytes32[10]"
                                    },
                                    {
                                        "internalType": "uint32",
                                        "name": "createtimestamp",
                                        "type": "uint32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LGate.Info",
                                "name": "_gater",
                                "type": "tuple"
                            }
                        ],
                        "name": "addGater",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_gater",
                                "type": "address"
                            }
                        ],
                        "name": "delGatebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "gateList",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "market",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "gateAddress",
                                "type": "address"
                            },
                            {
                                "internalType": "uint160",
                                "name": "authority",
                                "type": "uint160"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "name",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "website",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "uint32",
                                "name": "createtimestamp",
                                "type": "uint32"
                            },
                            {
                                "internalType": "bool",
                                "name": "marketunlock",
                                "type": "bool"
                            },
                            {
                                "internalType": "bool",
                                "name": "unlock",
                                "type": "bool"
                            },
                            {
                                "internalType": "bool",
                                "name": "isUsed",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "isValidGater",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "lockGatebyGater",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_gateraddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockGatebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketorContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "unlockGatebyGater",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_gateraddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockGatebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "address",
                                        "name": "market",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "gateAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "uint160",
                                        "name": "authority",
                                        "type": "uint160"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "name",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "website",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32[10]",
                                        "name": "webserverip",
                                        "type": "bytes32[10]"
                                    },
                                    {
                                        "internalType": "uint32",
                                        "name": "createtimestamp",
                                        "type": "uint32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LGate.Info",
                                "name": "_gater",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateGatebyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "address",
                                        "name": "market",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "gateAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "uint160",
                                        "name": "authority",
                                        "type": "uint160"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "name",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "website",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32[10]",
                                        "name": "webserverip",
                                        "type": "bytes32[10]"
                                    },
                                    {
                                        "internalType": "uint32",
                                        "name": "createtimestamp",
                                        "type": "uint32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LGate.Info",
                                "name": "_gater",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateGatebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {
                            "@_641": {
                                "entryPoint": null,
                                "id": 641,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "abi_decode_address_fromMemory": {
                                "entryPoint": 96,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_decode_tuple_t_addresst_address_fromMemory": {
                                "entryPoint": 124,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 2
                            }
                        },
                        "generatedSources": [
                            {
                                "ast": {
                                    "nodeType": "YulBlock",
                                    "src": "0:491:18",
                                    "statements": [
                                        {
                                            "nodeType": "YulBlock",
                                            "src": "6:3:18",
                                            "statements": []
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "74:117:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "84:22:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "99:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "93:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "93:13:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "84:5:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "169:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "178:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "181:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "171:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "171:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "171:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "128:5:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "139:5:18"
                                                                                },
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "154:3:18",
                                                                                                    "type": "",
                                                                                                    "value": "160"
                                                                                                },
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "159:1:18",
                                                                                                    "type": "",
                                                                                                    "value": "1"
                                                                                                }
                                                                                            ],
                                                                                            "functionName": {
                                                                                                "name": "shl",
                                                                                                "nodeType": "YulIdentifier",
                                                                                                "src": "150:3:18"
                                                                                            },
                                                                                            "nodeType": "YulFunctionCall",
                                                                                            "src": "150:11:18"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "163:1:18",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "sub",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "146:3:18"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "146:19:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "135:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "135:31:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "125:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "125:42:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "118:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "118:50:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "115:70:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_address_fromMemory",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "53:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "64:5:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "14:177:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "294:195:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "340:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "349:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "352:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "342:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "342:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "342:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "315:7:18"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "324:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "311:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "311:23:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "336:2:18",
                                                                    "type": "",
                                                                    "value": "64"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "307:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "307:32:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "304:52:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "365:50:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "405:9:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address_fromMemory",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "375:29:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "375:40:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "365:6:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "424:59:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "468:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "479:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "464:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "464:18:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address_fromMemory",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "434:29:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "434:49:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value1",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "424:6:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "252:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "263:7:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "275:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value1",
                                                    "nodeType": "YulTypedName",
                                                    "src": "283:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "196:293:18"
                                        }
                                    ]
                                },
                                "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
                                "id": 18,
                                "language": "Yul",
                                "name": "#utility.yul"
                            }
                        ],
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b50604051610f8d380380610f8d83398101604081905261002f9161007c565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610ecf806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a478608811610071578063a478608814610204578063ab3acb5c14610217578063b614984d14610244578063d8feb7ff14610257578063f1c9f40f1461026a578063f3a425371461027257600080fd5b80633087cbe3146100b95780633bbae141146100e957806345df4987146100f3578063492b7107146101cb57806371271f4d146101de57806376941300146101f1575b600080fd5b6001546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f1610285565b005b61016c610101366004610c61565b600060208190529081526040902080546001820154600283015460038401546004850154600f909501546001600160a01b0394851695938516949290921692909163ffffffff81169060ff600160201b8204811691600160281b8104821691600160301b9091041689565b604080516001600160a01b039a8b168152988a1660208a015296909816958701959095526060860193909352608085019190915263ffffffff1660a0840152151560c0830152151560e0820152901515610100820152610120016100e0565b6002546100cc906001600160a01b031681565b6100f16101ec366004610d60565b610343565b6100f16101ff366004610c61565b610559565b6100f1610212366004610c61565b61064d565b336000908152602081905260409020600f0154600160201b900460ff1660405190151581526020016100e0565b6100f1610252366004610c61565b610747565b6100f1610265366004610d60565b610881565b6100f16109b4565b6100f1610280366004610d60565b610a63565b336000908152602081905260409020600f0154600160201b900460ff1615156001146102b057600080fd5b336000908152602081905260409020600f0154600160301b900460ff16151560011480156102f75750336000818152602081905260409020600101546001600160a01b0316145b61031c5760405162461bcd60e51b815260040161031390610e1f565b60405180910390fd5b336000908152602081905260409020600f01805465ff00000000001916600160281b179055565b600260009054906101000a90046001600160a01b03166001600160a01b0316631487f2526040518163ffffffff1660e01b8152600401602060405180830381865afa158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190610e4e565b15156001146103c857600080fd5b6020818101516001600160a01b031660009081529081905260409020600f0154600160301b900460ff1615156001146104135760405162461bcd60e51b815260040161031390610e6b565b602081810180516001600160a01b0390811660009081528084526040808220600f90810154600160201b900460ff908116151560e089015285518516845283875282842090910154600160281b900416151561010087015283518316825293819052839020845181546001600160a01b031990811691841691909117825592516001820180548516918416919091179055928401516002840180549093169116179055606082015160038201556080820151600482015560a08201518291906104e2906005830190600a610bd7565b5060c0820151600f909101805460e0840151610100850151610120909501511515600160301b0266ff00000000000019951515600160281b029590951666ffff000000000019911515600160201b0264ffffffffff1990931663ffffffff9095169490941791909117169190911791909117905550565b600260009054906101000a90046001600160a01b03166001600160a01b0316631487f2526040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d09190610e4e565b15156001146105de57600080fd5b6001600160a01b0381166000908152602081905260409020600f0154600160301b900460ff1615156001146106255760405162461bcd60e51b815260040161031390610e1f565b6001600160a01b03166000908152602081905260409020600f01805464ff0000000019169055565b600260009054906101000a90046001600160a01b03166001600160a01b0316631487f2526040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c49190610e4e565b15156001146106d257600080fd5b6001600160a01b0381166000908152602081905260409020600f0154600160301b900460ff1615156001146107195760405162461bcd60e51b815260040161031390610e1f565b6001600160a01b03166000908152602081905260409020600f01805464ff000000001916600160201b179055565b600260009054906101000a90046001600160a01b03166001600160a01b0316631487f2526040518163ffffffff1660e01b8152600401602060405180830381865afa15801561079a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107be9190610e4e565b15156001146107cc57600080fd5b6001600160a01b0381166000908152602081905260409020600f0154600160301b900460ff1615156001146108135760405162461bcd60e51b815260040161031390610e6b565b6001600160a01b038116600090815260208190526040812080546001600160a01b0319908116825560018201805482169055600282018054909116905560038101829055600481018290559061086c6005830182610c15565b50600f01805466ffffffffffffff1916905550565b6020818101516001600160a01b031660009081529081905260409020600f0154600160301b900460ff1615156001036108cc5760405162461bcd60e51b815260040161031390610e6b565b60208101516001600160a01b0316331461091c5760405162461bcd60e51b81526020600482015260116024820152703a34329033b0ba32b91034b9903cb7bab960791b6044820152606401610313565b600060e082018190526101008201819052602080830180516001600160a01b03908116845291839052604092839020845181549084166001600160a01b0319918216178255915160018201805491851691841691909117905592840151600284018054919093169116179055606082015160038201556080820151600482015560a08201518291906104e2906005830190600a610bd7565b336000908152602081905260409020600f0154600160201b900460ff1615156001146109df57600080fd5b336000908152602081905260409020600f0154600160301b900460ff1615156001148015610a265750336000818152602081905260409020600101546001600160a01b0316145b610a425760405162461bcd60e51b815260040161031390610e1f565b336000908152602081905260409020600f01805465ff000000000019169055565b336000908152602081905260409020600f0154600160201b900460ff161515600114610a8e57600080fd5b6020818101516001600160a01b031660009081529081905260409020600f0154600160301b900460ff161515600114610ad95760405162461bcd60e51b815260040161031390610e6b565b6020808201516001600160a01b03908116600090815291829052604090912060010154163314610b3f5760405162461bcd60e51b81526020600482015260116024820152703a34329033b0ba32b91034b9903cb7bab960791b6044820152606401610313565b600060e0820181905260016101008301819052602080840180516001600160a01b03908116855291849052604093849020855181546001600160a01b03199081169185169190911782559151938101805483169484169490941790935592840151600283018054909416911617909155606082015160038201556080820151600482015560a08201518291906104e2906005830190600a5b82600a8101928215610c05579160200282015b82811115610c05578251825591602001919060010190610bea565b50610c11929150610c27565b5090565b50610c2490600a810190610c27565b50565b5b80821115610c115760008155600101610c28565b6001600160a01b0381168114610c2457600080fd5b8035610c5c81610c3c565b919050565b600060208284031215610c7357600080fd5b8135610c7e81610c3c565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715610cbf57610cbf610c85565b60405290565b600082601f830112610cd657600080fd5b60405161014080820182811067ffffffffffffffff82111715610cfb57610cfb610c85565b60405283018185821115610d0e57600080fd5b845b82811015610d28578035825260209182019101610d10565b509195945050505050565b803563ffffffff81168114610c5c57600080fd5b8015158114610c2457600080fd5b8035610c5c81610d47565b60006102608284031215610d7357600080fd5b610d7b610c9b565b610d8483610c51565b8152610d9260208401610c51565b6020820152610da360408401610c51565b60408201526060830135606082015260808301356080820152610dc98460a08501610cc5565b60a0820152610ddb6101e08401610d33565b60c0820152610ded6102008401610d55565b60e0820152610dff6102208401610d55565b610100820152610e126102408401610d55565b6101208201529392505050565b6020808252601590820152741d1a194819d85d195c881a5cdb9bdd08195e1a5cdd605a1b604082015260600190565b600060208284031215610e6057600080fd5b8151610c7e81610d47565b6020808252601490820152733a34329033b0ba32b91034b99032bc34b9ba32b960611b60408201526060019056fea26469706673582212202c91dffc0c69f0022f503d3cca180606d251e74d6bf1b6c413695ab6be75f82f64736f6c634300080f0033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF8D CODESIZE SUB DUP1 PUSH2 0xF8D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x7C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0xAF JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98 DUP4 PUSH2 0x60 JUMP JUMPDEST SWAP2 POP PUSH2 0xA6 PUSH1 0x20 DUP5 ADD PUSH2 0x60 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xECF DUP1 PUSH2 0xBE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4786088 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA4786088 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xAB3ACB5C EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xB614984D EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xD8FEB7FF EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xF1C9F40F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xF3A42537 EQ PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3087CBE3 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3BBAE141 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x45DF4987 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x492B7107 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x71271F4D EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x76941300 EQ PUSH2 0x1F1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x285 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0xF SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 SWAP4 DUP6 AND SWAP5 SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x28 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 SWAP2 DIV AND DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP11 DUP12 AND DUP2 MSTORE SWAP9 DUP11 AND PUSH1 0x20 DUP11 ADD MSTORE SWAP7 SWAP1 SWAP9 AND SWAP6 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x2F7 JUMPI POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD DUP1 SLOAD PUSH6 0xFF0000000000 NOT AND PUSH1 0x1 PUSH1 0x28 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x396 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0xF SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE DUP6 MLOAD DUP6 AND DUP5 MSTORE DUP4 DUP8 MSTORE DUP3 DUP5 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV AND ISZERO ISZERO PUSH2 0x100 DUP8 ADD MSTORE DUP4 MLOAD DUP4 AND DUP3 MSTORE SWAP4 DUP2 SWAP1 MSTORE DUP4 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP6 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP3 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x4E2 SWAP1 PUSH1 0x5 DUP4 ADD SWAP1 PUSH1 0xA PUSH2 0xBD7 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xF SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xE0 DUP5 ADD MLOAD PUSH2 0x100 DUP6 ADD MLOAD PUSH2 0x120 SWAP1 SWAP6 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0x30 SHL MUL PUSH7 0xFF000000000000 NOT SWAP6 ISZERO ISZERO PUSH1 0x1 PUSH1 0x28 SHL MUL SWAP6 SWAP1 SWAP6 AND PUSH7 0xFFFF0000000000 NOT SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH5 0xFFFFFFFFFF NOT SWAP1 SWAP4 AND PUSH4 0xFFFFFFFF SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP2 SWAP1 SWAP2 OR AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD DUP1 SLOAD PUSH5 0xFF00000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD DUP1 SLOAD PUSH5 0xFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 PUSH2 0x86C PUSH1 0x5 DUP4 ADD DUP3 PUSH2 0xC15 JUMP JUMPDEST POP PUSH1 0xF ADD DUP1 SLOAD PUSH7 0xFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x8CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x3A34329033B0BA32B91034B9903CB7BAB9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x313 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE SWAP2 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP3 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x4E2 SWAP1 PUSH1 0x5 DUP4 ADD SWAP1 PUSH1 0xA PUSH2 0xBD7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x9DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xA26 JUMPI POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xA42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE1F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD DUP1 SLOAD PUSH6 0xFF0000000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xA8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD AND CALLER EQ PUSH2 0xB3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x3A34329033B0BA32B91034B9903CB7BAB9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x313 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH2 0x100 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE SWAP2 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP4 DUP5 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP2 MLOAD SWAP4 DUP2 ADD DUP1 SLOAD DUP4 AND SWAP5 DUP5 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP3 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP1 SWAP5 AND SWAP2 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x4E2 SWAP1 PUSH1 0x5 DUP4 ADD SWAP1 PUSH1 0xA JUMPDEST DUP3 PUSH1 0xA DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xC05 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC05 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBEA JUMP JUMPDEST POP PUSH2 0xC11 SWAP3 SWAP2 POP PUSH2 0xC27 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP PUSH2 0xC24 SWAP1 PUSH1 0xA DUP2 ADD SWAP1 PUSH2 0xC27 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC11 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xC5C DUP2 PUSH2 0xC3C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC7E DUP2 PUSH2 0xC3C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCBF JUMPI PUSH2 0xCBF PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 DUP1 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCFB JUMPI PUSH2 0xCFB PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 ADD DUP2 DUP6 DUP3 GT ISZERO PUSH2 0xD0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD28 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xD10 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xC5C DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7B PUSH2 0xC9B JUMP JUMPDEST PUSH2 0xD84 DUP4 PUSH2 0xC51 JUMP JUMPDEST DUP2 MSTORE PUSH2 0xD92 PUSH1 0x20 DUP5 ADD PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xDA3 PUSH1 0x40 DUP5 ADD PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0xDC9 DUP5 PUSH1 0xA0 DUP6 ADD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xDDB PUSH2 0x1E0 DUP5 ADD PUSH2 0xD33 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xDED PUSH2 0x200 DUP5 ADD PUSH2 0xD55 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0xDFF PUSH2 0x220 DUP5 ADD PUSH2 0xD55 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0xE12 PUSH2 0x240 DUP5 ADD PUSH2 0xD55 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x1D1A194819D85D195C881A5CDB9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC7E DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x3A34329033B0BA32B91034B99032BC34B9BA32B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP2 0xDF 0xFC 0xC PUSH10 0xF0022F503D3CCA180606 0xD2 MLOAD 0xE7 0x4D PUSH12 0xF1B6C413695AB6BE75F82F64 PUSH20 0x6F6C634300080F00330000000000000000000000 ",
                        "sourceMap": "138:4063:1:-:0;;;346:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;456:21;:46;;-1:-1:-1;;;;;456:46:1;;;-1:-1:-1;;;;;;456:46:1;;;;;;;512:23;:50;;;;;;;;;;;138:4063;;14:177:18;93:13;;-1:-1:-1;;;;;135:31:18;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;138:4063:1;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {
                            "@addGater_956": {
                                "entryPoint": 2177,
                                "id": 956,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@delGatebyMarketor_791": {
                                "entryPoint": 1863,
                                "id": 791,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@gateList_621": {
                                "entryPoint": null,
                                "id": 621,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@isValidGater_968": {
                                "entryPoint": null,
                                "id": 968,
                                "parameterSlots": 0,
                                "returnSlots": 1
                            },
                            "@lockGatebyGater_825": {
                                "entryPoint": 645,
                                "id": 825,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@lockGatebyMarketor_696": {
                                "entryPoint": 1613,
                                "id": 696,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@marketContractAddress_623": {
                                "entryPoint": null,
                                "id": 623,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@marketorContractAddress_625": {
                                "entryPoint": null,
                                "id": 625,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@unlockGatebyGater_859": {
                                "entryPoint": 2484,
                                "id": 859,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@unlockGatebyMarketor_721": {
                                "entryPoint": 1369,
                                "id": 721,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@updateGatebyGator_910": {
                                "entryPoint": 2659,
                                "id": 910,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@updateGatebyMarketor_768": {
                                "entryPoint": 835,
                                "id": 768,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "abi_decode_address": {
                                "entryPoint": 3153,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_decode_array_bytes32": {
                                "entryPoint": 3269,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_decode_bool": {
                                "entryPoint": 3413,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_decode_tuple_t_address": {
                                "entryPoint": 3169,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_decode_tuple_t_bool_fromMemory": {
                                "entryPoint": 3662,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_decode_tuple_t_struct$_Info_$1332_memory_ptr": {
                                "entryPoint": 3424,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_decode_uint32": {
                                "entryPoint": 3379,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_address_t_address_t_uint160_t_bytes32_t_bytes32_t_uint32_t_bool_t_bool_t_bool__to_t_address_t_address_t_uint160_t_bytes32_t_bytes32_t_uint32_t_bool_t_bool_t_bool__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 10,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_62f94b9804c29001f283fbd7da0d1a25187212eaa171a5ff798562d0aaaec2bf__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_8afcf45f13c6bb7b3e67748a0f81d2aa57c1d04184b87dcbe5a2de6c65200cde__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": 3691,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_e5f5b1c469e73fdd536d3170ec5aa83949a0dbb5b35f9fb280b5ba6c579e799c__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": 3615,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "allocate_memory": {
                                "entryPoint": 3227,
                                "id": null,
                                "parameterSlots": 0,
                                "returnSlots": 1
                            },
                            "panic_error_0x41": {
                                "entryPoint": 3205,
                                "id": null,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "validator_revert_address": {
                                "entryPoint": 3132,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "validator_revert_bool": {
                                "entryPoint": 3399,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            }
                        },
                        "generatedSources": [
                            {
                                "ast": {
                                    "nodeType": "YulBlock",
                                    "src": "0:5517:18",
                                    "statements": [
                                        {
                                            "nodeType": "YulBlock",
                                            "src": "6:3:18",
                                            "statements": []
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "115:102:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "125:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "137:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "148:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "133:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "133:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "125:4:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "167:9:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "182:6:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "198:3:18",
                                                                                            "type": "",
                                                                                            "value": "160"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "203:1:18",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "shl",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "194:3:18"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "194:11:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "207:1:18",
                                                                                    "type": "",
                                                                                    "value": "1"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "sub",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "190:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "190:19:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "178:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "178:32:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "160:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "160:51:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "160:51:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "84:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "95:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "106:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "14:203:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "267:86:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "331:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "340:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "343:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "333:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "333:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "333:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "290:5:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "301:5:18"
                                                                                },
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "316:3:18",
                                                                                                    "type": "",
                                                                                                    "value": "160"
                                                                                                },
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "321:1:18",
                                                                                                    "type": "",
                                                                                                    "value": "1"
                                                                                                }
                                                                                            ],
                                                                                            "functionName": {
                                                                                                "name": "shl",
                                                                                                "nodeType": "YulIdentifier",
                                                                                                "src": "312:3:18"
                                                                                            },
                                                                                            "nodeType": "YulFunctionCall",
                                                                                            "src": "312:11:18"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "325:1:18",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "sub",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "308:3:18"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "308:19:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "297:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "297:31:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "287:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "287:42:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "280:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "280:50:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "277:70:18"
                                                    }
                                                ]
                                            },
                                            "name": "validator_revert_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "256:5:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "222:131:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "407:85:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "417:29:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "439:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "426:12:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "426:20:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "417:5:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "480:5:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "validator_revert_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "455:24:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "455:31:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "455:31:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "386:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "397:5:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "358:134:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "567:177:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "613:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "622:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "625:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "615:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "615:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "615:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "588:7:18"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "597:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "584:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "584:23:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "609:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "580:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "580:32:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "577:52:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "638:36:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "664:9:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "651:12:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "651:23:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulTypedName",
                                                                "src": "642:5:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "708:5:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "validator_revert_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "683:24:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "683:31:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "683:31:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "723:15:18",
                                                        "value": {
                                                            "name": "value",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "733:5:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "723:6:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "533:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "544:7:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "556:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "497:247:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "1054:556:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "1064:27:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1076:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1087:3:18",
                                                                    "type": "",
                                                                    "value": "288"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1072:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1072:19:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1064:4:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "1100:29:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1118:3:18",
                                                                            "type": "",
                                                                            "value": "160"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1123:1:18",
                                                                            "type": "",
                                                                            "value": "1"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "shl",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1114:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1114:11:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1127:1:18",
                                                                    "type": "",
                                                                    "value": "1"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "sub",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1110:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1110:19:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_1",
                                                                "nodeType": "YulTypedName",
                                                                "src": "1104:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1145:9:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1160:6:18"
                                                                        },
                                                                        {
                                                                            "name": "_1",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1168:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1156:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1156:15:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1138:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1138:34:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1138:34:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1192:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1203:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1188:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1188:18:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value1",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1212:6:18"
                                                                        },
                                                                        {
                                                                            "name": "_1",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1220:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1208:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1208:15:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1181:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1181:43:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1181:43:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1244:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1255:2:18",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1240:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1240:18:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value2",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1264:6:18"
                                                                        },
                                                                        {
                                                                            "name": "_1",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1272:2:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1260:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1260:15:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1233:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1233:43:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1233:43:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1296:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1307:2:18",
                                                                            "type": "",
                                                                            "value": "96"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1292:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1292:18:18"
                                                                },
                                                                {
                                                                    "name": "value3",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1312:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1285:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1285:34:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1285:34:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1339:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1350:3:18",
                                                                            "type": "",
                                                                            "value": "128"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1335:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1335:19:18"
                                                                },
                                                                {
                                                                    "name": "value4",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1356:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1328:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1328:35:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1328:35:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1383:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1394:3:18",
                                                                            "type": "",
                                                                            "value": "160"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1379:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1379:19:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value5",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1404:6:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1412:10:18",
                                                                            "type": "",
                                                                            "value": "0xffffffff"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1400:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1400:23:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1372:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1372:52:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1372:52:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1444:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1455:3:18",
                                                                            "type": "",
                                                                            "value": "192"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1440:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1440:19:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value6",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1475:6:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1468:6:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1468:14:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "iszero",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1461:6:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1461:22:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1433:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1433:51:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1433:51:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1504:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1515:3:18",
                                                                            "type": "",
                                                                            "value": "224"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1500:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1500:19:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value7",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1535:6:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1528:6:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1528:14:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "iszero",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1521:6:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1521:22:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1493:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1493:51:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1493:51:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1564:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1575:3:18",
                                                                            "type": "",
                                                                            "value": "256"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1560:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1560:19:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value8",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1595:6:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1588:6:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1588:14:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "iszero",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1581:6:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1581:22:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1553:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1553:51:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1553:51:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_address_t_address_t_uint160_t_bytes32_t_bytes32_t_uint32_t_bool_t_bool_t_bool__to_t_address_t_address_t_uint160_t_bytes32_t_bytes32_t_uint32_t_bool_t_bool_t_bool__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "959:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value8",
                                                    "nodeType": "YulTypedName",
                                                    "src": "970:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value7",
                                                    "nodeType": "YulTypedName",
                                                    "src": "978:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value6",
                                                    "nodeType": "YulTypedName",
                                                    "src": "986:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value5",
                                                    "nodeType": "YulTypedName",
                                                    "src": "994:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value4",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1002:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value3",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1010:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value2",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1018:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value1",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1026:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1034:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1045:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "749:861:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "1647:95:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1664:1:18",
                                                                    "type": "",
                                                                    "value": "0"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1671:3:18",
                                                                            "type": "",
                                                                            "value": "224"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1676:10:18",
                                                                            "type": "",
                                                                            "value": "0x4e487b71"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "shl",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1667:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1667:20:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1657:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1657:31:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1657:31:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1704:1:18",
                                                                    "type": "",
                                                                    "value": "4"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1707:4:18",
                                                                    "type": "",
                                                                    "value": "0x41"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1697:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1697:15:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1697:15:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1728:1:18",
                                                                    "type": "",
                                                                    "value": "0"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1731:4:18",
                                                                    "type": "",
                                                                    "value": "0x24"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "revert",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1721:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1721:15:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1721:15:18"
                                                    }
                                                ]
                                            },
                                            "name": "panic_error_0x41",
                                            "nodeType": "YulFunctionDefinition",
                                            "src": "1615:127:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "1788:209:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "1798:19:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1814:2:18",
                                                                    "type": "",
                                                                    "value": "64"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1808:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1808:9:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "memPtr",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1798:6:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "1826:37:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memPtr",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1848:6:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1856:6:18",
                                                                    "type": "",
                                                                    "value": "0x0140"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1844:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1844:19:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "newFreePtr",
                                                                "nodeType": "YulTypedName",
                                                                "src": "1830:10:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "1938:22:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [],
                                                                        "functionName": {
                                                                            "name": "panic_error_0x41",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1940:16:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "1940:18:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "1940:18:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "newFreePtr",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1881:10:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1893:18:18",
                                                                            "type": "",
                                                                            "value": "0xffffffffffffffff"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "gt",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1878:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1878:34:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "newFreePtr",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1917:10:18"
                                                                        },
                                                                        {
                                                                            "name": "memPtr",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1929:6:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "lt",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1914:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1914:22:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "or",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1875:2:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1875:62:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "1872:88:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1976:2:18",
                                                                    "type": "",
                                                                    "value": "64"
                                                                },
                                                                {
                                                                    "name": "newFreePtr",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1980:10:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1969:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1969:22:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1969:22:18"
                                                    }
                                                ]
                                            },
                                            "name": "allocate_memory",
                                            "nodeType": "YulFunctionDefinition",
                                            "returnVariables": [
                                                {
                                                    "name": "memPtr",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1777:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "1747:250:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "2062:608:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "2111:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "2120:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "2123:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2113:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "2113:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "2113:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "offset",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2090:6:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "2098:4:18",
                                                                                    "type": "",
                                                                                    "value": "0x1f"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2086:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2086:17:18"
                                                                        },
                                                                        {
                                                                            "name": "end",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2105:3:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "slt",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2082:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2082:27:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2075:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2075:35:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "2072:55:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2136:23:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "2156:2:18",
                                                                    "type": "",
                                                                    "value": "64"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2150:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2150:9:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memPtr",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2140:6:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2168:13:18",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2178:3:18",
                                                            "type": "",
                                                            "value": "320"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_1",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2172:2:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2190:33:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memPtr",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2212:6:18"
                                                                },
                                                                {
                                                                    "name": "_1",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2220:2:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2208:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2208:15:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "newFreePtr",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2194:10:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "2298:22:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [],
                                                                        "functionName": {
                                                                            "name": "panic_error_0x41",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2300:16:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "2300:18:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "2300:18:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "newFreePtr",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2241:10:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "2253:18:18",
                                                                            "type": "",
                                                                            "value": "0xffffffffffffffff"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "gt",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2238:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2238:34:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "newFreePtr",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2277:10:18"
                                                                        },
                                                                        {
                                                                            "name": "memPtr",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2289:6:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "lt",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2274:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2274:22:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "or",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2235:2:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2235:62:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "2232:88:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "2336:2:18",
                                                                    "type": "",
                                                                    "value": "64"
                                                                },
                                                                {
                                                                    "name": "newFreePtr",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2340:10:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2329:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2329:22:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2329:22:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2360:17:18",
                                                        "value": {
                                                            "name": "memPtr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "2371:6:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "dst",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2364:3:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2386:29:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2404:6:18"
                                                                },
                                                                {
                                                                    "name": "_1",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2412:2:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2400:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2400:15:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "srcEnd",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2390:6:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "2443:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "2452:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "2455:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2445:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "2445:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "2445:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "name": "srcEnd",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2430:6:18"
                                                                },
                                                                {
                                                                    "name": "end",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2438:3:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "gt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2427:2:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2427:15:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "2424:35:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2468:17:18",
                                                        "value": {
                                                            "name": "offset",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "2479:6:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "src",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2472:3:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "2552:88:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "name": "dst",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2573:3:18"
                                                                            },
                                                                            {
                                                                                "arguments": [
                                                                                    {
                                                                                        "name": "src",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "2591:3:18"
                                                                                    }
                                                                                ],
                                                                                "functionName": {
                                                                                    "name": "calldataload",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2578:12:18"
                                                                                },
                                                                                "nodeType": "YulFunctionCall",
                                                                                "src": "2578:17:18"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "mstore",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2566:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "2566:30:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "2566:30:18"
                                                                },
                                                                {
                                                                    "nodeType": "YulAssignment",
                                                                    "src": "2609:21:18",
                                                                    "value": {
                                                                        "arguments": [
                                                                            {
                                                                                "name": "dst",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2620:3:18"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "2625:4:18",
                                                                                "type": "",
                                                                                "value": "0x20"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "add",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2616:3:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "2616:14:18"
                                                                    },
                                                                    "variableNames": [
                                                                        {
                                                                            "name": "dst",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2609:3:18"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "name": "src",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2505:3:18"
                                                                },
                                                                {
                                                                    "name": "srcEnd",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2510:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "lt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2502:2:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2502:15:18"
                                                        },
                                                        "nodeType": "YulForLoop",
                                                        "post": {
                                                            "nodeType": "YulBlock",
                                                            "src": "2518:25:18",
                                                            "statements": [
                                                                {
                                                                    "nodeType": "YulAssignment",
                                                                    "src": "2520:21:18",
                                                                    "value": {
                                                                        "arguments": [
                                                                            {
                                                                                "name": "src",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2531:3:18"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "2536:4:18",
                                                                                "type": "",
                                                                                "value": "0x20"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "add",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2527:3:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "2527:14:18"
                                                                    },
                                                                    "variableNames": [
                                                                        {
                                                                            "name": "src",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2520:3:18"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "pre": {
                                                            "nodeType": "YulBlock",
                                                            "src": "2498:3:18",
                                                            "statements": []
                                                        },
                                                        "src": "2494:146:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "2649:15:18",
                                                        "value": {
                                                            "name": "memPtr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "2658:6:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "array",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2649:5:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_array_bytes32",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2036:6:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "end",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2044:3:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "array",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2052:5:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "2002:668:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "2723:115:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "2733:29:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2755:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2742:12:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2742:20:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2733:5:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "2816:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "2825:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "2828:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2818:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "2818:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "2818:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2784:5:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2795:5:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "2802:10:18",
                                                                                    "type": "",
                                                                                    "value": "0xffffffff"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2791:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2791:22:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2781:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2781:33:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2774:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2774:41:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "2771:61:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_uint32",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2702:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2713:5:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "2675:163:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "2885:76:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "2939:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "2948:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "2951:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2941:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "2941:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "2941:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2908:5:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "name": "value",
                                                                                            "nodeType": "YulIdentifier",
                                                                                            "src": "2929:5:18"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "iszero",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "2922:6:18"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "2922:13:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2915:6:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2915:21:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2905:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2905:32:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2898:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2898:40:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "2895:60:18"
                                                    }
                                                ]
                                            },
                                            "name": "validator_revert_bool",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2874:5:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "2843:118:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "3012:82:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "3022:29:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3044:6:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3031:12:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3031:20:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3022:5:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3082:5:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "validator_revert_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3060:21:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3060:28:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3060:28:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_bool",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2991:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3002:5:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "2966:128:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "3191:837:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "3238:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "3247:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "3250:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3240:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "3240:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "3240:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3212:7:18"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3221:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3208:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3208:23:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "3233:3:18",
                                                                    "type": "",
                                                                    "value": "608"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3204:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3204:33:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "3201:53:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "3263:30:18",
                                                        "value": {
                                                            "arguments": [],
                                                            "functionName": {
                                                                "name": "allocate_memory",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3276:15:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3276:17:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulTypedName",
                                                                "src": "3267:5:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3309:5:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3335:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_address",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3316:18:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3316:29:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3302:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3302:44:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3302:44:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3366:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3373:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3362:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3362:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "3401:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3412:2:18",
                                                                                    "type": "",
                                                                                    "value": "32"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "3397:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "3397:18:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_address",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3378:18:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3378:38:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3355:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3355:62:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3355:62:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3437:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3444:2:18",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3433:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3433:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "3472:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3483:2:18",
                                                                                    "type": "",
                                                                                    "value": "64"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "3468:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "3468:18:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_address",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3449:18:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3449:38:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3426:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3426:62:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3426:62:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3508:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3515:2:18",
                                                                            "type": "",
                                                                            "value": "96"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3504:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3504:14:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "3537:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3548:2:18",
                                                                                    "type": "",
                                                                                    "value": "96"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "3533:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "3533:18:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3520:12:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3520:32:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3497:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3497:56:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3497:56:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3573:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3580:3:18",
                                                                            "type": "",
                                                                            "value": "128"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3569:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3569:15:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "3603:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3614:3:18",
                                                                                    "type": "",
                                                                                    "value": "128"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "3599:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "3599:19:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3586:12:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3586:33:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3562:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3562:58:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3562:58:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3640:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3647:3:18",
                                                                            "type": "",
                                                                            "value": "160"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3636:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3636:15:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "3682:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3693:3:18",
                                                                                    "type": "",
                                                                                    "value": "160"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "3678:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "3678:19:18"
                                                                        },
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3699:7:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_array_bytes32",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3653:24:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3653:54:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3629:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3629:79:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3629:79:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3728:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3735:4:18",
                                                                            "type": "",
                                                                            "value": "0xc0"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3724:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3724:16:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "3764:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3775:3:18",
                                                                                    "type": "",
                                                                                    "value": "480"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "3760:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "3760:19:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_uint32",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3742:17:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3742:38:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3717:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3717:64:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3717:64:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3801:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3808:4:18",
                                                                            "type": "",
                                                                            "value": "0xe0"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3797:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3797:16:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "3835:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3846:3:18",
                                                                                    "type": "",
                                                                                    "value": "512"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "3831:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "3831:19:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_bool",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3815:15:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3815:36:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3790:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3790:62:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3790:62:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3872:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3879:6:18",
                                                                            "type": "",
                                                                            "value": "0x0100"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3868:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3868:18:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "3908:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3919:3:18",
                                                                                    "type": "",
                                                                                    "value": "544"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "3904:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "3904:19:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_bool",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3888:15:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3888:36:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3861:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3861:64:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3861:64:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3945:5:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3952:6:18",
                                                                            "type": "",
                                                                            "value": "0x0120"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3941:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3941:18:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "3981:9:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3992:3:18",
                                                                                    "type": "",
                                                                                    "value": "576"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "3977:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "3977:19:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_bool",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3961:15:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3961:36:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3934:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3934:64:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3934:64:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "4007:15:18",
                                                        "value": {
                                                            "name": "value",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "4017:5:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4007:6:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_struct$_Info_$1332_memory_ptr",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3157:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3168:7:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3180:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "3099:929:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "4128:92:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "4138:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4150:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4161:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4146:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4146:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4138:4:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4180:9:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "4205:6:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "4198:6:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "4198:14:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "iszero",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4191:6:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4191:22:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4173:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4173:41:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4173:41:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4097:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4108:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4119:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "4033:187:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "4399:171:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4416:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4427:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4409:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4409:21:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4409:21:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4450:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4461:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4446:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4446:18:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4466:2:18",
                                                                    "type": "",
                                                                    "value": "21"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4439:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4439:30:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4439:30:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4489:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4500:2:18",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4485:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4485:18:18"
                                                                },
                                                                {
                                                                    "hexValue": "7468652067617465722069736e6f74206578697374",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4505:23:18",
                                                                    "type": "",
                                                                    "value": "the gater isnot exist"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4478:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4478:51:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4478:51:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "4538:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4550:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4561:2:18",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4546:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4546:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4538:4:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_e5f5b1c469e73fdd536d3170ec5aa83949a0dbb5b35f9fb280b5ba6c579e799c__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4376:9:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4390:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "4225:345:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "4653:167:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "4699:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "4708:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "4711:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4701:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "4701:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "4701:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4674:7:18"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4683:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4670:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4670:23:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4695:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4666:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4666:32:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "4663:52:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "4724:29:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4743:9:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4737:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4737:16:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulTypedName",
                                                                "src": "4728:5:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4784:5:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "validator_revert_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4762:21:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4762:28:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4762:28:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "4799:15:18",
                                                        "value": {
                                                            "name": "value",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "4809:5:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4799:6:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_bool_fromMemory",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4619:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4630:7:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4642:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "4575:245:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "4999:170:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5016:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "5027:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5009:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5009:21:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5009:21:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5050:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5061:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5046:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5046:18:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "5066:2:18",
                                                                    "type": "",
                                                                    "value": "20"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5039:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5039:30:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5039:30:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5089:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5100:2:18",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5085:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5085:18:18"
                                                                },
                                                                {
                                                                    "hexValue": "7468652067617465722069732065786973746572",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "5105:22:18",
                                                                    "type": "",
                                                                    "value": "the gater is exister"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5078:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5078:50:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5078:50:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "5137:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5149:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "5160:2:18",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5145:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5145:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5137:4:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_8afcf45f13c6bb7b3e67748a0f81d2aa57c1d04184b87dcbe5a2de6c65200cde__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4976:9:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4990:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "4825:344:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "5348:167:18",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5365:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "5376:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5358:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5358:21:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5358:21:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5399:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5410:2:18",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5395:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5395:18:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "5415:2:18",
                                                                    "type": "",
                                                                    "value": "17"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5388:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5388:30:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5388:30:18"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5438:9:18"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5449:2:18",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5434:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5434:18:18"
                                                                },
                                                                {
                                                                    "hexValue": "74686520676174657220697320796f7572",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "5454:19:18",
                                                                    "type": "",
                                                                    "value": "the gater is your"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5427:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5427:47:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5427:47:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "5483:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5495:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "5506:2:18",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5491:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5491:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5483:4:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_62f94b9804c29001f283fbd7da0d1a25187212eaa171a5ff798562d0aaaec2bf__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "5325:9:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "5339:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "5174:341:18"
                                        }
                                    ]
                                },
                                "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint160_t_bytes32_t_bytes32_t_uint32_t_bool_t_bool_t_bool__to_t_address_t_address_t_uint160_t_bytes32_t_bytes32_t_uint32_t_bool_t_bool_t_bool__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, 0xffffffff))\n        mstore(add(headStart, 192), iszero(iszero(value6)))\n        mstore(add(headStart, 224), iszero(iszero(value7)))\n        mstore(add(headStart, 256), iszero(iszero(value8)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0140)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_array_bytes32(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let memPtr := mload(64)\n        let _1 := 320\n        let newFreePtr := add(memPtr, _1)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let srcEnd := add(offset, _1)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := offset\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, 0x20)\n        }\n        array := memPtr\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_bool(value)\n    }\n    function abi_decode_tuple_t_struct$_Info_$1332_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 608) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, abi_decode_address(headStart))\n        mstore(add(value, 32), abi_decode_address(add(headStart, 32)))\n        mstore(add(value, 64), abi_decode_address(add(headStart, 64)))\n        mstore(add(value, 96), calldataload(add(headStart, 96)))\n        mstore(add(value, 128), calldataload(add(headStart, 128)))\n        mstore(add(value, 160), abi_decode_array_bytes32(add(headStart, 160), dataEnd))\n        mstore(add(value, 0xc0), abi_decode_uint32(add(headStart, 480)))\n        mstore(add(value, 0xe0), abi_decode_bool(add(headStart, 512)))\n        mstore(add(value, 0x0100), abi_decode_bool(add(headStart, 544)))\n        mstore(add(value, 0x0120), abi_decode_bool(add(headStart, 576)))\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_e5f5b1c469e73fdd536d3170ec5aa83949a0dbb5b35f9fb280b5ba6c579e799c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"the gater isnot exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_8afcf45f13c6bb7b3e67748a0f81d2aa57c1d04184b87dcbe5a2de6c65200cde__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"the gater is exister\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_62f94b9804c29001f283fbd7da0d1a25187212eaa171a5ff798562d0aaaec2bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"the gater is your\")\n        tail := add(headStart, 96)\n    }\n}",
                                "id": 18,
                                "language": "Yul",
                                "name": "#utility.yul"
                            }
                        ],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a478608811610071578063a478608814610204578063ab3acb5c14610217578063b614984d14610244578063d8feb7ff14610257578063f1c9f40f1461026a578063f3a425371461027257600080fd5b80633087cbe3146100b95780633bbae141146100e957806345df4987146100f3578063492b7107146101cb57806371271f4d146101de57806376941300146101f1575b600080fd5b6001546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f1610285565b005b61016c610101366004610c61565b600060208190529081526040902080546001820154600283015460038401546004850154600f909501546001600160a01b0394851695938516949290921692909163ffffffff81169060ff600160201b8204811691600160281b8104821691600160301b9091041689565b604080516001600160a01b039a8b168152988a1660208a015296909816958701959095526060860193909352608085019190915263ffffffff1660a0840152151560c0830152151560e0820152901515610100820152610120016100e0565b6002546100cc906001600160a01b031681565b6100f16101ec366004610d60565b610343565b6100f16101ff366004610c61565b610559565b6100f1610212366004610c61565b61064d565b336000908152602081905260409020600f0154600160201b900460ff1660405190151581526020016100e0565b6100f1610252366004610c61565b610747565b6100f1610265366004610d60565b610881565b6100f16109b4565b6100f1610280366004610d60565b610a63565b336000908152602081905260409020600f0154600160201b900460ff1615156001146102b057600080fd5b336000908152602081905260409020600f0154600160301b900460ff16151560011480156102f75750336000818152602081905260409020600101546001600160a01b0316145b61031c5760405162461bcd60e51b815260040161031390610e1f565b60405180910390fd5b336000908152602081905260409020600f01805465ff00000000001916600160281b179055565b600260009054906101000a90046001600160a01b03166001600160a01b0316631487f2526040518163ffffffff1660e01b8152600401602060405180830381865afa158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190610e4e565b15156001146103c857600080fd5b6020818101516001600160a01b031660009081529081905260409020600f0154600160301b900460ff1615156001146104135760405162461bcd60e51b815260040161031390610e6b565b602081810180516001600160a01b0390811660009081528084526040808220600f90810154600160201b900460ff908116151560e089015285518516845283875282842090910154600160281b900416151561010087015283518316825293819052839020845181546001600160a01b031990811691841691909117825592516001820180548516918416919091179055928401516002840180549093169116179055606082015160038201556080820151600482015560a08201518291906104e2906005830190600a610bd7565b5060c0820151600f909101805460e0840151610100850151610120909501511515600160301b0266ff00000000000019951515600160281b029590951666ffff000000000019911515600160201b0264ffffffffff1990931663ffffffff9095169490941791909117169190911791909117905550565b600260009054906101000a90046001600160a01b03166001600160a01b0316631487f2526040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d09190610e4e565b15156001146105de57600080fd5b6001600160a01b0381166000908152602081905260409020600f0154600160301b900460ff1615156001146106255760405162461bcd60e51b815260040161031390610e1f565b6001600160a01b03166000908152602081905260409020600f01805464ff0000000019169055565b600260009054906101000a90046001600160a01b03166001600160a01b0316631487f2526040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c49190610e4e565b15156001146106d257600080fd5b6001600160a01b0381166000908152602081905260409020600f0154600160301b900460ff1615156001146107195760405162461bcd60e51b815260040161031390610e1f565b6001600160a01b03166000908152602081905260409020600f01805464ff000000001916600160201b179055565b600260009054906101000a90046001600160a01b03166001600160a01b0316631487f2526040518163ffffffff1660e01b8152600401602060405180830381865afa15801561079a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107be9190610e4e565b15156001146107cc57600080fd5b6001600160a01b0381166000908152602081905260409020600f0154600160301b900460ff1615156001146108135760405162461bcd60e51b815260040161031390610e6b565b6001600160a01b038116600090815260208190526040812080546001600160a01b0319908116825560018201805482169055600282018054909116905560038101829055600481018290559061086c6005830182610c15565b50600f01805466ffffffffffffff1916905550565b6020818101516001600160a01b031660009081529081905260409020600f0154600160301b900460ff1615156001036108cc5760405162461bcd60e51b815260040161031390610e6b565b60208101516001600160a01b0316331461091c5760405162461bcd60e51b81526020600482015260116024820152703a34329033b0ba32b91034b9903cb7bab960791b6044820152606401610313565b600060e082018190526101008201819052602080830180516001600160a01b03908116845291839052604092839020845181549084166001600160a01b0319918216178255915160018201805491851691841691909117905592840151600284018054919093169116179055606082015160038201556080820151600482015560a08201518291906104e2906005830190600a610bd7565b336000908152602081905260409020600f0154600160201b900460ff1615156001146109df57600080fd5b336000908152602081905260409020600f0154600160301b900460ff1615156001148015610a265750336000818152602081905260409020600101546001600160a01b0316145b610a425760405162461bcd60e51b815260040161031390610e1f565b336000908152602081905260409020600f01805465ff000000000019169055565b336000908152602081905260409020600f0154600160201b900460ff161515600114610a8e57600080fd5b6020818101516001600160a01b031660009081529081905260409020600f0154600160301b900460ff161515600114610ad95760405162461bcd60e51b815260040161031390610e6b565b6020808201516001600160a01b03908116600090815291829052604090912060010154163314610b3f5760405162461bcd60e51b81526020600482015260116024820152703a34329033b0ba32b91034b9903cb7bab960791b6044820152606401610313565b600060e0820181905260016101008301819052602080840180516001600160a01b03908116855291849052604093849020855181546001600160a01b03199081169185169190911782559151938101805483169484169490941790935592840151600283018054909416911617909155606082015160038201556080820151600482015560a08201518291906104e2906005830190600a5b82600a8101928215610c05579160200282015b82811115610c05578251825591602001919060010190610bea565b50610c11929150610c27565b5090565b50610c2490600a810190610c27565b50565b5b80821115610c115760008155600101610c28565b6001600160a01b0381168114610c2457600080fd5b8035610c5c81610c3c565b919050565b600060208284031215610c7357600080fd5b8135610c7e81610c3c565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715610cbf57610cbf610c85565b60405290565b600082601f830112610cd657600080fd5b60405161014080820182811067ffffffffffffffff82111715610cfb57610cfb610c85565b60405283018185821115610d0e57600080fd5b845b82811015610d28578035825260209182019101610d10565b509195945050505050565b803563ffffffff81168114610c5c57600080fd5b8015158114610c2457600080fd5b8035610c5c81610d47565b60006102608284031215610d7357600080fd5b610d7b610c9b565b610d8483610c51565b8152610d9260208401610c51565b6020820152610da360408401610c51565b60408201526060830135606082015260808301356080820152610dc98460a08501610cc5565b60a0820152610ddb6101e08401610d33565b60c0820152610ded6102008401610d55565b60e0820152610dff6102208401610d55565b610100820152610e126102408401610d55565b6101208201529392505050565b6020808252601590820152741d1a194819d85d195c881a5cdb9bdd08195e1a5cdd605a1b604082015260600190565b600060208284031215610e6057600080fd5b8151610c7e81610d47565b6020808252601490820152733a34329033b0ba32b91034b99032bc34b9ba32b960611b60408201526060019056fea26469706673582212202c91dffc0c69f0022f503d3cca180606d251e74d6bf1b6c413695ab6be75f82f64736f6c634300080f0033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4786088 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA4786088 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xAB3ACB5C EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xB614984D EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xD8FEB7FF EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xF1C9F40F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xF3A42537 EQ PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3087CBE3 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3BBAE141 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x45DF4987 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x492B7107 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x71271F4D EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x76941300 EQ PUSH2 0x1F1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x285 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0xF SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 SWAP4 DUP6 AND SWAP5 SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x28 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 SWAP2 DIV AND DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP11 DUP12 AND DUP2 MSTORE SWAP9 DUP11 AND PUSH1 0x20 DUP11 ADD MSTORE SWAP7 SWAP1 SWAP9 AND SWAP6 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x2F7 JUMPI POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD DUP1 SLOAD PUSH6 0xFF0000000000 NOT AND PUSH1 0x1 PUSH1 0x28 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x396 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0xF SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0xE0 DUP10 ADD MSTORE DUP6 MLOAD DUP6 AND DUP5 MSTORE DUP4 DUP8 MSTORE DUP3 DUP5 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV AND ISZERO ISZERO PUSH2 0x100 DUP8 ADD MSTORE DUP4 MLOAD DUP4 AND DUP3 MSTORE SWAP4 DUP2 SWAP1 MSTORE DUP4 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP6 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP3 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x4E2 SWAP1 PUSH1 0x5 DUP4 ADD SWAP1 PUSH1 0xA PUSH2 0xBD7 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xF SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xE0 DUP5 ADD MLOAD PUSH2 0x100 DUP6 ADD MLOAD PUSH2 0x120 SWAP1 SWAP6 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0x30 SHL MUL PUSH7 0xFF000000000000 NOT SWAP6 ISZERO ISZERO PUSH1 0x1 PUSH1 0x28 SHL MUL SWAP6 SWAP1 SWAP6 AND PUSH7 0xFFFF0000000000 NOT SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH5 0xFFFFFFFFFF NOT SWAP1 SWAP4 AND PUSH4 0xFFFFFFFF SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP2 SWAP1 SWAP2 OR AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD DUP1 SLOAD PUSH5 0xFF00000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD DUP1 SLOAD PUSH5 0xFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1487F252 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 PUSH2 0x86C PUSH1 0x5 DUP4 ADD DUP3 PUSH2 0xC15 JUMP JUMPDEST POP PUSH1 0xF ADD DUP1 SLOAD PUSH7 0xFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x8CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x3A34329033B0BA32B91034B9903CB7BAB9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x313 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE SWAP2 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP3 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x4E2 SWAP1 PUSH1 0x5 DUP4 ADD SWAP1 PUSH1 0xA PUSH2 0xBD7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x9DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xA26 JUMPI POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xA42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE1F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD DUP1 SLOAD PUSH6 0xFF0000000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xA8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF ADD SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x313 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD AND CALLER EQ PUSH2 0xB3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x3A34329033B0BA32B91034B9903CB7BAB9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x313 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH2 0x100 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE SWAP2 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP4 DUP5 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP2 MLOAD SWAP4 DUP2 ADD DUP1 SLOAD DUP4 AND SWAP5 DUP5 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP3 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP1 SWAP5 AND SWAP2 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x4E2 SWAP1 PUSH1 0x5 DUP4 ADD SWAP1 PUSH1 0xA JUMPDEST DUP3 PUSH1 0xA DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xC05 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC05 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBEA JUMP JUMPDEST POP PUSH2 0xC11 SWAP3 SWAP2 POP PUSH2 0xC27 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP PUSH2 0xC24 SWAP1 PUSH1 0xA DUP2 ADD SWAP1 PUSH2 0xC27 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC11 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xC5C DUP2 PUSH2 0xC3C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC7E DUP2 PUSH2 0xC3C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCBF JUMPI PUSH2 0xCBF PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 DUP1 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCFB JUMPI PUSH2 0xCFB PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 ADD DUP2 DUP6 DUP3 GT ISZERO PUSH2 0xD0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD28 JUMPI DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xD10 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xC5C DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7B PUSH2 0xC9B JUMP JUMPDEST PUSH2 0xD84 DUP4 PUSH2 0xC51 JUMP JUMPDEST DUP2 MSTORE PUSH2 0xD92 PUSH1 0x20 DUP5 ADD PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xDA3 PUSH1 0x40 DUP5 ADD PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0xDC9 DUP5 PUSH1 0xA0 DUP6 ADD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xDDB PUSH2 0x1E0 DUP5 ADD PUSH2 0xD33 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xDED PUSH2 0x200 DUP5 ADD PUSH2 0xD55 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0xDFF PUSH2 0x220 DUP5 ADD PUSH2 0xD55 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0xE12 PUSH2 0x240 DUP5 ADD PUSH2 0xD55 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x1D1A194819D85D195C881A5CDB9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC7E DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x3A34329033B0BA32B91034B99032BC34B9BA32B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP2 0xDF 0xFC 0xC PUSH10 0xF0022F503D3CCA180606 0xD2 MLOAD 0xE7 0x4D PUSH12 0xF1B6C413695AB6BE75F82F64 PUSH20 0x6F6C634300080F00330000000000000000000000 ",
                        "sourceMap": "138:4063:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;259:36;;;;;-1:-1:-1;;;;;259:36:1;;;;;;-1:-1:-1;;;;;178:32:18;;;160:51;;148:2;133:18;259:36:1;;;;;;;;2585:276;;;:::i;:::-;;206:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;206:46:1;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;206:46:1;;;;;-1:-1:-1;;;206:46:1;;;;;-1:-1:-1;;;206:46:1;;;;;;;;;;-1:-1:-1;;;;;1156:15:18;;;1138:34;;1208:15;;;1203:2;1188:18;;1181:43;1260:15;;;;1240:18;;;1233:43;;;;1307:2;1292:18;;1285:34;;;;1350:3;1335:19;;1328:35;;;;1412:10;1400:23;1118:3;1379:19;;1372:52;1468:14;1461:22;1455:3;1440:19;;1433:51;1528:14;1521:22;1515:3;1500:19;;1493:51;1588:14;;1581:22;1575:3;1560:19;;1553:51;1087:3;1072:19;206:46:1;749:861:18;301:38:1;;;;;-1:-1:-1;;;;;301:38:1;;;1829:411;;;;;;:::i;:::-;;:::i;1481:277::-;;;;;;:::i;:::-;;:::i;1201:274::-;;;;;;:::i;:::-;;:::i;4089:110::-;4168:10;4136:4;4159:20;;;;;;;;;;:33;;;-1:-1:-1;;;4159:33:1;;;;4089:110;;4198:14:18;;4191:22;4173:41;;4161:2;4146:18;4089:110:1;4033:187:18;2246:185:1;;;;;;:::i;:::-;;:::i;3624:459::-;;;;;;:::i;:::-;;:::i;2867:279::-;;;:::i;3177:441::-;;;;;;:::i;:::-;;:::i;2585:276::-;731:10;722:8;:20;;;;;;;;;;:33;;;-1:-1:-1;;;722:33:1;;;;:41;;759:4;722:41;714:50;;;;;;2671:10:::1;2662:8;:20:::0;;;::::1;::::0;;;;;;:27:::1;;::::0;-1:-1:-1;;;2662:27:1;::::1;;;:35;;2693:4;2662:35;:101:::0;::::1;;;-1:-1:-1::0;2753:10:1::1;2717:8;:20:::0;;;::::1;::::0;;;;;;:32:::1;;::::0;-1:-1:-1;;;;;2717:32:1::1;:46;2662:101;2641:169;;;;-1:-1:-1::0;;;2641:169:1::1;;;;;;;:::i;:::-;;;;;;;;;2829:10;2820:8;:20:::0;;;::::1;::::0;;;;;;:27:::1;;:34:::0;;-1:-1:-1;;2820:34:1::1;-1:-1:-1::0;;;2820:34:1::1;::::0;;2585:276::o;1829:411::-;971:23;;;;;;;;;-1:-1:-1;;;;;971:23:1;-1:-1:-1;;;;;957:54:1;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;1017:4;957:64;936:95;;;;;;1972:18:::1;::::0;;::::1;::::0;-1:-1:-1;;;;;1963:28:1::1;:8;:28:::0;;;;;;;;;;:35:::1;;::::0;-1:-1:-1;;;1963:35:1;::::1;;;:43;;2002:4;1963:43;1942:110;;;;-1:-1:-1::0;;;1942:110:1::1;;;;;;;:::i;:::-;2093:18;::::0;;::::1;::::0;;-1:-1:-1;;;;;2084:28:1;;::::1;:8;:28:::0;;;;;;;;;;:41:::1;::::0;;::::1;::::0;-1:-1:-1;;;2084:41:1;::::1;;::::0;;::::1;2062:63;;:19;::::0;::::1;:63:::0;2160:18;;2151:28;::::1;::::0;;;;;;;;:35;;::::1;::::0;-1:-1:-1;;;2151:35:1;::::1;;2135:51;;2084:41;2135:13:::0;::::1;:51:::0;2205:18;;2196:28;::::1;::::0;;;;;;;;;:37;;;;-1:-1:-1;;;;;;2196:37:1;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;2196:37:1;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;2084:41:::1;2196:37:::0;::::1;::::0;::::1;::::0;::::1;::::0;2093:18;;2196:28;:37:::1;::::0;2151:35:::1;2196:37:::0;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;2196:37:1::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;-1:-1:-1::0;;;2196:37:1::1;-1:-1:-1::0;;2196:37:1;::::1;;-1:-1:-1::0;;;2196:37:1::1;::::0;;;;-1:-1:-1;;2196:37:1;::::1;;-1:-1:-1::0;;;2196:37:1::1;-1:-1:-1::0;;2196:37:1;;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;::::1;::::0;;-1:-1:-1;1829:411:1:o;1481:277::-;971:23;;;;;;;;;-1:-1:-1;;;;;971:23:1;-1:-1:-1;;;;;957:54:1;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;1017:4;957:64;936:95;;;;;;-1:-1:-1;;;;;1612:23:1;::::1;:8;:23:::0;;;::::1;::::0;;;;;;:30:::1;;::::0;-1:-1:-1;;;1612:30:1;::::1;;;:38;;1646:4;1612:38;1591:106;;;;-1:-1:-1::0;;;1591:106:1::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1707:23:1::1;1746:5;1707:23:::0;;;::::1;::::0;;;;;;:36:::1;;:44:::0;;-1:-1:-1;;1707:44:1::1;::::0;;1481:277::o;1201:274::-;971:23;;;;;;;;;-1:-1:-1;;;;;971:23:1;-1:-1:-1;;;;;957:54:1;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;1017:4;957:64;936:95;;;;;;-1:-1:-1;;;;;1330:23:1;::::1;:8;:23:::0;;;::::1;::::0;;;;;;:30:::1;;::::0;-1:-1:-1;;;1330:30:1;::::1;;;:38;;1364:4;1330:38;1309:106;;;;-1:-1:-1::0;;;1309:106:1::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1425:23:1::1;:8;:23:::0;;;::::1;::::0;;;;;;:36:::1;;:43:::0;;-1:-1:-1;;1425:43:1::1;-1:-1:-1::0;;;1425:43:1::1;::::0;;1201:274::o;2246:185::-;971:23;;;;;;;;;-1:-1:-1;;;;;971:23:1;-1:-1:-1;;;;;957:54:1;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;1017:4;957:64;936:95;;;;;;-1:-1:-1;;;;;2334:16:1;::::1;:8;:16:::0;;;::::1;::::0;;;;;;:23:::1;;::::0;-1:-1:-1;;;2334:23:1;::::1;;;:31;;2361:4;2334:31;2326:64;;;;-1:-1:-1::0;;;2326:64:1::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2408:16:1;::::1;:8;:16:::0;;;::::1;::::0;;;;;;2401:23;;-1:-1:-1;;;;;;2401:23:1;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;2408:16;2401:23:::1;;::::0;::::1;2408:8:::0;2401:23:::1;:::i;:::-;-1:-1:-1::0;2401:23:1::1;;::::0;;-1:-1:-1;;2401:23:1;;;-1:-1:-1;2246:185:1:o;3624:459::-;3717:18;;;;;-1:-1:-1;;;;;3708:28:1;:8;:28;;;;;;;;;;:35;;;-1:-1:-1;;;3708:35:1;;;;:43;;3747:4;3708:43;3687:110;;;;-1:-1:-1;;;3687:110:1;;;;;;;:::i;:::-;3815:18;;;;-1:-1:-1;;;;;3815:32:1;3837:10;3815:32;3807:62;;;;-1:-1:-1;;;3807:62:1;;5376:2:18;3807:62:1;;;5358:21:18;5415:2;5395:18;;;5388:30;-1:-1:-1;;;5434:18:18;;;5427:47;5491:18;;3807:62:1;5174:341:18;3807:62:1;3902:5;3880:19;;;:27;;;3944:13;;;:21;;;4012:18;;;;;;-1:-1:-1;;;;;4003:28:1;;;;;;;;;;;;;;:37;;;;;;;-1:-1:-1;;;;;;4003:37:1;;;;;;;;3880:27;4003:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3880:6;;4003:28;:37;;;;;;;;:::i;2867:279::-;731:10;722:8;:20;;;;;;;;;;:33;;;-1:-1:-1;;;722:33:1;;;;:41;;759:4;722:41;714:50;;;;;;2955:10:::1;2946:8;:20:::0;;;::::1;::::0;;;;;;:27:::1;;::::0;-1:-1:-1;;;2946:27:1;::::1;;;:35;;2977:4;2946:35;:101:::0;::::1;;;-1:-1:-1::0;3037:10:1::1;3001:8;:20:::0;;;::::1;::::0;;;;;;:32:::1;;::::0;-1:-1:-1;;;;;3001:32:1::1;:46;2946:101;2925:169;;;;-1:-1:-1::0;;;2925:169:1::1;;;;;;;:::i;:::-;3113:10;3134:5;3104:20:::0;;;::::1;::::0;;;;;;:27:::1;;:35:::0;;-1:-1:-1;;3104:35:1::1;::::0;;2867:279::o;3177:441::-;731:10;722:8;:20;;;;;;;;;;:33;;;-1:-1:-1;;;722:33:1;;;;:41;;759:4;722:41;714:50;;;;;;3289:18:::1;::::0;;::::1;::::0;-1:-1:-1;;;;;3280:28:1::1;:8;:28:::0;;;;;;;;;;:35:::1;;::::0;-1:-1:-1;;;3280:35:1;::::1;;;:43;;3319:4;3280:43;3259:110;;;;-1:-1:-1::0;;;3259:110:1::1;;;;;;;:::i;:::-;3409:18;::::0;;::::1;::::0;-1:-1:-1;;;;;3400:28:1;;::::1;:8;:28:::0;;;;;;;;;;;:40:::1;;::::0;::::1;3444:10;3400:54;3379:118;;;::::0;-1:-1:-1;;;3379:118:1;;5376:2:18;3379:118:1::1;::::0;::::1;5358:21:18::0;5415:2;5395:18;;;5388:30;-1:-1:-1;;;5434:18:18;;;5427:47;5491:18;;3379:118:1::1;5174:341:18::0;3379:118:1::1;3529:5;3507:19;::::0;::::1;:27:::0;;;;3544:13:::1;::::0;::::1;:20:::0;;;3583:18:::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;3574:28:1;;::::1;::::0;;;;;;;;;;;:37;;;;-1:-1:-1;;;;;;3574:37:1;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;3507:19;;3574:28;:37:::1;::::0;::::1;::::0;::::1;::::0;::::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;222:131:18;-1:-1:-1;;;;;297:31:18;;287:42;;277:70;;343:1;340;333:12;358:134;426:20;;455:31;426:20;455:31;:::i;:::-;358:134;;;:::o;497:247::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;664:9;651:23;683:31;708:5;683:31;:::i;:::-;733:5;497:247;-1:-1:-1;;;497:247:18:o;1615:127::-;1676:10;1671:3;1667:20;1664:1;1657:31;1707:4;1704:1;1697:15;1731:4;1728:1;1721:15;1747:250;1814:2;1808:9;1856:6;1844:19;;1893:18;1878:34;;1914:22;;;1875:62;1872:88;;;1940:18;;:::i;:::-;1976:2;1969:22;1747:250;:::o;2002:668::-;2052:5;2105:3;2098:4;2090:6;2086:17;2082:27;2072:55;;2123:1;2120;2113:12;2072:55;2156:2;2150:9;2178:3;2220:2;2212:6;2208:15;2289:6;2277:10;2274:22;2253:18;2241:10;2238:34;2235:62;2232:88;;;2300:18;;:::i;:::-;2336:2;2329:22;2400:15;;2371:6;2427:15;;;2424:35;;;2455:1;2452;2445:12;2424:35;2479:6;2494:146;2510:6;2505:3;2502:15;2494:146;;;2578:17;;2566:30;;2625:4;2616:14;;;;2527;2494:146;;;-1:-1:-1;2658:6:18;;2002:668;-1:-1:-1;;;;;2002:668:18:o;2675:163::-;2742:20;;2802:10;2791:22;;2781:33;;2771:61;;2828:1;2825;2818:12;2843:118;2929:5;2922:13;2915:21;2908:5;2905:32;2895:60;;2951:1;2948;2941:12;2966:128;3031:20;;3060:28;3031:20;3060:28;:::i;3099:929::-;3180:6;3233:3;3221:9;3212:7;3208:23;3204:33;3201:53;;;3250:1;3247;3240:12;3201:53;3276:17;;:::i;:::-;3316:29;3335:9;3316:29;:::i;:::-;3309:5;3302:44;3378:38;3412:2;3401:9;3397:18;3378:38;:::i;:::-;3373:2;3366:5;3362:14;3355:62;3449:38;3483:2;3472:9;3468:18;3449:38;:::i;:::-;3444:2;3437:5;3433:14;3426:62;3548:2;3537:9;3533:18;3520:32;3515:2;3508:5;3504:14;3497:56;3614:3;3603:9;3599:19;3586:33;3580:3;3573:5;3569:15;3562:58;3653:54;3699:7;3693:3;3682:9;3678:19;3653:54;:::i;:::-;3647:3;3640:5;3636:15;3629:79;3742:38;3775:3;3764:9;3760:19;3742:38;:::i;:::-;3735:4;3728:5;3724:16;3717:64;3815:36;3846:3;3835:9;3831:19;3815:36;:::i;:::-;3808:4;3801:5;3797:16;3790:62;3888:36;3919:3;3908:9;3904:19;3888:36;:::i;:::-;3879:6;3872:5;3868:18;3861:64;3961:36;3992:3;3981:9;3977:19;3961:36;:::i;:::-;3952:6;3941:18;;3934:64;3945:5;3099:929;-1:-1:-1;;;3099:929:18:o;4225:345::-;4427:2;4409:21;;;4466:2;4446:18;;;4439:30;-1:-1:-1;;;4500:2:18;4485:18;;4478:51;4561:2;4546:18;;4225:345::o;4575:245::-;4642:6;4695:2;4683:9;4674:7;4670:23;4666:32;4663:52;;;4711:1;4708;4701:12;4663:52;4743:9;4737:16;4762:28;4784:5;4762:28;:::i;4825:344::-;5027:2;5009:21;;;5066:2;5046:18;;;5039:30;-1:-1:-1;;;5100:2:18;5085:18;;5078:50;5160:2;5145:18;;4825:344::o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "758200",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "addGater((address,address,uint160,bytes32,bytes32,bytes32[10],uint32,bool,bool,bool))": "infinite",
                            "delGatebyMarketor(address)": "infinite",
                            "gateList(address)": "13481",
                            "isValidGater()": "2408",
                            "lockGatebyGater()": "31155",
                            "lockGatebyMarketor(address)": "infinite",
                            "marketContractAddress()": "2327",
                            "marketorContractAddress()": "2393",
                            "unlockGatebyGater()": "31208",
                            "unlockGatebyMarketor(address)": "infinite",
                            "updateGatebyGator((address,address,uint160,bytes32,bytes32,bytes32[10],uint32,bool,bool,bool))": "infinite",
                            "updateGatebyMarketor((address,address,uint160,bytes32,bytes32,bytes32[10],uint32,bool,bool,bool))": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "addGater((address,address,uint160,bytes32,bytes32,bytes32[10],uint32,bool,bool,bool))": "d8feb7ff",
                        "delGatebyMarketor(address)": "b614984d",
                        "gateList(address)": "45df4987",
                        "isValidGater()": "ab3acb5c",
                        "lockGatebyGater()": "3bbae141",
                        "lockGatebyMarketor(address)": "a4786088",
                        "marketContractAddress()": "3087cbe3",
                        "marketorContractAddress()": "492b7107",
                        "unlockGatebyGater()": "f1c9f40f",
                        "unlockGatebyMarketor(address)": "76941300",
                        "updateGatebyGator((address,address,uint160,bytes32,bytes32,bytes32[10],uint32,bool,bool,bool))": "f3a42537",
                        "updateGatebyMarketor((address,address,uint160,bytes32,bytes32,bytes32[10],uint32,bool,bool,bool))": "71271f4d"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketorContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"authority\",\"type\":\"uint160\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[10]\",\"name\":\"webserverip\",\"type\":\"bytes32[10]\"},{\"internalType\":\"uint32\",\"name\":\"createtimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"_gater\",\"type\":\"tuple\"}],\"name\":\"addGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gater\",\"type\":\"address\"}],\"name\":\"delGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gateList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"authority\",\"type\":\"uint160\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"createtimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isValidGater\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockGatebyGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateraddress\",\"type\":\"address\"}],\"name\":\"lockGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockGatebyGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateraddress\",\"type\":\"address\"}],\"name\":\"unlockGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"authority\",\"type\":\"uint160\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[10]\",\"name\":\"webserverip\",\"type\":\"bytes32[10]\"},{\"internalType\":\"uint32\",\"name\":\"createtimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"_gater\",\"type\":\"tuple\"}],\"name\":\"updateGatebyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"authority\",\"type\":\"uint160\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[10]\",\"name\":\"webserverip\",\"type\":\"bytes32[10]\"},{\"internalType\":\"uint32\",\"name\":\"createtimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"_gater\",\"type\":\"tuple\"}],\"name\":\"updateGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol\":\"MoonV1Gater\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol\":{\"keccak256\":\"0x72f7dcac41d734ccacf09b8d033d1cac3c15becb5a91c2707692557714f2bce7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f39d490129f9e0ba012c388186628efbede8d9091d8caf85504a8ced2d24ca56\",\"dweb:/ipfs/QmRhkZGatrNPPH5cvSYoHEFuarfdzuP3intFKRgj3Ryhew\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Manager.sol\":{\"keccak256\":\"0xd552d947b0bd23c0283bd49548bace3f7d8b0046871ee7f88205f3d73ae3ac1c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3961299517b90f99adc9b88a70b514b2d4cc016adafa5c6dbdb352643129415\",\"dweb:/ipfs/QmeoZUPD8H3NmvPxjLXGnFynEjgH39sFEwSFzrnwZGhFTB\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Manager.sol\":{\"keccak256\":\"0x427c430fd81ae0869fe56d41e19ed2dda3dae2c909ecc04377a1ca37983bf877\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9c4fec5c29fe8813cf06d95a9c3f2b4c99675b4b59c44f5481e3987a81f6c29\",\"dweb:/ipfs/QmWBXHQFi4PtL6LiWCRDF35XcVPRHBEAXt1Ye937Yw76KQ\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Events.sol\":{\"keccak256\":\"0xbbaec4165ad9931dbb85bc842c301f0183377bdaa8c192ede335258681676839\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a7e4ce4f6e8b82cb7e823d6b9a2ae682e38bf72f2aefc7e4ff6a150cce59a8bb\",\"dweb:/ipfs/QmNWLmSHKsfvBrdZsMea73wVafTyvZZEgAn5KcDYUXS1Mc\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Immutables.sol\":{\"keccak256\":\"0xd8036ef421a6187d45df01717af3959f3fabd647a35208815ff044e27c2f16d3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d38402d77802f86dce1f6c58bb6166a97f83702c3bb08909fcd856134d4f99c5\",\"dweb:/ipfs/QmXqhJwkcdzWpngoJwXUiAvPAUHVndJLSQW9nHkm33gFYK\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1MarketCreatorActions.sol\":{\"keccak256\":\"0x8e27f2ef0685114e1ee9ff38ae882760458e750030abf7cdd27f03a7c91e0413\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://df1e6fd05ee40468f31bfe0e229a4f19ae258de34bd0034f975190f4d90a453e\",\"dweb:/ipfs/QmU5H2LbDxWGKy4tM4FwXxEEoj72Mbme4XMeB5nuvQfn43\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1State.sol\":{\"keccak256\":\"0x1da7bafb43b2d8e1b62c4b146d9d93c6f9656d16cc75a05e1550545bfd891501\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3eb7ace0bbc0c123e993640afb7cecb023c0615733fdd78d0126c75a581f7a47\",\"dweb:/ipfs/QmWf1ZyabdYkBFcwe32npBnHWGJ3Vy59carWoRQ14FEsgJ\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":{\"keccak256\":\"0x6acb4a762f349ab39bd48ff34c150b55f55aabc4826379838391749136f3aee9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58552a104e1a046883cf116fe6748600caf7c8ebe341f82a38aa6fbfb09355cb\",\"dweb:/ipfs/QmQxUAK9fzefN6afoJ2CGyRWtETz1TEcZoJhDFCYJ3WY4V\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":{\"keccak256\":\"0xdbbcc3e545cc8d7d8eebe4b1dbaccee4d2adbce4785cb7ac5f4712093c72db52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d7251ca8ee12ad7009fe9f280aa8be028502f51e7465fe5314b85b9a2815991\",\"dweb:/ipfs/QmRQ5Z78r3qDKhBbRbDs8d4ThNk5fLN5S5g6tosHwa6jdo\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LSTThings.sol\":{\"keccak256\":\"0x8f10ad7cdca3ab033387dc360617f52dd3b41642cb627866c993e5202bdf8db7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://56243f8b3bcaeb92c7423aa4b040c0fc22b1975b018e4292e3aa98fc251335e8\",\"dweb:/ipfs/QmW7XoPQKzLNmbU3jfMP3BmX5WwZNrddjtmyb7mYMSdj9E\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 621,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol:MoonV1Gater",
                            "label": "gateList",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_mapping(t_address,t_struct(Info)1332_storage)"
                        },
                        {
                            "astId": 623,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol:MoonV1Gater",
                            "label": "marketContractAddress",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_address"
                        },
                        {
                            "astId": 625,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol:MoonV1Gater",
                            "label": "marketorContractAddress",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_address"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_array(t_bytes32)10_storage": {
                            "base": "t_bytes32",
                            "encoding": "inplace",
                            "label": "bytes32[10]",
                            "numberOfBytes": "320"
                        },
                        "t_bool": {
                            "encoding": "inplace",
                            "label": "bool",
                            "numberOfBytes": "1"
                        },
                        "t_bytes32": {
                            "encoding": "inplace",
                            "label": "bytes32",
                            "numberOfBytes": "32"
                        },
                        "t_mapping(t_address,t_struct(Info)1332_storage)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => struct LGate.Info)",
                            "numberOfBytes": "32",
                            "value": "t_struct(Info)1332_storage"
                        },
                        "t_struct(Info)1332_storage": {
                            "encoding": "inplace",
                            "label": "struct LGate.Info",
                            "members": [
                                {
                                    "astId": 1311,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol:MoonV1Gater",
                                    "label": "market",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_address"
                                },
                                {
                                    "astId": 1313,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol:MoonV1Gater",
                                    "label": "gateAddress",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_address"
                                },
                                {
                                    "astId": 1315,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol:MoonV1Gater",
                                    "label": "authority",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_uint160"
                                },
                                {
                                    "astId": 1317,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol:MoonV1Gater",
                                    "label": "name",
                                    "offset": 0,
                                    "slot": "3",
                                    "type": "t_bytes32"
                                },
                                {
                                    "astId": 1319,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol:MoonV1Gater",
                                    "label": "website",
                                    "offset": 0,
                                    "slot": "4",
                                    "type": "t_bytes32"
                                },
                                {
                                    "astId": 1323,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol:MoonV1Gater",
                                    "label": "webserverip",
                                    "offset": 0,
                                    "slot": "5",
                                    "type": "t_array(t_bytes32)10_storage"
                                },
                                {
                                    "astId": 1325,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol:MoonV1Gater",
                                    "label": "createtimestamp",
                                    "offset": 0,
                                    "slot": "15",
                                    "type": "t_uint32"
                                },
                                {
                                    "astId": 1327,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol:MoonV1Gater",
                                    "label": "marketunlock",
                                    "offset": 4,
                                    "slot": "15",
                                    "type": "t_bool"
                                },
                                {
                                    "astId": 1329,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol:MoonV1Gater",
                                    "label": "unlock",
                                    "offset": 5,
                                    "slot": "15",
                                    "type": "t_bool"
                                },
                                {
                                    "astId": 1331,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol:MoonV1Gater",
                                    "label": "isUsed",
                                    "offset": 6,
                                    "slot": "15",
                                    "type": "t_bool"
                                }
                            ],
                            "numberOfBytes": "512"
                        },
                        "t_uint160": {
                            "encoding": "inplace",
                            "label": "uint160",
                            "numberOfBytes": "20"
                        },
                        "t_uint32": {
                            "encoding": "inplace",
                            "label": "uint32",
                            "numberOfBytes": "4"
                        }
                    }
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Manager.sol": {
            "MoonV1Manager": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_marketCreator",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "delMarketManager",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "ismarketManager",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketCreator",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "marketManagers",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "setMarketManager",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "delMarketManager(address)": {
                            "details": "Explain to a developer any extra details"
                        },
                        "ismarketManager()": {
                            "details": "Explain to a developer any extra details"
                        },
                        "setMarketManager(address)": {
                            "details": "Explain to a developer any extra details"
                        }
                    },
                    "stateVariables": {
                        "marketCreator": {
                            "return": "The contract address",
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {
                            "@_990": {
                                "entryPoint": null,
                                "id": 990,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "abi_decode_tuple_t_address_fromMemory": {
                                "entryPoint": 84,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            }
                        },
                        "generatedSources": [
                            {
                                "ast": {
                                    "nodeType": "YulBlock",
                                    "src": "0:306:18",
                                    "statements": [
                                        {
                                            "nodeType": "YulBlock",
                                            "src": "6:3:18",
                                            "statements": []
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "95:209:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "141:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "150:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "153:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "143:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "143:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "143:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "116:7:18"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "125:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "112:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "112:23:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "137:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "108:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "108:32:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "105:52:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "166:29:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "185:9:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "179:5:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "179:16:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulTypedName",
                                                                "src": "170:5:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "258:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "267:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "270:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "260:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "260:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "260:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "217:5:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "228:5:18"
                                                                                },
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "243:3:18",
                                                                                                    "type": "",
                                                                                                    "value": "160"
                                                                                                },
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "248:1:18",
                                                                                                    "type": "",
                                                                                                    "value": "1"
                                                                                                }
                                                                                            ],
                                                                                            "functionName": {
                                                                                                "name": "shl",
                                                                                                "nodeType": "YulIdentifier",
                                                                                                "src": "239:3:18"
                                                                                            },
                                                                                            "nodeType": "YulFunctionCall",
                                                                                            "src": "239:11:18"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "252:1:18",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "sub",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "235:3:18"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "235:19:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "224:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "224:31:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "214:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "214:42:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "207:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "207:50:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "204:70:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "283:15:18",
                                                        "value": {
                                                            "name": "value",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "293:5:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "283:6:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_address_fromMemory",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "61:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "72:7:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "84:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "14:290:18"
                                        }
                                    ]
                                },
                                "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
                                "id": 18,
                                "language": "Yul",
                                "name": "#utility.yul"
                            }
                        ],
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b5060405161026738038061026783398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6101d4806100936000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631487f2521461005c57806327cbaabe146100855780632b890543146100b0578063753c5188146100c5578063d82aff11146100e8575b600080fd5b3360009081526020819052604090205460ff165b60405190151581526020015b60405180910390f35b600154610098906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b6100c36100be36600461016e565b6100fb565b005b6100706100d336600461016e565b60006020819052908152604090205460ff1681565b6100c36100f636600461016e565b610133565b6001546001600160a01b0316331461011257600080fd5b6001600160a01b03166000908152602081905260409020805460ff19169055565b6001546001600160a01b0316331461014a57600080fd5b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b60006020828403121561018057600080fd5b81356001600160a01b038116811461019757600080fd5b939250505056fea2646970667358221220eb891b376df71e14eaa84b5b7a740f352ab8f61432a9f84d1bf0c27a78fe404c64736f6c634300080f0033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x267 CODESIZE SUB DUP1 PUSH2 0x267 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1D4 DUP1 PUSH2 0x93 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1487F252 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x27CBAABE EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x2B890543 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x753C5188 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xD82AFF11 EQ PUSH2 0xE8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x98 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7C JUMP JUMPDEST PUSH2 0xC3 PUSH2 0xBE CALLDATASIZE PUSH1 0x4 PUSH2 0x16E JUMP JUMPDEST PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x70 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x16E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xC3 PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x16E JUMP JUMPDEST PUSH2 0x133 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB DUP10 SHL CALLDATACOPY PUSH14 0xF71E14EAA84B5B7A740F352AB8F6 EQ ORIGIN 0xA9 0xF8 0x4D SHL CREATE 0xC2 PUSH27 0x78FE404C64736F6C634300080F0033000000000000000000000000 ",
                        "sourceMap": "113:1446:2:-:0;;;291:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;337:13;:30;;-1:-1:-1;;;;;;337:30:2;-1:-1:-1;;;;;337:30:2;;;;;;;;;;113:1446;;14:290:18;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:18;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:18:o;:::-;113:1446:2;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {
                            "@delMarketManager_1046": {
                                "entryPoint": 251,
                                "id": 1046,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@ismarketManager_1059": {
                                "entryPoint": null,
                                "id": 1059,
                                "parameterSlots": 0,
                                "returnSlots": 1
                            },
                            "@marketCreator_980": {
                                "entryPoint": null,
                                "id": 980,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@marketManagers_978": {
                                "entryPoint": null,
                                "id": 978,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@setMarketManager_1031": {
                                "entryPoint": 307,
                                "id": 1031,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "abi_decode_tuple_t_address": {
                                "entryPoint": 366,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            }
                        },
                        "generatedSources": [
                            {
                                "ast": {
                                    "nodeType": "YulBlock",
                                    "src": "0:702:18",
                                    "statements": [
                                        {
                                            "nodeType": "YulBlock",
                                            "src": "6:3:18",
                                            "statements": []
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "109:92:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "119:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "131:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "142:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "127:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "127:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "119:4:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "161:9:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "186:6:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "179:6:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "179:14:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "iszero",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "172:6:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "172:22:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "154:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "154:41:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "154:41:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "78:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "89:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "100:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "14:187:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "307:102:18",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "317:26:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "329:9:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "340:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "325:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "325:18:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "317:4:18"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "359:9:18"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "374:6:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "390:3:18",
                                                                                            "type": "",
                                                                                            "value": "160"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "395:1:18",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "shl",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "386:3:18"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "386:11:18"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "399:1:18",
                                                                                    "type": "",
                                                                                    "value": "1"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "sub",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "382:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "382:19:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "370:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "370:32:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "352:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "352:51:18"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "352:51:18"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "276:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "287:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "298:4:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "206:203:18"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "484:216:18",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "530:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "539:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "542:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "532:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "532:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "532:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "505:7:18"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "514:9:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "501:3:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "501:23:18"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "526:2:18",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "497:3:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "497:32:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "494:52:18"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "555:36:18",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "581:9:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "568:12:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "568:23:18"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulTypedName",
                                                                "src": "559:5:18",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "654:16:18",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "663:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "666:1:18",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "656:6:18"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "656:12:18"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "656:12:18"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "613:5:18"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "624:5:18"
                                                                                },
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "639:3:18",
                                                                                                    "type": "",
                                                                                                    "value": "160"
                                                                                                },
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "644:1:18",
                                                                                                    "type": "",
                                                                                                    "value": "1"
                                                                                                }
                                                                                            ],
                                                                                            "functionName": {
                                                                                                "name": "shl",
                                                                                                "nodeType": "YulIdentifier",
                                                                                                "src": "635:3:18"
                                                                                            },
                                                                                            "nodeType": "YulFunctionCall",
                                                                                            "src": "635:11:18"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "648:1:18",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "sub",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "631:3:18"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "631:19:18"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "620:3:18"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "620:31:18"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "610:2:18"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "610:42:18"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "603:6:18"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "603:50:18"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "600:70:18"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "679:15:18",
                                                        "value": {
                                                            "name": "value",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "689:5:18"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "679:6:18"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "450:9:18",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "461:7:18",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "473:6:18",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "414:286:18"
                                        }
                                    ]
                                },
                                "contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
                                "id": 18,
                                "language": "Yul",
                                "name": "#utility.yul"
                            }
                        ],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80631487f2521461005c57806327cbaabe146100855780632b890543146100b0578063753c5188146100c5578063d82aff11146100e8575b600080fd5b3360009081526020819052604090205460ff165b60405190151581526020015b60405180910390f35b600154610098906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b6100c36100be36600461016e565b6100fb565b005b6100706100d336600461016e565b60006020819052908152604090205460ff1681565b6100c36100f636600461016e565b610133565b6001546001600160a01b0316331461011257600080fd5b6001600160a01b03166000908152602081905260409020805460ff19169055565b6001546001600160a01b0316331461014a57600080fd5b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b60006020828403121561018057600080fd5b81356001600160a01b038116811461019757600080fd5b939250505056fea2646970667358221220eb891b376df71e14eaa84b5b7a740f352ab8f61432a9f84d1bf0c27a78fe404c64736f6c634300080f0033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1487F252 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x27CBAABE EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x2B890543 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x753C5188 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xD82AFF11 EQ PUSH2 0xE8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x98 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7C JUMP JUMPDEST PUSH2 0xC3 PUSH2 0xBE CALLDATASIZE PUSH1 0x4 PUSH2 0x16E JUMP JUMPDEST PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x70 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x16E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xC3 PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x16E JUMP JUMPDEST PUSH2 0x133 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB DUP10 SHL CALLDATACOPY PUSH14 0xF71E14EAA84B5B7A740F352AB8F6 EQ ORIGIN 0xA9 0xF8 0x4D SHL CREATE 0xC2 PUSH27 0x78FE404C64736F6C634300080F0033000000000000000000000000 ",
                        "sourceMap": "113:1446:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1442:115;1539:10;1501:4;1524:26;;;;;;;;;;;;;1442:115;;;179:14:18;;172:22;154:41;;142:2;127:18;1442:115:2;;;;;;;;256:28;;;;;-1:-1:-1;;;;;256:28:2;;;;;;-1:-1:-1;;;;;370:32:18;;;352:51;;340:2;325:18;256:28:2;206:203:18;1176:152:2;;;;;;:::i;:::-;;:::i;:::-;;203:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;910:152;;;;;;:::i;:::-;;:::i;1176:::-;441:13;;-1:-1:-1;;;;;441:13:2;427:10;:27;419:36;;;;;;-1:-1:-1;;;;;1299:22:2::1;:14;:22:::0;;;::::1;::::0;;;;;;1292:29;;-1:-1:-1;;1292:29:2::1;::::0;;1176:152::o;910:::-;441:13;;-1:-1:-1;;;;;441:13:2;427:10;:27;419:36;;;;;;-1:-1:-1;;;;;1026:22:2::1;:14;:22:::0;;;::::1;::::0;;;;;;:29;;-1:-1:-1;;1026:29:2::1;1051:4;1026:29;::::0;;910:152::o;414:286:18:-;473:6;526:2;514:9;505:7;501:23;497:32;494:52;;;542:1;539;532:12;494:52;568:23;;-1:-1:-1;;;;;620:31:18;;610:42;;600:70;;666:1;663;656:12;600:70;689:5;414:286;-1:-1:-1;;;414:286:18:o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "93600",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "delMarketManager(address)": "26734",
                            "ismarketManager()": "2331",
                            "marketCreator()": "2337",
                            "marketManagers(address)": "2532",
                            "setMarketManager(address)": "26784"
                        }
                    },
                    "methodIdentifiers": {
                        "delMarketManager(address)": "2b890543",
                        "ismarketManager()": "1487f252",
                        "marketCreator()": "27cbaabe",
                        "marketManagers(address)": "753c5188",
                        "setMarketManager(address)": "d82aff11"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketCreator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ismarketManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketManagers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"delMarketManager(address)\":{\"details\":\"Explain to a developer any extra details\"},\"ismarketManager()\":{\"details\":\"Explain to a developer any extra details\"},\"setMarketManager(address)\":{\"details\":\"Explain to a developer any extra details\"}},\"stateVariables\":{\"marketCreator\":{\"return\":\"The contract address\",\"returns\":{\"_0\":\"The contract address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delMarketManager(address)\":{\"notice\":\"Explain to an end user what this does\"},\"ismarketManager()\":{\"notice\":\"Explain to an end user what this does\"},\"marketCreator()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"setMarketManager(address)\":{\"notice\":\"Explain to an end user what this does\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Manager.sol\":\"MoonV1Manager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Manager.sol\":{\"keccak256\":\"0xd552d947b0bd23c0283bd49548bace3f7d8b0046871ee7f88205f3d73ae3ac1c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3961299517b90f99adc9b88a70b514b2d4cc016adafa5c6dbdb352643129415\",\"dweb:/ipfs/QmeoZUPD8H3NmvPxjLXGnFynEjgH39sFEwSFzrnwZGhFTB\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Manager.sol\":{\"keccak256\":\"0x427c430fd81ae0869fe56d41e19ed2dda3dae2c909ecc04377a1ca37983bf877\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9c4fec5c29fe8813cf06d95a9c3f2b4c99675b4b59c44f5481e3987a81f6c29\",\"dweb:/ipfs/QmWBXHQFi4PtL6LiWCRDF35XcVPRHBEAXt1Ye937Yw76KQ\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Events.sol\":{\"keccak256\":\"0xbbaec4165ad9931dbb85bc842c301f0183377bdaa8c192ede335258681676839\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a7e4ce4f6e8b82cb7e823d6b9a2ae682e38bf72f2aefc7e4ff6a150cce59a8bb\",\"dweb:/ipfs/QmNWLmSHKsfvBrdZsMea73wVafTyvZZEgAn5KcDYUXS1Mc\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Immutables.sol\":{\"keccak256\":\"0xd8036ef421a6187d45df01717af3959f3fabd647a35208815ff044e27c2f16d3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d38402d77802f86dce1f6c58bb6166a97f83702c3bb08909fcd856134d4f99c5\",\"dweb:/ipfs/QmXqhJwkcdzWpngoJwXUiAvPAUHVndJLSQW9nHkm33gFYK\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1MarketCreatorActions.sol\":{\"keccak256\":\"0x8e27f2ef0685114e1ee9ff38ae882760458e750030abf7cdd27f03a7c91e0413\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://df1e6fd05ee40468f31bfe0e229a4f19ae258de34bd0034f975190f4d90a453e\",\"dweb:/ipfs/QmU5H2LbDxWGKy4tM4FwXxEEoj72Mbme4XMeB5nuvQfn43\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1State.sol\":{\"keccak256\":\"0x1da7bafb43b2d8e1b62c4b146d9d93c6f9656d16cc75a05e1550545bfd891501\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3eb7ace0bbc0c123e993640afb7cecb023c0615733fdd78d0126c75a581f7a47\",\"dweb:/ipfs/QmWf1ZyabdYkBFcwe32npBnHWGJ3Vy59carWoRQ14FEsgJ\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":{\"keccak256\":\"0x6acb4a762f349ab39bd48ff34c150b55f55aabc4826379838391749136f3aee9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58552a104e1a046883cf116fe6748600caf7c8ebe341f82a38aa6fbfb09355cb\",\"dweb:/ipfs/QmQxUAK9fzefN6afoJ2CGyRWtETz1TEcZoJhDFCYJ3WY4V\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":{\"keccak256\":\"0xdbbcc3e545cc8d7d8eebe4b1dbaccee4d2adbce4785cb7ac5f4712093c72db52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d7251ca8ee12ad7009fe9f280aa8be028502f51e7465fe5314b85b9a2815991\",\"dweb:/ipfs/QmRQ5Z78r3qDKhBbRbDs8d4ThNk5fLN5S5g6tosHwa6jdo\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LSTThings.sol\":{\"keccak256\":\"0x8f10ad7cdca3ab033387dc360617f52dd3b41642cb627866c993e5202bdf8db7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://56243f8b3bcaeb92c7423aa4b040c0fc22b1975b018e4292e3aa98fc251335e8\",\"dweb:/ipfs/QmW7XoPQKzLNmbU3jfMP3BmX5WwZNrddjtmyb7mYMSdj9E\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 978,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Manager.sol:MoonV1Manager",
                            "label": "marketManagers",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_mapping(t_address,t_bool)"
                        },
                        {
                            "astId": 980,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Manager.sol:MoonV1Manager",
                            "label": "marketCreator",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_address"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_bool": {
                            "encoding": "inplace",
                            "label": "bool",
                            "numberOfBytes": "1"
                        },
                        "t_mapping(t_address,t_bool)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => bool)",
                            "numberOfBytes": "32",
                            "value": "t_bool"
                        }
                    }
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "delMarketManager(address)": {
                            "notice": "Explain to an end user what this does"
                        },
                        "ismarketManager()": {
                            "notice": "Explain to an end user what this does"
                        },
                        "marketCreator()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        },
                        "setMarketManager(address)": {
                            "notice": "Explain to an end user what this does"
                        }
                    },
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol": {
            "ICoinV1Events": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Events emitted by a pool",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol\":\"ICoinV1Events\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol\":{\"keccak256\":\"0x1c2a7d25c4df3bd615df013c217ed7a3dab1a1d78bb8f1390dfc88b277fefa57\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ce74856dbf250051fba0f7cf56e6e58102fce98333c2f639c7a1199202eaf9a6\",\"dweb:/ipfs/QmYEhmrsfzyUizcUATMUt2uU7HpqBgVksjf8ToDb559vbh\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Contains all events emitted by the pool",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GaterActions.sol": {
            "ICoinV1GaterActions": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "addCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Permissioned pool actions",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "addCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "e911abec",
                        "lockCoinbyGator(address)": "441eb548",
                        "unlockCoinbyGator(address)": "385e4b7a",
                        "updateCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "a935b6af"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GaterActions.sol\":\"ICoinV1GaterActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GaterActions.sol\":{\"keccak256\":\"0x7c5fd6f95aad0538e5e77aa02d569ad1e92af4fe0adf3c46bd9cc77e2b9d360e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7b07c22acaf7d45e5b1d0e347ec2546fdb97c0e45fc6e22d5df8a2b47ed5e5fb\",\"dweb:/ipfs/QmW3Hqh5gcq4XUYqmQ6ZN8x1Siwci7fkVQ88wn5e4nHZj1\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Contains pool methods that may only be called by the factory owner",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol": {
            "ICoinV1Immutables": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "gateContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketorContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "gateContractAddress()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        },
                        "marketorContractAddress()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "title": "Pool state that never changes",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "gateContractAddress()": "2f17d5df",
                        "marketorContractAddress()": "492b7107"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"gateContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"gateContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}},\"marketorContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"gateContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"marketorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol\":\"ICoinV1Immutables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol\":{\"keccak256\":\"0x78995605789e04e93e9e5cb8e369dc90f24d2a7f3c710be42006f8b84307ba1a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8f4309990de0223472a26293cec956b8d74dd67f3bc4ce017a356a50ee0f34d\",\"dweb:/ipfs/Qmbsfg8dDCRopUET5ABAvSCpKonf7uCHVARW7J3xaqCiGq\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "gateContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        },
                        "marketorContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        }
                    },
                    "notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol": {
            "ICoinV1MarketorActions": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "addCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            },
                            {
                                "internalType": "uint8",
                                "name": "_scope",
                                "type": "uint8"
                            }
                        ],
                        "name": "changeCoinScopebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            }
                        ],
                        "name": "delCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_gateaddress",
                                "type": "address"
                            }
                        ],
                        "name": "delGateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_gateaddress",
                                "type": "address"
                            }
                        ],
                        "name": "impoveGateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Permissioned pool actions",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "87a70938",
                        "changeCoinScopebyMarketor(address,uint8)": "5385cbf5",
                        "delCoinbyMarketor(address)": "7c3e2f02",
                        "delGateCoinbyMarketor(address,address)": "eaec0112",
                        "impoveGateCoinbyMarketor(address,address)": "cfcdca52",
                        "lockCoinbyMarketor(address)": "b20be2b4",
                        "unlockCoinbyMarketor(address)": "1d3b8f67",
                        "updateCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "24fd7139"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_scope\",\"type\":\"uint8\"}],\"name\":\"changeCoinScopebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"delCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"delGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"impoveGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol\":\"ICoinV1MarketorActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol\":{\"keccak256\":\"0xe009186e1b5ce6f8f883b2d5b6a58b9f7427376fe7d2afd8571dec1fb95ce68b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e2007d95aa5767105375f3046cec93cf51a3a4818c4ebc9513cd7b882de9d95\",\"dweb:/ipfs/QmdLCEF3yhhBkGhHdGaM8WVy2LfBHGLW6T3tRWfqiwPtKy\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Contains pool methods that may only be called by the factory owner",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol": {
            "ICoinV1State": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            }
                        ],
                        "name": "getCoinInfo",
                        "outputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "",
                                "type": "tuple"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Pool state that can change",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "getCoinInfo(address)": "e8dd4655"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"getCoinInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol\":\"ICoinV1State\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol\":{\"keccak256\":\"0xd03715fc3391f5aeb00ca1620a86cd85efc9b3a99a9c283e182f739e427f95b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3b2e2174ee6495d8a354c8825b33f25bd514becf93aca020162d80a256e7291c\",\"dweb:/ipfs/QmaqFMfBz5dELTaFLazLgjXUsJWT6hVga2s3xdYc2hAjF1\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Coin.sol": {
            "IMoonV1Coin": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "addCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "addCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            },
                            {
                                "internalType": "uint8",
                                "name": "_scope",
                                "type": "uint8"
                            }
                        ],
                        "name": "changeCoinScopebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            }
                        ],
                        "name": "delCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_gateaddress",
                                "type": "address"
                            }
                        ],
                        "name": "delGateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "gateContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            }
                        ],
                        "name": "getCoinInfo",
                        "outputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "",
                                "type": "tuple"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_gateaddress",
                                "type": "address"
                            }
                        ],
                        "name": "impoveGateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketorContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "details": "The pool interface is broken up into many smaller pieces",
                    "kind": "dev",
                    "methods": {
                        "gateContractAddress()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        },
                        "marketorContractAddress()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "title": "The interface for a Uniswap V3 Pool",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "addCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "e911abec",
                        "addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "87a70938",
                        "changeCoinScopebyMarketor(address,uint8)": "5385cbf5",
                        "delCoinbyMarketor(address)": "7c3e2f02",
                        "delGateCoinbyMarketor(address,address)": "eaec0112",
                        "gateContractAddress()": "2f17d5df",
                        "getCoinInfo(address)": "e8dd4655",
                        "impoveGateCoinbyMarketor(address,address)": "cfcdca52",
                        "lockCoinbyGator(address)": "441eb548",
                        "lockCoinbyMarketor(address)": "b20be2b4",
                        "marketorContractAddress()": "492b7107",
                        "unlockCoinbyGator(address)": "385e4b7a",
                        "unlockCoinbyMarketor(address)": "1d3b8f67",
                        "updateCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "a935b6af",
                        "updateCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "24fd7139"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_scope\",\"type\":\"uint8\"}],\"name\":\"changeCoinScopebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"delCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"delGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gateContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"getCoinInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"impoveGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"gateContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}},\"marketorContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"gateContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"marketorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Coin.sol\":\"IMoonV1Coin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol\":{\"keccak256\":\"0x1c2a7d25c4df3bd615df013c217ed7a3dab1a1d78bb8f1390dfc88b277fefa57\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ce74856dbf250051fba0f7cf56e6e58102fce98333c2f639c7a1199202eaf9a6\",\"dweb:/ipfs/QmYEhmrsfzyUizcUATMUt2uU7HpqBgVksjf8ToDb559vbh\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GaterActions.sol\":{\"keccak256\":\"0x7c5fd6f95aad0538e5e77aa02d569ad1e92af4fe0adf3c46bd9cc77e2b9d360e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7b07c22acaf7d45e5b1d0e347ec2546fdb97c0e45fc6e22d5df8a2b47ed5e5fb\",\"dweb:/ipfs/QmW3Hqh5gcq4XUYqmQ6ZN8x1Siwci7fkVQ88wn5e4nHZj1\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol\":{\"keccak256\":\"0x78995605789e04e93e9e5cb8e369dc90f24d2a7f3c710be42006f8b84307ba1a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8f4309990de0223472a26293cec956b8d74dd67f3bc4ce017a356a50ee0f34d\",\"dweb:/ipfs/Qmbsfg8dDCRopUET5ABAvSCpKonf7uCHVARW7J3xaqCiGq\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol\":{\"keccak256\":\"0xe009186e1b5ce6f8f883b2d5b6a58b9f7427376fe7d2afd8571dec1fb95ce68b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e2007d95aa5767105375f3046cec93cf51a3a4818c4ebc9513cd7b882de9d95\",\"dweb:/ipfs/QmdLCEF3yhhBkGhHdGaM8WVy2LfBHGLW6T3tRWfqiwPtKy\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol\":{\"keccak256\":\"0xd03715fc3391f5aeb00ca1620a86cd85efc9b3a99a9c283e182f739e427f95b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3b2e2174ee6495d8a354c8825b33f25bd514becf93aca020162d80a256e7291c\",\"dweb:/ipfs/QmaqFMfBz5dELTaFLazLgjXUsJWT6hVga2s3xdYc2hAjF1\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Coin.sol\":{\"keccak256\":\"0xb4c60db7bf50ac85bcd31dcaa9c3d230c17c40d0b58837e995e1546a4c6c4473\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ebc08ef5bc38400943cd6f767929c41d2d7276670918c8344aa34b5c29bd0827\",\"dweb:/ipfs/QmbrgaKvBLLBaFwHXnTK4N3B3Ueb6A3X6oVWQ4yRpLCmVp\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "gateContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        },
                        "marketorContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        }
                    },
                    "notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Manager.sol": {
            "IMoonV1Manager": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "delMarketManager",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "ismarketManager",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketCreator",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "setMarketManager",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "details": "The pool interface is broken up into many smaller pieces",
                    "kind": "dev",
                    "methods": {
                        "delMarketManager(address)": {
                            "details": "Explain to a developer any extra details"
                        },
                        "marketCreator()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "title": "The interface for a Uniswap V3 Pool",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "delMarketManager(address)": "2b890543",
                        "ismarketManager()": "1487f252",
                        "marketCreator()": "27cbaabe",
                        "setMarketManager(address)": "d82aff11"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ismarketManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"delMarketManager(address)\":{\"details\":\"Explain to a developer any extra details\"},\"marketCreator()\":{\"returns\":{\"_0\":\"The contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delMarketManager(address)\":{\"notice\":\"Explain to an end user what this does\"},\"marketCreator()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Manager.sol\":\"IMoonV1Manager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Manager.sol\":{\"keccak256\":\"0x427c430fd81ae0869fe56d41e19ed2dda3dae2c909ecc04377a1ca37983bf877\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9c4fec5c29fe8813cf06d95a9c3f2b4c99675b4b59c44f5481e3987a81f6c29\",\"dweb:/ipfs/QmWBXHQFi4PtL6LiWCRDF35XcVPRHBEAXt1Ye937Yw76KQ\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Events.sol\":{\"keccak256\":\"0xbbaec4165ad9931dbb85bc842c301f0183377bdaa8c192ede335258681676839\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a7e4ce4f6e8b82cb7e823d6b9a2ae682e38bf72f2aefc7e4ff6a150cce59a8bb\",\"dweb:/ipfs/QmNWLmSHKsfvBrdZsMea73wVafTyvZZEgAn5KcDYUXS1Mc\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Immutables.sol\":{\"keccak256\":\"0xd8036ef421a6187d45df01717af3959f3fabd647a35208815ff044e27c2f16d3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d38402d77802f86dce1f6c58bb6166a97f83702c3bb08909fcd856134d4f99c5\",\"dweb:/ipfs/QmXqhJwkcdzWpngoJwXUiAvPAUHVndJLSQW9nHkm33gFYK\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1MarketCreatorActions.sol\":{\"keccak256\":\"0x8e27f2ef0685114e1ee9ff38ae882760458e750030abf7cdd27f03a7c91e0413\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://df1e6fd05ee40468f31bfe0e229a4f19ae258de34bd0034f975190f4d90a453e\",\"dweb:/ipfs/QmU5H2LbDxWGKy4tM4FwXxEEoj72Mbme4XMeB5nuvQfn43\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1State.sol\":{\"keccak256\":\"0x1da7bafb43b2d8e1b62c4b146d9d93c6f9656d16cc75a05e1550545bfd891501\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3eb7ace0bbc0c123e993640afb7cecb023c0615733fdd78d0126c75a581f7a47\",\"dweb:/ipfs/QmWf1ZyabdYkBFcwe32npBnHWGJ3Vy59carWoRQ14FEsgJ\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":{\"keccak256\":\"0x6acb4a762f349ab39bd48ff34c150b55f55aabc4826379838391749136f3aee9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58552a104e1a046883cf116fe6748600caf7c8ebe341f82a38aa6fbfb09355cb\",\"dweb:/ipfs/QmQxUAK9fzefN6afoJ2CGyRWtETz1TEcZoJhDFCYJ3WY4V\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":{\"keccak256\":\"0xdbbcc3e545cc8d7d8eebe4b1dbaccee4d2adbce4785cb7ac5f4712093c72db52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d7251ca8ee12ad7009fe9f280aa8be028502f51e7465fe5314b85b9a2815991\",\"dweb:/ipfs/QmRQ5Z78r3qDKhBbRbDs8d4ThNk5fLN5S5g6tosHwa6jdo\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LSTThings.sol\":{\"keccak256\":\"0x8f10ad7cdca3ab033387dc360617f52dd3b41642cb627866c993e5202bdf8db7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://56243f8b3bcaeb92c7423aa4b040c0fc22b1975b018e4292e3aa98fc251335e8\",\"dweb:/ipfs/QmW7XoPQKzLNmbU3jfMP3BmX5WwZNrddjtmyb7mYMSdj9E\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "delMarketManager(address)": {
                            "notice": "Explain to an end user what this does"
                        },
                        "marketCreator()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        }
                    },
                    "notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Events.sol": {
            "IManagerV1Events": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Events emitted by a pool",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Events.sol\":\"IManagerV1Events\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Events.sol\":{\"keccak256\":\"0xbbaec4165ad9931dbb85bc842c301f0183377bdaa8c192ede335258681676839\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a7e4ce4f6e8b82cb7e823d6b9a2ae682e38bf72f2aefc7e4ff6a150cce59a8bb\",\"dweb:/ipfs/QmNWLmSHKsfvBrdZsMea73wVafTyvZZEgAn5KcDYUXS1Mc\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Contains all events emitted by the pool",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Immutables.sol": {
            "IManagerV1Immutables": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "marketCreator",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "marketCreator()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "title": "Pool state that never changes",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "marketCreator()": "27cbaabe"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"marketCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"marketCreator()\":{\"returns\":{\"_0\":\"The contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"marketCreator()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Immutables.sol\":\"IManagerV1Immutables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Immutables.sol\":{\"keccak256\":\"0xd8036ef421a6187d45df01717af3959f3fabd647a35208815ff044e27c2f16d3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d38402d77802f86dce1f6c58bb6166a97f83702c3bb08909fcd856134d4f99c5\",\"dweb:/ipfs/QmXqhJwkcdzWpngoJwXUiAvPAUHVndJLSQW9nHkm33gFYK\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "marketCreator()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        }
                    },
                    "notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1MarketCreatorActions.sol": {
            "IManagerV1MarketCreatorActions": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "delMarketManager",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "setMarketManager",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "delMarketManager(address)": {
                            "details": "Explain to a developer any extra details"
                        }
                    },
                    "title": "Permissioned pool actions",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "delMarketManager(address)": "2b890543",
                        "setMarketManager(address)": "d82aff11"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"delMarketManager(address)\":{\"details\":\"Explain to a developer any extra details\"}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delMarketManager(address)\":{\"notice\":\"Explain to an end user what this does\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1MarketCreatorActions.sol\":\"IManagerV1MarketCreatorActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1MarketCreatorActions.sol\":{\"keccak256\":\"0x8e27f2ef0685114e1ee9ff38ae882760458e750030abf7cdd27f03a7c91e0413\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://df1e6fd05ee40468f31bfe0e229a4f19ae258de34bd0034f975190f4d90a453e\",\"dweb:/ipfs/QmU5H2LbDxWGKy4tM4FwXxEEoj72Mbme4XMeB5nuvQfn43\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":{\"keccak256\":\"0xdbbcc3e545cc8d7d8eebe4b1dbaccee4d2adbce4785cb7ac5f4712093c72db52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d7251ca8ee12ad7009fe9f280aa8be028502f51e7465fe5314b85b9a2815991\",\"dweb:/ipfs/QmRQ5Z78r3qDKhBbRbDs8d4ThNk5fLN5S5g6tosHwa6jdo\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LSTThings.sol\":{\"keccak256\":\"0x8f10ad7cdca3ab033387dc360617f52dd3b41642cb627866c993e5202bdf8db7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://56243f8b3bcaeb92c7423aa4b040c0fc22b1975b018e4292e3aa98fc251335e8\",\"dweb:/ipfs/QmW7XoPQKzLNmbU3jfMP3BmX5WwZNrddjtmyb7mYMSdj9E\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "delMarketManager(address)": {
                            "notice": "Explain to an end user what this does"
                        }
                    },
                    "notice": "Contains pool methods that may only be called by the factory owner",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1State.sol": {
            "IManagerV1State": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "ismarketManager",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Pool state that can change",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "ismarketManager()": "1487f252"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ismarketManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1State.sol\":\"IManagerV1State\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1State.sol\":{\"keccak256\":\"0x1da7bafb43b2d8e1b62c4b146d9d93c6f9656d16cc75a05e1550545bfd891501\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3eb7ace0bbc0c123e993640afb7cecb023c0615733fdd78d0126c75a581f7a47\",\"dweb:/ipfs/QmWf1ZyabdYkBFcwe32npBnHWGJ3Vy59carWoRQ14FEsgJ\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":{\"keccak256\":\"0x6acb4a762f349ab39bd48ff34c150b55f55aabc4826379838391749136f3aee9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58552a104e1a046883cf116fe6748600caf7c8ebe341f82a38aa6fbfb09355cb\",\"dweb:/ipfs/QmQxUAK9fzefN6afoJ2CGyRWtETz1TEcZoJhDFCYJ3WY4V\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":{\"keccak256\":\"0xdbbcc3e545cc8d7d8eebe4b1dbaccee4d2adbce4785cb7ac5f4712093c72db52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d7251ca8ee12ad7009fe9f280aa8be028502f51e7465fe5314b85b9a2815991\",\"dweb:/ipfs/QmRQ5Z78r3qDKhBbRbDs8d4ThNk5fLN5S5g6tosHwa6jdo\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LSTThings.sol\":{\"keccak256\":\"0x8f10ad7cdca3ab033387dc360617f52dd3b41642cb627866c993e5202bdf8db7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://56243f8b3bcaeb92c7423aa4b040c0fc22b1975b018e4292e3aa98fc251335e8\",\"dweb:/ipfs/QmW7XoPQKzLNmbU3jfMP3BmX5WwZNrddjtmyb7mYMSdj9E\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol": {
            "LCoin": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064c9ad16183605c046c5b0d42e52f1738623f27157e8c61d9cf463b77655cb7864736f6c634300080f0033",
                        "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xC9AD161836 SDIV 0xC0 CHAINID 0xC5 0xB0 0xD4 0x2E MSTORE CALL PUSH20 0x8623F27157E8C61D9CF463B77655CB7864736F6C PUSH4 0x4300080F STOP CALLER ",
                        "sourceMap": "70:671:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;70:671:14;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064c9ad16183605c046c5b0d42e52f1738623f27157e8c61d9cf463b77655cb7864736f6c634300080f0033",
                        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xC9AD161836 SDIV 0xC0 CHAINID 0xC5 0xB0 0xD4 0x2E MSTORE CALL PUSH20 0x8623F27157E8C61D9CF463B77655CB7864736F6C PUSH4 0x4300080F STOP CALLER ",
                        "sourceMap": "70:671:14:-:0;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "17200",
                            "executionCost": "103",
                            "totalCost": "17303"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":\"LCoin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol": {
            "LCustomer": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208604bc6434f4003f527ebdca05addb404cd4ddc5709077507b21bd6a7178cda864736f6c634300080f0033",
                        "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DIV 0xBC PUSH5 0x34F4003F52 PUSH31 0xBDCA05ADDB404CD4DDC5709077507B21BD6A7178CDA864736F6C634300080F STOP CALLER ",
                        "sourceMap": "70:677:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;70:677:15;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208604bc6434f4003f527ebdca05addb404cd4ddc5709077507b21bd6a7178cda864736f6c634300080f0033",
                        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DIV 0xBC PUSH5 0x34F4003F52 PUSH31 0xBDCA05ADDB404CD4DDC5709077507B21BD6A7178CDA864736F6C634300080F STOP CALLER ",
                        "sourceMap": "70:677:15:-:0;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "17200",
                            "executionCost": "103",
                            "totalCost": "17303"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":\"LCustomer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":{\"keccak256\":\"0x6acb4a762f349ab39bd48ff34c150b55f55aabc4826379838391749136f3aee9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58552a104e1a046883cf116fe6748600caf7c8ebe341f82a38aa6fbfb09355cb\",\"dweb:/ipfs/QmQxUAK9fzefN6afoJ2CGyRWtETz1TEcZoJhDFCYJ3WY4V\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol": {
            "LGate": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c9fd77834cb97cc9a5188fb3f3c1400e5093fe255ad00a92b14c1013e566a6564736f6c634300080f0033",
                        "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC SWAP16 0xD7 PUSH25 0x34CB97CC9A5188FB3F3C1400E5093FE255AD00A92B14C1013E JUMP PUSH11 0x6564736F6C634300080F00 CALLER ",
                        "sourceMap": "70:900:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;70:900:16;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c9fd77834cb97cc9a5188fb3f3c1400e5093fe255ad00a92b14c1013e566a6564736f6c634300080f0033",
                        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC SWAP16 0xD7 PUSH25 0x34CB97CC9A5188FB3F3C1400E5093FE255AD00A92B14C1013E JUMP PUSH11 0x6564736F6C634300080F00 CALLER ",
                        "sourceMap": "70:900:16:-:0;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "17200",
                            "executionCost": "103",
                            "totalCost": "17303"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":\"LGate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol\":{\"keccak256\":\"0xdbbcc3e545cc8d7d8eebe4b1dbaccee4d2adbce4785cb7ac5f4712093c72db52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d7251ca8ee12ad7009fe9f280aa8be028502f51e7465fe5314b85b9a2815991\",\"dweb:/ipfs/QmRQ5Z78r3qDKhBbRbDs8d4ThNk5fLN5S5g6tosHwa6jdo\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LSTThings.sol": {
            "LSTThings": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c40c9e00721647c24dc2be6a7a5c63d7475337065c993bfd3b17c35c2279733464736f6c634300080f0033",
                        "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xC SWAP15 STOP PUSH19 0x1647C24DC2BE6A7A5C63D7475337065C993BFD EXTCODESIZE OR 0xC3 0x5C 0x22 PUSH26 0x733464736F6C634300080F003300000000000000000000000000 ",
                        "sourceMap": "70:745:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;70:745:17;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c40c9e00721647c24dc2be6a7a5c63d7475337065c993bfd3b17c35c2279733464736f6c634300080f0033",
                        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xC SWAP15 STOP PUSH19 0x1647C24DC2BE6A7A5C63D7475337065C993BFD EXTCODESIZE OR 0xC3 0x5C 0x22 PUSH26 0x733464736F6C634300080F003300000000000000000000000000 ",
                        "sourceMap": "70:745:17:-:0;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "17200",
                            "executionCost": "103",
                            "totalCost": "17303"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LSTThings.sol\":\"LSTThings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LSTThings.sol\":{\"keccak256\":\"0x8f10ad7cdca3ab033387dc360617f52dd3b41642cb627866c993e5202bdf8db7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://56243f8b3bcaeb92c7423aa4b040c0fc22b1975b018e4292e3aa98fc251335e8\",\"dweb:/ipfs/QmW7XoPQKzLNmbU3jfMP3BmX5WwZNrddjtmyb7mYMSdj9E\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        }
    },
    "sources": {
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Coin.sol",
                "exportedSymbols": {
                    "ICoinV1Events": [
                        1064
                    ],
                    "ICoinV1GaterActions": [
                        1091
                    ],
                    "ICoinV1Immutables": [
                        1107
                    ],
                    "ICoinV1MarketorActions": [
                        1160
                    ],
                    "ICoinV1State": [
                        1173
                    ],
                    "IManagerV1Events": [
                        1212
                    ],
                    "IManagerV1Immutables": [
                        1222
                    ],
                    "IManagerV1MarketCreatorActions": [
                        1240
                    ],
                    "IManagerV1State": [
                        1253
                    ],
                    "IMoonV1Coin": [
                        1192
                    ],
                    "IMoonV1Manager": [
                        1208
                    ],
                    "LCoin": [
                        1285
                    ],
                    "LCustomer": [
                        1307
                    ],
                    "LGate": [
                        1333
                    ],
                    "LSTThings": [
                        1361
                    ],
                    "MoonV1Coin": [
                        612
                    ],
                    "MoonV1Gater": [
                        969
                    ],
                    "MoonV1Manager": [
                        1060
                    ]
                },
                "id": 613,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:0"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol",
                        "file": "./MoonV1Gater.sol",
                        "id": 2,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 613,
                        "sourceUnit": 970,
                        "src": "70:27:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Manager.sol",
                        "file": "./MoonV1Manager.sol",
                        "id": 3,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 613,
                        "sourceUnit": 1061,
                        "src": "98:29:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol",
                        "file": "./libraries/base/LCoin.sol",
                        "id": 4,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 613,
                        "sourceUnit": 1286,
                        "src": "129:36:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Coin.sol",
                        "file": "./interfaces/IMoonV1Coin.sol",
                        "id": 5,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 613,
                        "sourceUnit": 1193,
                        "src": "166:38:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 6,
                                    "name": "IMoonV1Coin",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1192,
                                    "src": "229:11:0"
                                },
                                "id": 7,
                                "nodeType": "InheritanceSpecifier",
                                "src": "229:11:0"
                            }
                        ],
                        "canonicalName": "MoonV1Coin",
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 612,
                        "linearizedBaseContracts": [
                            612,
                            1192,
                            1173,
                            1160,
                            1107,
                            1091,
                            1064
                        ],
                        "name": "MoonV1Coin",
                        "nameLocation": "215:10:0",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "functionSelector": "3b830305",
                                "id": 11,
                                "mutability": "mutable",
                                "name": "marketCoinList",
                                "nameLocation": "380:14:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 612,
                                "src": "345:49:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                },
                                "typeName": {
                                    "id": 10,
                                    "keyType": {
                                        "id": 8,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "353:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "345:27:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                        "typeString": "mapping(address => address)"
                                    },
                                    "valueType": {
                                        "id": 9,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "364:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "cc0bf757",
                                "id": 17,
                                "mutability": "mutable",
                                "name": "gateCoinList",
                                "nameLocation": "569:12:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 612,
                                "src": "514:67:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                    "typeString": "mapping(address => mapping(address => address))"
                                },
                                "typeName": {
                                    "id": 16,
                                    "keyType": {
                                        "id": 12,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "522:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "514:47:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                        "typeString": "mapping(address => mapping(address => address))"
                                    },
                                    "valueType": {
                                        "id": 15,
                                        "keyType": {
                                            "id": 13,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "541:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Mapping",
                                        "src": "533:27:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                            "typeString": "mapping(address => address)"
                                        },
                                        "valueType": {
                                            "id": 14,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "552:7:0",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        }
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "31ecdeb8",
                                "id": 22,
                                "mutability": "mutable",
                                "name": "coinList",
                                "nameLocation": "711:8:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 612,
                                "src": "673:46:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                    "typeString": "mapping(address => struct LCoin.Info)"
                                },
                                "typeName": {
                                    "id": 21,
                                    "keyType": {
                                        "id": 18,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "681:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "673:30:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                        "typeString": "mapping(address => struct LCoin.Info)"
                                    },
                                    "valueType": {
                                        "id": 20,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 19,
                                            "name": "LCoin.Info",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 1284,
                                            "src": "692:10:0"
                                        },
                                        "referencedDeclaration": 1284,
                                        "src": "692:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Info_$1284_storage_ptr",
                                            "typeString": "struct LCoin.Info"
                                        }
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    1100
                                ],
                                "constant": false,
                                "functionSelector": "2f17d5df",
                                "id": 24,
                                "mutability": "immutable",
                                "name": "gateContractAddress",
                                "nameLocation": "751:19:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 612,
                                "src": "726:44:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 23,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "726:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    1106
                                ],
                                "constant": false,
                                "functionSelector": "492b7107",
                                "id": 26,
                                "mutability": "immutable",
                                "name": "marketorContractAddress",
                                "nameLocation": "801:23:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 612,
                                "src": "776:48:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 25,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "776:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 41,
                                    "nodeType": "Block",
                                    "src": "911:119:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 35,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 33,
                                                    "name": "gateContractAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 24,
                                                    "src": "921:19:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 34,
                                                    "name": "_gateContractAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 28,
                                                    "src": "943:20:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "921:42:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 36,
                                            "nodeType": "ExpressionStatement",
                                            "src": "921:42:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 39,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 37,
                                                    "name": "marketorContractAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 26,
                                                    "src": "973:23:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 38,
                                                    "name": "_marketorContractAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 30,
                                                    "src": "999:24:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "973:50:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 40,
                                            "nodeType": "ExpressionStatement",
                                            "src": "973:50:0"
                                        }
                                    ]
                                },
                                "id": 42,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nameLocation": "-1:-1:-1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 31,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 28,
                                            "mutability": "mutable",
                                            "name": "_gateContractAddress",
                                            "nameLocation": "851:20:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 42,
                                            "src": "843:28:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 27,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "843:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 30,
                                            "mutability": "mutable",
                                            "name": "_marketorContractAddress",
                                            "nameLocation": "881:24:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 42,
                                            "src": "873:32:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 29,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "873:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "842:64:0"
                                },
                                "returnParameters": {
                                    "id": 32,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "911:0:0"
                                },
                                "scope": 612,
                                "src": "831:199:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 54,
                                    "nodeType": "Block",
                                    "src": "1273:84:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "expression": {
                                                                "arguments": [
                                                                    {
                                                                        "id": 47,
                                                                        "name": "gateContractAddress",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 24,
                                                                        "src": "1303:19:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    ],
                                                                    "id": 46,
                                                                    "name": "MoonV1Gater",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 969,
                                                                    "src": "1291:11:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_contract$_MoonV1Gater_$969_$",
                                                                        "typeString": "type(contract MoonV1Gater)"
                                                                    }
                                                                },
                                                                "id": 48,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "1291:32:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_MoonV1Gater_$969",
                                                                    "typeString": "contract MoonV1Gater"
                                                                }
                                                            },
                                                            "id": 49,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isValidGater",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 968,
                                                            "src": "1291:45:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                                                "typeString": "function () view external returns (bool)"
                                                            }
                                                        },
                                                        "id": 50,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1291:47:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 45,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "1283:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 51,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1283:56:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 52,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1283:56:0"
                                        },
                                        {
                                            "id": 53,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "1349:1:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 43,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1036:211:0",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details\n @notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "id": 55,
                                "name": "onlyGator",
                                "nameLocation": "1261:9:0",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 44,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1270:2:0"
                                },
                                "src": "1252:105:0",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 66,
                                    "nodeType": "Block",
                                    "src": "1392:93:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "expression": {
                                                                "arguments": [
                                                                    {
                                                                        "id": 59,
                                                                        "name": "marketorContractAddress",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 26,
                                                                        "src": "1424:23:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    ],
                                                                    "id": 58,
                                                                    "name": "MoonV1Manager",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1060,
                                                                    "src": "1410:13:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_contract$_MoonV1Manager_$1060_$",
                                                                        "typeString": "type(contract MoonV1Manager)"
                                                                    }
                                                                },
                                                                "id": 60,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "1410:38:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_MoonV1Manager_$1060",
                                                                    "typeString": "contract MoonV1Manager"
                                                                }
                                                            },
                                                            "id": 61,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "ismarketManager",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1059,
                                                            "src": "1410:54:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                                                "typeString": "function () view external returns (bool)"
                                                            }
                                                        },
                                                        "id": 62,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1410:56:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 57,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "1402:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 63,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1402:65:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 64,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1402:65:0"
                                        },
                                        {
                                            "id": 65,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "1477:1:0"
                                        }
                                    ]
                                },
                                "id": 67,
                                "name": "onlyMarketManager",
                                "nameLocation": "1372:17:0",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 56,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1389:2:0"
                                },
                                "src": "1363:122:0",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "baseFunctions": [
                                    1117
                                ],
                                "body": {
                                    "id": 147,
                                    "nodeType": "Block",
                                    "src": "1835:681:0",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 82,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 76,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "1849:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 79,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 77,
                                                                "name": "_coinInfo",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 71,
                                                                "src": "1858:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                    "typeString": "struct LCoin.Info memory"
                                                                }
                                                            },
                                                            "id": 78,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "contractAddress",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1269,
                                                            "src": "1858:25:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "1849:35:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 80,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "isUsed",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1283,
                                                    "src": "1849:42:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "hexValue": "74727565",
                                                    "id": 81,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1895:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "1849:50:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "id": 145,
                                                "nodeType": "Block",
                                                "src": "2242:268:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    "id": 133,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "baseExpression": {
                                                                            "id": 125,
                                                                            "name": "marketCoinList",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 11,
                                                                            "src": "2281:14:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                                "typeString": "mapping(address => address)"
                                                                            }
                                                                        },
                                                                        "id": 128,
                                                                        "indexExpression": {
                                                                            "expression": {
                                                                                "id": 126,
                                                                                "name": "_coinInfo",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 71,
                                                                                "src": "2296:9:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                                    "typeString": "struct LCoin.Info memory"
                                                                                }
                                                                            },
                                                                            "id": 127,
                                                                            "isConstant": false,
                                                                            "isLValue": true,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "contractAddress",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 1269,
                                                                            "src": "2296:25:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        },
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "IndexAccess",
                                                                        "src": "2281:41:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "rightExpression": {
                                                                        "arguments": [
                                                                            {
                                                                                "hexValue": "30",
                                                                                "id": 131,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "2334:1:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                                    "typeString": "int_const 0"
                                                                                },
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                                    "typeString": "int_const 0"
                                                                                }
                                                                            ],
                                                                            "id": 130,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "2326:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                                "typeString": "type(address)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 129,
                                                                                "name": "address",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "2326:7:0",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        },
                                                                        "id": 132,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "typeConversion",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "2326:10:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "src": "2281:55:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e2065786973747320696e20746865206d61726b6574",
                                                                    "id": 134,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "2354:31:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2",
                                                                        "typeString": "literal_string \"the coin exists in the market\""
                                                                    },
                                                                    "value": "the coin exists in the market"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2",
                                                                        "typeString": "literal_string \"the coin exists in the market\""
                                                                    }
                                                                ],
                                                                "id": 124,
                                                                "name": "require",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                    4294967278,
                                                                    4294967278
                                                                ],
                                                                "referencedDeclaration": 4294967278,
                                                                "src": "2256:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (bool,string memory) pure"
                                                                }
                                                            },
                                                            "id": 135,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "2256:143:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 136,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2256:143:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 143,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "baseExpression": {
                                                                    "id": 137,
                                                                    "name": "marketCoinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 11,
                                                                    "src": "2413:14:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                        "typeString": "mapping(address => address)"
                                                                    }
                                                                },
                                                                "id": 140,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 138,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 71,
                                                                        "src": "2428:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 139,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1269,
                                                                    "src": "2428:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "nodeType": "IndexAccess",
                                                                "src": "2413:41:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "expression": {
                                                                    "id": 141,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 71,
                                                                    "src": "2457:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 142,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "contractAddress",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1269,
                                                                "src": "2457:42:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "2413:86:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 144,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2413:86:0"
                                                    }
                                                ]
                                            },
                                            "id": 146,
                                            "nodeType": "IfStatement",
                                            "src": "1845:665:0",
                                            "trueBody": {
                                                "id": 123,
                                                "nodeType": "Block",
                                                "src": "1901:335:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "id": 88,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 83,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 71,
                                                                    "src": "1915:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 85,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "creator",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1281,
                                                                "src": "1915:17:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "expression": {
                                                                    "id": 86,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967281,
                                                                    "src": "1935:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 87,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "src": "1935:10:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "1915:30:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 89,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "1915:30:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 94,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 90,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 71,
                                                                    "src": "1959:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 92,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "marketunlock",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1277,
                                                                "src": "1959:22:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "66616c7365",
                                                                "id": 93,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "1984:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "false"
                                                            },
                                                            "src": "1959:30:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "id": 95,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "1959:30:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 100,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 96,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 71,
                                                                    "src": "2003:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 98,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "unlock",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1279,
                                                                "src": "2003:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "66616c7365",
                                                                "id": 99,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2022:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "false"
                                                            },
                                                            "src": "2003:24:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "id": 101,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2003:24:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 106,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 102,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 71,
                                                                    "src": "2041:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 104,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "isUsed",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1283,
                                                                "src": "2041:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "74727565",
                                                                "id": 105,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2060:4:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "true"
                                                            },
                                                            "src": "2041:23:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "id": 107,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2041:23:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 113,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "baseExpression": {
                                                                    "id": 108,
                                                                    "name": "coinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 22,
                                                                    "src": "2078:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 111,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 109,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 71,
                                                                        "src": "2087:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 110,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1269,
                                                                    "src": "2087:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "nodeType": "IndexAccess",
                                                                "src": "2078:35:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                                    "typeString": "struct LCoin.Info storage ref"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "id": 112,
                                                                "name": "_coinInfo",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 71,
                                                                "src": "2116:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                    "typeString": "struct LCoin.Info memory"
                                                                }
                                                            },
                                                            "src": "2078:47:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                                "typeString": "struct LCoin.Info storage ref"
                                                            }
                                                        },
                                                        "id": 114,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2078:47:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 121,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "baseExpression": {
                                                                    "id": 115,
                                                                    "name": "marketCoinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 11,
                                                                    "src": "2139:14:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                        "typeString": "mapping(address => address)"
                                                                    }
                                                                },
                                                                "id": 118,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 116,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 71,
                                                                        "src": "2154:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 117,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1269,
                                                                    "src": "2154:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "nodeType": "IndexAccess",
                                                                "src": "2139:41:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "expression": {
                                                                    "id": 119,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 71,
                                                                    "src": "2183:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 120,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "contractAddress",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1269,
                                                                "src": "2183:42:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "2139:86:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 122,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2139:86:0"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 68,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1624:103:0",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "functionSelector": "87a70938",
                                "id": 148,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 74,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 73,
                                            "name": "onlyMarketManager",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "1813:17:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1813:17:0"
                                    }
                                ],
                                "name": "addCoinbyMarketor",
                                "nameLocation": "1741:17:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 72,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 71,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "1777:9:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 148,
                                            "src": "1759:27:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 70,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 69,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1284,
                                                    "src": "1759:10:0"
                                                },
                                                "referencedDeclaration": 1284,
                                                "src": "1759:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1284_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1758:29:0"
                                },
                                "returnParameters": {
                                    "id": 75,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1835:0:0"
                                },
                                "scope": 612,
                                "src": "1732:784:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1124
                                ],
                                "body": {
                                    "id": 164,
                                    "nodeType": "Block",
                                    "src": "2650:62:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 162,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 157,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "2660:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 159,
                                                        "indexExpression": {
                                                            "id": 158,
                                                            "name": "_internalCoinAddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 150,
                                                            "src": "2669:20:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2660:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 160,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "scope",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1261,
                                                    "src": "2660:36:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 161,
                                                    "name": "_scope",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 152,
                                                    "src": "2699:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "src": "2660:45:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "id": 163,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2660:45:0"
                                        }
                                    ]
                                },
                                "functionSelector": "5385cbf5",
                                "id": 165,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 155,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 154,
                                            "name": "onlyMarketManager",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "2632:17:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2632:17:0"
                                    }
                                ],
                                "name": "changeCoinScopebyMarketor",
                                "nameLocation": "2531:25:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 153,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 150,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "2574:20:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 165,
                                            "src": "2566:28:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 149,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2566:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 152,
                                            "mutability": "mutable",
                                            "name": "_scope",
                                            "nameLocation": "2610:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 165,
                                            "src": "2604:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            },
                                            "typeName": {
                                                "id": 151,
                                                "name": "uint8",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2604:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2556:66:0"
                                },
                                "returnParameters": {
                                    "id": 156,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2650:0:0"
                                },
                                "scope": 612,
                                "src": "2522:190:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1129
                                ],
                                "body": {
                                    "id": 179,
                                    "nodeType": "Block",
                                    "src": "2823:68:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 177,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 172,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "2833:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 174,
                                                        "indexExpression": {
                                                            "id": 173,
                                                            "name": "_internalCoinAddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 167,
                                                            "src": "2842:20:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2833:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 175,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1277,
                                                    "src": "2833:43:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 176,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2879:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "2833:51:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 178,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2833:51:0"
                                        }
                                    ]
                                },
                                "functionSelector": "b20be2b4",
                                "id": 180,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 170,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 169,
                                            "name": "onlyMarketManager",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "2801:17:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2801:17:0"
                                    }
                                ],
                                "name": "lockCoinbyMarketor",
                                "nameLocation": "2727:18:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 168,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 167,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "2754:20:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 180,
                                            "src": "2746:28:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 166,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2746:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2745:30:0"
                                },
                                "returnParameters": {
                                    "id": 171,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2823:0:0"
                                },
                                "scope": 612,
                                "src": "2718:173:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1134
                                ],
                                "body": {
                                    "id": 194,
                                    "nodeType": "Block",
                                    "src": "3004:67:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 192,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 187,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "3014:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 189,
                                                        "indexExpression": {
                                                            "id": 188,
                                                            "name": "_internalCoinAddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 182,
                                                            "src": "3023:20:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "3014:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 190,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1277,
                                                    "src": "3014:43:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 191,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3060:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "3014:50:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 193,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3014:50:0"
                                        }
                                    ]
                                },
                                "functionSelector": "1d3b8f67",
                                "id": 195,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 185,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 184,
                                            "name": "onlyMarketManager",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "2982:17:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2982:17:0"
                                    }
                                ],
                                "name": "unlockCoinbyMarketor",
                                "nameLocation": "2906:20:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 183,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 182,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "2935:20:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 195,
                                            "src": "2927:28:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 181,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2927:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2926:30:0"
                                },
                                "returnParameters": {
                                    "id": 186,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3004:0:0"
                                },
                                "scope": 612,
                                "src": "2897:174:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1140
                                ],
                                "body": {
                                    "id": 250,
                                    "nodeType": "Block",
                                    "src": "3183:318:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 212,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "baseExpression": {
                                                                "id": 204,
                                                                "name": "marketCoinList",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 11,
                                                                "src": "3201:14:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                    "typeString": "mapping(address => address)"
                                                                }
                                                            },
                                                            "id": 207,
                                                            "indexExpression": {
                                                                "expression": {
                                                                    "id": 205,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 198,
                                                                    "src": "3216:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 206,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "contractAddress",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1269,
                                                                "src": "3216:25:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "3201:41:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 210,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "3254:1:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 209,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "3246:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 208,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "3246:7:0",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 211,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3246:10:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "3201:55:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 203,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "3193:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 213,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3193:64:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 214,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3193:64:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 219,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 215,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 198,
                                                        "src": "3267:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 217,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1277,
                                                    "src": "3267:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 218,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3292:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "3267:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 220,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3267:30:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 225,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 221,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 198,
                                                        "src": "3307:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 223,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1279,
                                                    "src": "3307:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 224,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3326:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "3307:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 226,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3307:24:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 231,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 227,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 198,
                                                        "src": "3341:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 229,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "isUsed",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1283,
                                                    "src": "3341:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 230,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3360:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "3341:23:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 232,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3341:23:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 241,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 233,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 198,
                                                        "src": "3374:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 235,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "creator",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1281,
                                                    "src": "3374:17:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 236,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "3394:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 239,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 237,
                                                                "name": "_coinInfo",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 198,
                                                                "src": "3403:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                    "typeString": "struct LCoin.Info memory"
                                                                }
                                                            },
                                                            "id": 238,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "contractAddress",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1269,
                                                            "src": "3403:25:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "3394:35:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 240,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "creator",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1281,
                                                    "src": "3394:43:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "3374:63:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 242,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3374:63:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 248,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 243,
                                                        "name": "coinList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 22,
                                                        "src": "3447:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                            "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                        }
                                                    },
                                                    "id": 246,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 244,
                                                            "name": "_coinInfo",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 198,
                                                            "src": "3456:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                "typeString": "struct LCoin.Info memory"
                                                            }
                                                        },
                                                        "id": 245,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "contractAddress",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1269,
                                                        "src": "3456:25:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "3447:35:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                        "typeString": "struct LCoin.Info storage ref"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 247,
                                                    "name": "_coinInfo",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 198,
                                                    "src": "3485:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                        "typeString": "struct LCoin.Info memory"
                                                    }
                                                },
                                                "src": "3447:47:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                    "typeString": "struct LCoin.Info storage ref"
                                                }
                                            },
                                            "id": 249,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3447:47:0"
                                        }
                                    ]
                                },
                                "functionSelector": "24fd7139",
                                "id": 251,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 201,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 200,
                                            "name": "onlyMarketManager",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "3161:17:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3161:17:0"
                                    }
                                ],
                                "name": "updateCoinbyMarketor",
                                "nameLocation": "3086:20:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 199,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 198,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "3125:9:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 251,
                                            "src": "3107:27:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 197,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 196,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1284,
                                                    "src": "3107:10:0"
                                                },
                                                "referencedDeclaration": 1284,
                                                "src": "3107:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1284_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3106:29:0"
                                },
                                "returnParameters": {
                                    "id": 202,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3183:0:0"
                                },
                                "scope": 612,
                                "src": "3077:424:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1147
                                ],
                                "body": {
                                    "id": 303,
                                    "nodeType": "Block",
                                    "src": "3638:449:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 270,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "baseExpression": {
                                                                "baseExpression": {
                                                                    "id": 261,
                                                                    "name": "gateCoinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 17,
                                                                    "src": "3669:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                        "typeString": "mapping(address => mapping(address => address))"
                                                                    }
                                                                },
                                                                "id": 263,
                                                                "indexExpression": {
                                                                    "id": 262,
                                                                    "name": "_gateaddress",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 255,
                                                                    "src": "3682:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "3669:26:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                    "typeString": "mapping(address => address)"
                                                                }
                                                            },
                                                            "id": 265,
                                                            "indexExpression": {
                                                                "id": 264,
                                                                "name": "_contractaddress",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 253,
                                                                "src": "3696:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "3669:44:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 268,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "3725:1:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 267,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "3717:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 266,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "3717:7:0",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 269,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3717:10:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "3669:58:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520636f696e206973206e6f7420657869737473",
                                                        "id": 271,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3741:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        },
                                                        "value": "the coin is not exists"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        }
                                                    ],
                                                    "id": 260,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "3648:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 272,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3648:127:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 273,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3648:127:0"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 282,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "baseExpression": {
                                                                "id": 275,
                                                                "name": "marketCoinList",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 11,
                                                                "src": "3806:14:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                    "typeString": "mapping(address => address)"
                                                                }
                                                            },
                                                            "id": 277,
                                                            "indexExpression": {
                                                                "id": 276,
                                                                "name": "_contractaddress",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 253,
                                                                "src": "3821:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "3806:32:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 280,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "3850:1:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 279,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "3842:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 278,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "3842:7:0",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 281,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3842:10:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "3806:46:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520636f696e206973202065786973747320696e206d61726b6574",
                                                        "id": 283,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3866:31:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_81cb1dfb23a252b826bafd64e1a5e758717edd6cb6cf234d6b50e48a1bea516b",
                                                            "typeString": "literal_string \"the coin is  exists in market\""
                                                        },
                                                        "value": "the coin is  exists in market"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_81cb1dfb23a252b826bafd64e1a5e758717edd6cb6cf234d6b50e48a1bea516b",
                                                            "typeString": "literal_string \"the coin is  exists in market\""
                                                        }
                                                    ],
                                                    "id": 274,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "3785:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 284,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3785:122:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 285,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3785:122:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 294,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 286,
                                                        "name": "marketCoinList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 11,
                                                        "src": "3917:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                            "typeString": "mapping(address => address)"
                                                        }
                                                    },
                                                    "id": 288,
                                                    "indexExpression": {
                                                        "id": 287,
                                                        "name": "_contractaddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 253,
                                                        "src": "3932:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "3917:32:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "baseExpression": {
                                                        "baseExpression": {
                                                            "id": 289,
                                                            "name": "gateCoinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 17,
                                                            "src": "3952:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                "typeString": "mapping(address => mapping(address => address))"
                                                            }
                                                        },
                                                        "id": 291,
                                                        "indexExpression": {
                                                            "id": 290,
                                                            "name": "_gateaddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 255,
                                                            "src": "3965:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "3952:26:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                            "typeString": "mapping(address => address)"
                                                        }
                                                    },
                                                    "id": 293,
                                                    "indexExpression": {
                                                        "id": 292,
                                                        "name": "_contractaddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 253,
                                                        "src": "3992:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "3952:66:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "3917:101:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 295,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3917:101:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 301,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "delete",
                                                "prefix": true,
                                                "src": "4029:51:0",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "baseExpression": {
                                                            "id": 296,
                                                            "name": "gateCoinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 17,
                                                            "src": "4036:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                "typeString": "mapping(address => mapping(address => address))"
                                                            }
                                                        },
                                                        "id": 298,
                                                        "indexExpression": {
                                                            "id": 297,
                                                            "name": "_gateaddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 255,
                                                            "src": "4049:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "4036:26:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                            "typeString": "mapping(address => address)"
                                                        }
                                                    },
                                                    "id": 300,
                                                    "indexExpression": {
                                                        "id": 299,
                                                        "name": "_contractaddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 253,
                                                        "src": "4063:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "4036:44:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 302,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4029:51:0"
                                        }
                                    ]
                                },
                                "functionSelector": "cfcdca52",
                                "id": 304,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 258,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 257,
                                            "name": "onlyMarketManager",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "3620:17:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3620:17:0"
                                    }
                                ],
                                "name": "impoveGateCoinbyMarketor",
                                "nameLocation": "3516:24:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 256,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 253,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "3558:16:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 304,
                                            "src": "3550:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 252,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3550:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 255,
                                            "mutability": "mutable",
                                            "name": "_gateaddress",
                                            "nameLocation": "3592:12:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 304,
                                            "src": "3584:20:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 254,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3584:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3540:70:0"
                                },
                                "returnParameters": {
                                    "id": 259,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3638:0:0"
                                },
                                "scope": 612,
                                "src": "3507:580:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1152
                                ],
                                "body": {
                                    "id": 328,
                                    "nodeType": "Block",
                                    "src": "4193:181:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 319,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "baseExpression": {
                                                                "id": 312,
                                                                "name": "marketCoinList",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 11,
                                                                "src": "4224:14:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                    "typeString": "mapping(address => address)"
                                                                }
                                                            },
                                                            "id": 314,
                                                            "indexExpression": {
                                                                "id": 313,
                                                                "name": "_contractaddress",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 306,
                                                                "src": "4239:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "4224:32:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 317,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "4268:1:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 316,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "4260:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 315,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "4260:7:0",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 318,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4260:10:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "4224:46:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520636f696e206973206e6f7420657869737473",
                                                        "id": 320,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "4284:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        },
                                                        "value": "the coin is not exists"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        }
                                                    ],
                                                    "id": 311,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "4203:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 321,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4203:115:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 322,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4203:115:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 326,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "delete",
                                                "prefix": true,
                                                "src": "4328:39:0",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "id": 323,
                                                        "name": "marketCoinList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 11,
                                                        "src": "4335:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                            "typeString": "mapping(address => address)"
                                                        }
                                                    },
                                                    "id": 325,
                                                    "indexExpression": {
                                                        "id": 324,
                                                        "name": "_contractaddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 306,
                                                        "src": "4350:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "4335:32:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 327,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4328:39:0"
                                        }
                                    ]
                                },
                                "functionSelector": "7c3e2f02",
                                "id": 329,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 309,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 308,
                                            "name": "onlyMarketManager",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "4171:17:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "4171:17:0"
                                    }
                                ],
                                "name": "delCoinbyMarketor",
                                "nameLocation": "4102:17:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 307,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 306,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "4128:16:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 329,
                                            "src": "4120:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 305,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4120:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4119:26:0"
                                },
                                "returnParameters": {
                                    "id": 310,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4193:0:0"
                                },
                                "scope": 612,
                                "src": "4093:281:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1159
                                ],
                                "body": {
                                    "id": 359,
                                    "nodeType": "Block",
                                    "src": "4508:205:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 348,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "baseExpression": {
                                                                "baseExpression": {
                                                                    "id": 339,
                                                                    "name": "gateCoinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 17,
                                                                    "src": "4539:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                        "typeString": "mapping(address => mapping(address => address))"
                                                                    }
                                                                },
                                                                "id": 341,
                                                                "indexExpression": {
                                                                    "id": 340,
                                                                    "name": "_gateaddress",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 333,
                                                                    "src": "4552:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "4539:26:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                    "typeString": "mapping(address => address)"
                                                                }
                                                            },
                                                            "id": 343,
                                                            "indexExpression": {
                                                                "id": 342,
                                                                "name": "_contractaddress",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 331,
                                                                "src": "4566:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "4539:44:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 346,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "4595:1:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 345,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "4587:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 344,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "4587:7:0",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 347,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4587:10:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "4539:58:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520636f696e206973206e6f7420657869737473",
                                                        "id": 349,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "4611:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        },
                                                        "value": "the coin is not exists"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        }
                                                    ],
                                                    "id": 338,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "4518:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 350,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4518:127:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 351,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4518:127:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 357,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "delete",
                                                "prefix": true,
                                                "src": "4655:51:0",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "baseExpression": {
                                                            "id": 352,
                                                            "name": "gateCoinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 17,
                                                            "src": "4662:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                "typeString": "mapping(address => mapping(address => address))"
                                                            }
                                                        },
                                                        "id": 354,
                                                        "indexExpression": {
                                                            "id": 353,
                                                            "name": "_gateaddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 333,
                                                            "src": "4675:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "4662:26:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                            "typeString": "mapping(address => address)"
                                                        }
                                                    },
                                                    "id": 356,
                                                    "indexExpression": {
                                                        "id": 355,
                                                        "name": "_contractaddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 331,
                                                        "src": "4689:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "4662:44:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 358,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4655:51:0"
                                        }
                                    ]
                                },
                                "functionSelector": "eaec0112",
                                "id": 360,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 336,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 335,
                                            "name": "onlyMarketManager",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "4490:17:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "4490:17:0"
                                    }
                                ],
                                "name": "delGateCoinbyMarketor",
                                "nameLocation": "4389:21:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 334,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 331,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "4428:16:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 360,
                                            "src": "4420:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 330,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4420:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 333,
                                            "mutability": "mutable",
                                            "name": "_gateaddress",
                                            "nameLocation": "4462:12:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 360,
                                            "src": "4454:20:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 332,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4454:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4410:70:0"
                                },
                                "returnParameters": {
                                    "id": 337,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4508:0:0"
                                },
                                "scope": 612,
                                "src": "4380:333:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1074
                                ],
                                "body": {
                                    "id": 461,
                                    "nodeType": "Block",
                                    "src": "4923:886:0",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 374,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 368,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "4937:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 371,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 369,
                                                                "name": "_coinInfo",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 363,
                                                                "src": "4946:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                    "typeString": "struct LCoin.Info memory"
                                                                }
                                                            },
                                                            "id": 370,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "contractAddress",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1269,
                                                            "src": "4946:25:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "4937:35:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 372,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "isUsed",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1283,
                                                    "src": "4937:42:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "hexValue": "74727565",
                                                    "id": 373,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "4983:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "4937:50:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "id": 459,
                                                "nodeType": "Block",
                                                "src": "5340:463:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    "id": 428,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "baseExpression": {
                                                                            "id": 420,
                                                                            "name": "marketCoinList",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 11,
                                                                            "src": "5379:14:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                                "typeString": "mapping(address => address)"
                                                                            }
                                                                        },
                                                                        "id": 423,
                                                                        "indexExpression": {
                                                                            "expression": {
                                                                                "id": 421,
                                                                                "name": "_coinInfo",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 363,
                                                                                "src": "5394:9:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                                    "typeString": "struct LCoin.Info memory"
                                                                                }
                                                                            },
                                                                            "id": 422,
                                                                            "isConstant": false,
                                                                            "isLValue": true,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "contractAddress",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 1269,
                                                                            "src": "5394:25:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        },
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "IndexAccess",
                                                                        "src": "5379:41:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "rightExpression": {
                                                                        "arguments": [
                                                                            {
                                                                                "hexValue": "30",
                                                                                "id": 426,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "5432:1:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                                    "typeString": "int_const 0"
                                                                                },
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                                    "typeString": "int_const 0"
                                                                                }
                                                                            ],
                                                                            "id": 425,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "5424:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                                "typeString": "type(address)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 424,
                                                                                "name": "address",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "5424:7:0",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        },
                                                                        "id": 427,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "typeConversion",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "5424:10:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "src": "5379:55:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e2065786973747320696e20746865206d61726b6574",
                                                                    "id": 429,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "5452:31:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2",
                                                                        "typeString": "literal_string \"the coin exists in the market\""
                                                                    },
                                                                    "value": "the coin exists in the market"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2",
                                                                        "typeString": "literal_string \"the coin exists in the market\""
                                                                    }
                                                                ],
                                                                "id": 419,
                                                                "name": "require",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                    4294967278,
                                                                    4294967278
                                                                ],
                                                                "referencedDeclaration": 4294967278,
                                                                "src": "5354:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (bool,string memory) pure"
                                                                }
                                                            },
                                                            "id": 430,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "5354:143:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 431,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5354:143:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    "id": 444,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "baseExpression": {
                                                                            "baseExpression": {
                                                                                "id": 433,
                                                                                "name": "gateCoinList",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 17,
                                                                                "src": "5536:12:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                                    "typeString": "mapping(address => mapping(address => address))"
                                                                                }
                                                                            },
                                                                            "id": 436,
                                                                            "indexExpression": {
                                                                                "expression": {
                                                                                    "id": 434,
                                                                                    "name": "msg",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 4294967281,
                                                                                    "src": "5549:3:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_magic_message",
                                                                                        "typeString": "msg"
                                                                                    }
                                                                                },
                                                                                "id": 435,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "memberName": "sender",
                                                                                "nodeType": "MemberAccess",
                                                                                "src": "5549:10:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_address",
                                                                                    "typeString": "address"
                                                                                }
                                                                            },
                                                                            "isConstant": false,
                                                                            "isLValue": true,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "IndexAccess",
                                                                            "src": "5536:24:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                                "typeString": "mapping(address => address)"
                                                                            }
                                                                        },
                                                                        "id": 439,
                                                                        "indexExpression": {
                                                                            "expression": {
                                                                                "id": 437,
                                                                                "name": "_coinInfo",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 363,
                                                                                "src": "5561:9:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                                    "typeString": "struct LCoin.Info memory"
                                                                                }
                                                                            },
                                                                            "id": 438,
                                                                            "isConstant": false,
                                                                            "isLValue": true,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "contractAddress",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 1269,
                                                                            "src": "5561:25:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        },
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "IndexAccess",
                                                                        "src": "5536:51:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "rightExpression": {
                                                                        "arguments": [
                                                                            {
                                                                                "hexValue": "30",
                                                                                "id": 442,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "5619:1:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                                    "typeString": "int_const 0"
                                                                                },
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                                    "typeString": "int_const 0"
                                                                                }
                                                                            ],
                                                                            "id": 441,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "5611:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                                "typeString": "type(address)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 440,
                                                                                "name": "address",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "5611:7:0",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        },
                                                                        "id": 443,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "typeConversion",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "5611:10:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "src": "5536:85:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e2065786973747320696e207468652067617465",
                                                                    "id": 445,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "5639:29:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_55b5ab3acaf98f73f24e340e3fce4376f33427349016b0431ff2c4efa932d18e",
                                                                        "typeString": "literal_string \"the coin exists in the gate\""
                                                                    },
                                                                    "value": "the coin exists in the gate"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_55b5ab3acaf98f73f24e340e3fce4376f33427349016b0431ff2c4efa932d18e",
                                                                        "typeString": "literal_string \"the coin exists in the gate\""
                                                                    }
                                                                ],
                                                                "id": 432,
                                                                "name": "require",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                    4294967278,
                                                                    4294967278
                                                                ],
                                                                "referencedDeclaration": 4294967278,
                                                                "src": "5511:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (bool,string memory) pure"
                                                                }
                                                            },
                                                            "id": 446,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "5511:171:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 447,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5511:171:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 457,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "baseExpression": {
                                                                    "baseExpression": {
                                                                        "id": 448,
                                                                        "name": "gateCoinList",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 17,
                                                                        "src": "5696:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                            "typeString": "mapping(address => mapping(address => address))"
                                                                        }
                                                                    },
                                                                    "id": 453,
                                                                    "indexExpression": {
                                                                        "expression": {
                                                                            "id": 449,
                                                                            "name": "msg",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 4294967281,
                                                                            "src": "5709:3:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_magic_message",
                                                                                "typeString": "msg"
                                                                            }
                                                                        },
                                                                        "id": 450,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "sender",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "5709:10:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "5696:24:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                        "typeString": "mapping(address => address)"
                                                                    }
                                                                },
                                                                "id": 454,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 451,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 363,
                                                                        "src": "5721:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 452,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1269,
                                                                    "src": "5721:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "nodeType": "IndexAccess",
                                                                "src": "5696:51:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "expression": {
                                                                    "id": 455,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 363,
                                                                    "src": "5750:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 456,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "contractAddress",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1269,
                                                                "src": "5750:42:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "5696:96:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 458,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5696:96:0"
                                                    }
                                                ]
                                            },
                                            "id": 460,
                                            "nodeType": "IfStatement",
                                            "src": "4933:870:0",
                                            "trueBody": {
                                                "id": 418,
                                                "nodeType": "Block",
                                                "src": "4989:345:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "id": 380,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 375,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 363,
                                                                    "src": "5003:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 377,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "creator",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1281,
                                                                "src": "5003:17:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "expression": {
                                                                    "id": 378,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967281,
                                                                    "src": "5023:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 379,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "src": "5023:10:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "5003:30:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 381,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5003:30:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 386,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 382,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 363,
                                                                    "src": "5047:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 384,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "marketunlock",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1277,
                                                                "src": "5047:22:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "66616c7365",
                                                                "id": 385,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "5072:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "false"
                                                            },
                                                            "src": "5047:30:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "id": 387,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5047:30:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 392,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 388,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 363,
                                                                    "src": "5091:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 390,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "unlock",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1279,
                                                                "src": "5091:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "66616c7365",
                                                                "id": 391,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "5110:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "false"
                                                            },
                                                            "src": "5091:24:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "id": 393,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5091:24:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 398,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 394,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 363,
                                                                    "src": "5129:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 396,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "isUsed",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1283,
                                                                "src": "5129:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "74727565",
                                                                "id": 397,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "5148:4:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "true"
                                                            },
                                                            "src": "5129:23:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "id": 399,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5129:23:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 405,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "baseExpression": {
                                                                    "id": 400,
                                                                    "name": "coinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 22,
                                                                    "src": "5166:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 403,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 401,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 363,
                                                                        "src": "5175:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 402,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1269,
                                                                    "src": "5175:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "nodeType": "IndexAccess",
                                                                "src": "5166:35:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                                    "typeString": "struct LCoin.Info storage ref"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "id": 404,
                                                                "name": "_coinInfo",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 363,
                                                                "src": "5204:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                    "typeString": "struct LCoin.Info memory"
                                                                }
                                                            },
                                                            "src": "5166:47:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                                "typeString": "struct LCoin.Info storage ref"
                                                            }
                                                        },
                                                        "id": 406,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5166:47:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 416,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "baseExpression": {
                                                                    "baseExpression": {
                                                                        "id": 407,
                                                                        "name": "gateCoinList",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 17,
                                                                        "src": "5227:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                            "typeString": "mapping(address => mapping(address => address))"
                                                                        }
                                                                    },
                                                                    "id": 412,
                                                                    "indexExpression": {
                                                                        "expression": {
                                                                            "id": 408,
                                                                            "name": "msg",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 4294967281,
                                                                            "src": "5240:3:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_magic_message",
                                                                                "typeString": "msg"
                                                                            }
                                                                        },
                                                                        "id": 409,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "sender",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "5240:10:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "5227:24:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                        "typeString": "mapping(address => address)"
                                                                    }
                                                                },
                                                                "id": 413,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 410,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 363,
                                                                        "src": "5252:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 411,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1269,
                                                                    "src": "5252:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "nodeType": "IndexAccess",
                                                                "src": "5227:51:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "expression": {
                                                                    "id": 414,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 363,
                                                                    "src": "5281:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 415,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "contractAddress",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1269,
                                                                "src": "5281:42:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "5227:96:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 417,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5227:96:0"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "functionSelector": "e911abec",
                                "id": 462,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 366,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 365,
                                            "name": "onlyGator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 55,
                                            "src": "4913:9:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "4913:9:0"
                                    }
                                ],
                                "name": "addCoinbyGator",
                                "nameLocation": "4860:14:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 364,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 363,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "4893:9:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 462,
                                            "src": "4875:27:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 362,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 361,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1284,
                                                    "src": "4875:10:0"
                                                },
                                                "referencedDeclaration": 1284,
                                                "src": "4875:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1284_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4874:29:0"
                                },
                                "returnParameters": {
                                    "id": 367,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4923:0:0"
                                },
                                "scope": 612,
                                "src": "4851:958:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1079
                                ],
                                "body": {
                                    "id": 487,
                                    "nodeType": "Block",
                                    "src": "5911:192:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 476,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 470,
                                                                    "name": "coinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 22,
                                                                    "src": "5942:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 472,
                                                                "indexExpression": {
                                                                    "id": 471,
                                                                    "name": "_internalCoinAddress",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 464,
                                                                    "src": "5951:20:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "5942:30:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                                    "typeString": "struct LCoin.Info storage ref"
                                                                }
                                                            },
                                                            "id": 473,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "creator",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1281,
                                                            "src": "5942:38:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 474,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "5984:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 475,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "5984:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "5942:52:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "796f752068617665206e6f7420746865207269676874",
                                                        "id": 477,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6008:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed",
                                                            "typeString": "literal_string \"you have not the right\""
                                                        },
                                                        "value": "you have not the right"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed",
                                                            "typeString": "literal_string \"you have not the right\""
                                                        }
                                                    ],
                                                    "id": 469,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "5921:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 478,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5921:121:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 479,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5921:121:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 485,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 480,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "6052:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 482,
                                                        "indexExpression": {
                                                            "id": 481,
                                                            "name": "_internalCoinAddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 464,
                                                            "src": "6061:20:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "6052:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 483,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1279,
                                                    "src": "6052:37:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 484,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6092:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "6052:44:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 486,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6052:44:0"
                                        }
                                    ]
                                },
                                "functionSelector": "385e4b7a",
                                "id": 488,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 467,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 466,
                                            "name": "onlyGator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 55,
                                            "src": "5897:9:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "5897:9:0"
                                    }
                                ],
                                "name": "unlockCoinbyGator",
                                "nameLocation": "5824:17:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 465,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 464,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "5850:20:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 488,
                                            "src": "5842:28:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 463,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5842:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5841:30:0"
                                },
                                "returnParameters": {
                                    "id": 468,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5911:0:0"
                                },
                                "scope": 612,
                                "src": "5815:288:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1084
                                ],
                                "body": {
                                    "id": 513,
                                    "nodeType": "Block",
                                    "src": "6183:193:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 502,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 496,
                                                                    "name": "coinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 22,
                                                                    "src": "6214:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 498,
                                                                "indexExpression": {
                                                                    "id": 497,
                                                                    "name": "_internalCoinAddress",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 490,
                                                                    "src": "6223:20:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "6214:30:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                                    "typeString": "struct LCoin.Info storage ref"
                                                                }
                                                            },
                                                            "id": 499,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "creator",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1281,
                                                            "src": "6214:38:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 500,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "6256:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 501,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "6256:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "6214:52:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "796f752068617665206e6f7420746865207269676874",
                                                        "id": 503,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6280:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed",
                                                            "typeString": "literal_string \"you have not the right\""
                                                        },
                                                        "value": "you have not the right"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed",
                                                            "typeString": "literal_string \"you have not the right\""
                                                        }
                                                    ],
                                                    "id": 495,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "6193:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 504,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6193:121:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 505,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6193:121:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 511,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 506,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "6324:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 508,
                                                        "indexExpression": {
                                                            "id": 507,
                                                            "name": "_internalCoinAddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 490,
                                                            "src": "6333:20:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "6324:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 509,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1279,
                                                    "src": "6324:37:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 510,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6364:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "6324:45:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 512,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6324:45:0"
                                        }
                                    ]
                                },
                                "functionSelector": "441eb548",
                                "id": 514,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 493,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 492,
                                            "name": "onlyGator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 55,
                                            "src": "6173:9:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "6173:9:0"
                                    }
                                ],
                                "name": "lockCoinbyGator",
                                "nameLocation": "6118:15:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 491,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 490,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "6142:20:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 514,
                                            "src": "6134:28:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 489,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6134:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6133:30:0"
                                },
                                "returnParameters": {
                                    "id": 494,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "6183:0:0"
                                },
                                "scope": 612,
                                "src": "6109:267:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1090
                                ],
                                "body": {
                                    "id": 574,
                                    "nodeType": "Block",
                                    "src": "6457:422:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 530,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 523,
                                                                    "name": "coinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 22,
                                                                    "src": "6488:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 526,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 524,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 517,
                                                                        "src": "6497:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 525,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1269,
                                                                    "src": "6497:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "6488:35:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                                    "typeString": "struct LCoin.Info storage ref"
                                                                }
                                                            },
                                                            "id": 527,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "creator",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1281,
                                                            "src": "6488:43:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 528,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "6535:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 529,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "6535:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "6488:57:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "796f752068617665206e6f7420746865207269676874",
                                                        "id": 531,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6559:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed",
                                                            "typeString": "literal_string \"you have not the right\""
                                                        },
                                                        "value": "you have not the right"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed",
                                                            "typeString": "literal_string \"you have not the right\""
                                                        }
                                                    ],
                                                    "id": 522,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "6467:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 532,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6467:126:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 533,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6467:126:0"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        },
                                                        "id": 538,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 535,
                                                                "name": "_coinInfo",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 517,
                                                                "src": "6611:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                    "typeString": "struct LCoin.Info memory"
                                                                }
                                                            },
                                                            "id": 536,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "scope",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1261,
                                                            "src": "6611:15:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "34",
                                                            "id": 537,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "6630:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_4_by_1",
                                                                "typeString": "int_const 4"
                                                            },
                                                            "value": "4"
                                                        },
                                                        "src": "6611:20:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520636f696e2073636f7065206973206e6f74206a757374696669656420",
                                                        "id": 539,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6633:34:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_d35edcbfadff3d182421fe87d6d101d172666bcdd07b46d70b2a94d2cce5545f",
                                                            "typeString": "literal_string \"the coin scope is not justified \""
                                                        },
                                                        "value": "the coin scope is not justified "
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_d35edcbfadff3d182421fe87d6d101d172666bcdd07b46d70b2a94d2cce5545f",
                                                            "typeString": "literal_string \"the coin scope is not justified \""
                                                        }
                                                    ],
                                                    "id": 534,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "6603:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 540,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6603:65:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 541,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6603:65:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 546,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 542,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 517,
                                                        "src": "6678:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 544,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1277,
                                                    "src": "6678:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 545,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6703:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "6678:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 547,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6678:30:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 552,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 548,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 517,
                                                        "src": "6718:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 550,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1279,
                                                    "src": "6718:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 551,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6737:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "6718:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 553,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6718:24:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 558,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 554,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 517,
                                                        "src": "6752:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 556,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "isUsed",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1283,
                                                    "src": "6752:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 557,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6771:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "6752:23:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 559,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6752:23:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 565,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 560,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 517,
                                                        "src": "6785:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 562,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "creator",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1281,
                                                    "src": "6785:17:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "expression": {
                                                        "id": 563,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "6805:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 564,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "6805:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "6785:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 566,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6785:30:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 572,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 567,
                                                        "name": "coinList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 22,
                                                        "src": "6825:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                            "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                        }
                                                    },
                                                    "id": 570,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 568,
                                                            "name": "_coinInfo",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 517,
                                                            "src": "6834:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                                "typeString": "struct LCoin.Info memory"
                                                            }
                                                        },
                                                        "id": 569,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "contractAddress",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1269,
                                                        "src": "6834:25:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "6825:35:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                        "typeString": "struct LCoin.Info storage ref"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 571,
                                                    "name": "_coinInfo",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 517,
                                                    "src": "6863:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                        "typeString": "struct LCoin.Info memory"
                                                    }
                                                },
                                                "src": "6825:47:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                    "typeString": "struct LCoin.Info storage ref"
                                                }
                                            },
                                            "id": 573,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6825:47:0"
                                        }
                                    ]
                                },
                                "functionSelector": "a935b6af",
                                "id": 575,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 520,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 519,
                                            "name": "onlyGator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 55,
                                            "src": "6447:9:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "6447:9:0"
                                    }
                                ],
                                "name": "updateCoinbyGator",
                                "nameLocation": "6391:17:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 518,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 517,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "6427:9:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 575,
                                            "src": "6409:27:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 516,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 515,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1284,
                                                    "src": "6409:10:0"
                                                },
                                                "referencedDeclaration": 1284,
                                                "src": "6409:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1284_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6408:29:0"
                                },
                                "returnParameters": {
                                    "id": 521,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "6457:0:0"
                                },
                                "scope": 612,
                                "src": "6382:497:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1172
                                ],
                                "body": {
                                    "id": 597,
                                    "nodeType": "Block",
                                    "src": "7002:170:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 589,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 584,
                                                                    "name": "coinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 22,
                                                                    "src": "7033:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 586,
                                                                "indexExpression": {
                                                                    "id": 585,
                                                                    "name": "_contractaddress",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 577,
                                                                    "src": "7042:16:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "7033:26:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                                    "typeString": "struct LCoin.Info storage ref"
                                                                }
                                                            },
                                                            "id": 587,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isUsed",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1283,
                                                            "src": "7033:33:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "74727565",
                                                            "id": 588,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "7070:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "src": "7033:41:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520636f696e206973206e6f7420657869737473",
                                                        "id": 590,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "7088:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        },
                                                        "value": "the coin is not exists"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        }
                                                    ],
                                                    "id": 583,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "7012:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 591,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7012:110:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 592,
                                            "nodeType": "ExpressionStatement",
                                            "src": "7012:110:0"
                                        },
                                        {
                                            "expression": {
                                                "baseExpression": {
                                                    "id": 593,
                                                    "name": "coinList",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 22,
                                                    "src": "7139:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                    }
                                                },
                                                "id": 595,
                                                "indexExpression": {
                                                    "id": 594,
                                                    "name": "_contractaddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 577,
                                                    "src": "7148:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "7139:26:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                    "typeString": "struct LCoin.Info storage ref"
                                                }
                                            },
                                            "functionReturnParameters": 582,
                                            "id": 596,
                                            "nodeType": "Return",
                                            "src": "7132:33:0"
                                        }
                                    ]
                                },
                                "functionSelector": "e8dd4655",
                                "id": 598,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getCoinInfo",
                                "nameLocation": "6894:11:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 578,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 577,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "6914:16:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 598,
                                            "src": "6906:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 576,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6906:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6905:26:0"
                                },
                                "returnParameters": {
                                    "id": 582,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 581,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 598,
                                            "src": "6979:17:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 580,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 579,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1284,
                                                    "src": "6979:10:0"
                                                },
                                                "referencedDeclaration": 1284,
                                                "src": "6979:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1284_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6978:19:0"
                                },
                                "scope": 612,
                                "src": "6885:287:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 610,
                                    "nodeType": "Block",
                                    "src": "7248:59:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "expression": {
                                                    "baseExpression": {
                                                        "id": 605,
                                                        "name": "coinList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 22,
                                                        "src": "7265:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1284_storage_$",
                                                            "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                        }
                                                    },
                                                    "id": 607,
                                                    "indexExpression": {
                                                        "id": 606,
                                                        "name": "_coinAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 600,
                                                        "src": "7274:12:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "7265:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$1284_storage",
                                                        "typeString": "struct LCoin.Info storage ref"
                                                    }
                                                },
                                                "id": 608,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "marketunlock",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1277,
                                                "src": "7265:35:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 604,
                                            "id": 609,
                                            "nodeType": "Return",
                                            "src": "7258:42:0"
                                        }
                                    ]
                                },
                                "functionSelector": "328320bf",
                                "id": 611,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isValidCoin",
                                "nameLocation": "7187:11:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 601,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 600,
                                            "mutability": "mutable",
                                            "name": "_coinAddress",
                                            "nameLocation": "7207:12:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 611,
                                            "src": "7199:20:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 599,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7199:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "7198:22:0"
                                },
                                "returnParameters": {
                                    "id": 604,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 603,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 611,
                                            "src": "7242:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 602,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7242:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "7241:6:0"
                                },
                                "scope": 612,
                                "src": "7178:129:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            }
                        ],
                        "scope": 613,
                        "src": "206:7103:0",
                        "usedErrors": []
                    }
                ],
                "src": "45:7265:0"
            },
            "id": 0
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Gater.sol",
                "exportedSymbols": {
                    "IManagerV1Events": [
                        1212
                    ],
                    "IManagerV1Immutables": [
                        1222
                    ],
                    "IManagerV1MarketCreatorActions": [
                        1240
                    ],
                    "IManagerV1State": [
                        1253
                    ],
                    "IMoonV1Manager": [
                        1208
                    ],
                    "LCoin": [
                        1285
                    ],
                    "LCustomer": [
                        1307
                    ],
                    "LGate": [
                        1333
                    ],
                    "LSTThings": [
                        1361
                    ],
                    "MoonV1Gater": [
                        969
                    ],
                    "MoonV1Manager": [
                        1060
                    ]
                },
                "id": 970,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 614,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:1"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol",
                        "file": "./libraries/base/LGate.sol",
                        "id": 615,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 970,
                        "sourceUnit": 1334,
                        "src": "70:36:1",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Manager.sol",
                        "file": "./MoonV1Manager.sol",
                        "id": 616,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 970,
                        "sourceUnit": 1061,
                        "src": "107:29:1",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "MoonV1Gater",
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 969,
                        "linearizedBaseContracts": [
                            969
                        ],
                        "name": "MoonV1Gater",
                        "nameLocation": "147:11:1",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "functionSelector": "45df4987",
                                "id": 621,
                                "mutability": "mutable",
                                "name": "gateList",
                                "nameLocation": "244:8:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 969,
                                "src": "206:46:1",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                    "typeString": "mapping(address => struct LGate.Info)"
                                },
                                "typeName": {
                                    "id": 620,
                                    "keyType": {
                                        "id": 617,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "214:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "206:30:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                        "typeString": "mapping(address => struct LGate.Info)"
                                    },
                                    "valueType": {
                                        "id": 619,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 618,
                                            "name": "LGate.Info",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 1332,
                                            "src": "225:10:1"
                                        },
                                        "referencedDeclaration": 1332,
                                        "src": "225:10:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Info_$1332_storage_ptr",
                                            "typeString": "struct LGate.Info"
                                        }
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "3087cbe3",
                                "id": 623,
                                "mutability": "mutable",
                                "name": "marketContractAddress",
                                "nameLocation": "274:21:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 969,
                                "src": "259:36:1",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 622,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "259:7:1",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "492b7107",
                                "id": 625,
                                "mutability": "mutable",
                                "name": "marketorContractAddress",
                                "nameLocation": "316:23:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 969,
                                "src": "301:38:1",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 624,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "301:7:1",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 640,
                                    "nodeType": "Block",
                                    "src": "446:123:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 634,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 632,
                                                    "name": "marketContractAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 623,
                                                    "src": "456:21:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 633,
                                                    "name": "_marketContractAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 627,
                                                    "src": "480:22:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "456:46:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 635,
                                            "nodeType": "ExpressionStatement",
                                            "src": "456:46:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 638,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 636,
                                                    "name": "marketorContractAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 625,
                                                    "src": "512:23:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 637,
                                                    "name": "_marketorContractAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 629,
                                                    "src": "538:24:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "512:50:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 639,
                                            "nodeType": "ExpressionStatement",
                                            "src": "512:50:1"
                                        }
                                    ]
                                },
                                "id": 641,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nameLocation": "-1:-1:-1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 630,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 627,
                                            "mutability": "mutable",
                                            "name": "_marketContractAddress",
                                            "nameLocation": "375:22:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 641,
                                            "src": "367:30:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 626,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "367:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 629,
                                            "mutability": "mutable",
                                            "name": "_marketorContractAddress",
                                            "nameLocation": "415:24:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 641,
                                            "src": "407:32:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 628,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "407:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "357:88:1"
                                },
                                "returnParameters": {
                                    "id": 631,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "446:0:1"
                                },
                                "scope": 969,
                                "src": "346:223:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 655,
                                    "nodeType": "Block",
                                    "src": "704:78:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 651,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 645,
                                                                    "name": "gateList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 621,
                                                                    "src": "722:8:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                        "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 648,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 646,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 4294967281,
                                                                        "src": "731:3:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 647,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "731:10:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "722:20:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                                    "typeString": "struct LGate.Info storage ref"
                                                                }
                                                            },
                                                            "id": 649,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "marketunlock",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1327,
                                                            "src": "722:33:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "74727565",
                                                            "id": 650,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "759:4:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "src": "722:41:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 644,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "714:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 652,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "714:50:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 653,
                                            "nodeType": "ExpressionStatement",
                                            "src": "714:50:1"
                                        },
                                        {
                                            "id": 654,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "774:1:1"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 642,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "575:103:1",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "id": 656,
                                "name": "onlyGator",
                                "nameLocation": "692:9:1",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 643,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "701:2:1"
                                },
                                "src": "683:99:1",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 670,
                                    "nodeType": "Block",
                                    "src": "926:123:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 666,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "expression": {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 661,
                                                                            "name": "marketorContractAddress",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 625,
                                                                            "src": "971:23:1",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        ],
                                                                        "id": 660,
                                                                        "name": "MoonV1Manager",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1060,
                                                                        "src": "957:13:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_MoonV1Manager_$1060_$",
                                                                            "typeString": "type(contract MoonV1Manager)"
                                                                        }
                                                                    },
                                                                    "id": 662,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "957:38:1",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_MoonV1Manager_$1060",
                                                                        "typeString": "contract MoonV1Manager"
                                                                    }
                                                                },
                                                                "id": 663,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "ismarketManager",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1059,
                                                                "src": "957:54:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                                                    "typeString": "function () view external returns (bool)"
                                                                }
                                                            },
                                                            "id": 664,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "957:56:1",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "74727565",
                                                            "id": 665,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1017:4:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "src": "957:64:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 659,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "936:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 667,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "936:95:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 668,
                                            "nodeType": "ExpressionStatement",
                                            "src": "936:95:1"
                                        },
                                        {
                                            "id": 669,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "1041:1:1"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 657,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "788:104:1",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "id": 671,
                                "name": "onlyMarketManager",
                                "nameLocation": "906:17:1",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 658,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "923:2:1"
                                },
                                "src": "897:152:1",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 695,
                                    "nodeType": "Block",
                                    "src": "1299:176:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 684,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 679,
                                                                    "name": "gateList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 621,
                                                                    "src": "1330:8:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                        "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 681,
                                                                "indexExpression": {
                                                                    "id": 680,
                                                                    "name": "_gateraddress",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 673,
                                                                    "src": "1339:13:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "1330:23:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                                    "typeString": "struct LGate.Info storage ref"
                                                                }
                                                            },
                                                            "id": 682,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isUsed",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1331,
                                                            "src": "1330:30:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "74727565",
                                                            "id": 683,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1364:4:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "src": "1330:38:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "7468652067617465722069736e6f74206578697374",
                                                        "id": 685,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1382:23:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_e5f5b1c469e73fdd536d3170ec5aa83949a0dbb5b35f9fb280b5ba6c579e799c",
                                                            "typeString": "literal_string \"the gater isnot exist\""
                                                        },
                                                        "value": "the gater isnot exist"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_e5f5b1c469e73fdd536d3170ec5aa83949a0dbb5b35f9fb280b5ba6c579e799c",
                                                            "typeString": "literal_string \"the gater isnot exist\""
                                                        }
                                                    ],
                                                    "id": 678,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "1309:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 686,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1309:106:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 687,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1309:106:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 693,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 688,
                                                            "name": "gateList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 621,
                                                            "src": "1425:8:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 690,
                                                        "indexExpression": {
                                                            "id": 689,
                                                            "name": "_gateraddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 673,
                                                            "src": "1434:13:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "1425:23:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                            "typeString": "struct LGate.Info storage ref"
                                                        }
                                                    },
                                                    "id": 691,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1327,
                                                    "src": "1425:36:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 692,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1464:4:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "1425:43:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 694,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1425:43:1"
                                        }
                                    ]
                                },
                                "functionSelector": "a4786088",
                                "id": 696,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 676,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 675,
                                            "name": "onlyMarketManager",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 671,
                                            "src": "1277:17:1"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1277:17:1"
                                    }
                                ],
                                "name": "lockGatebyMarketor",
                                "nameLocation": "1210:18:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 674,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 673,
                                            "mutability": "mutable",
                                            "name": "_gateraddress",
                                            "nameLocation": "1237:13:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 696,
                                            "src": "1229:21:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 672,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1229:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1228:23:1"
                                },
                                "returnParameters": {
                                    "id": 677,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1299:0:1"
                                },
                                "scope": 969,
                                "src": "1201:274:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 720,
                                    "nodeType": "Block",
                                    "src": "1581:177:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 709,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 704,
                                                                    "name": "gateList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 621,
                                                                    "src": "1612:8:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                        "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 706,
                                                                "indexExpression": {
                                                                    "id": 705,
                                                                    "name": "_gateraddress",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 698,
                                                                    "src": "1621:13:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "1612:23:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                                    "typeString": "struct LGate.Info storage ref"
                                                                }
                                                            },
                                                            "id": 707,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isUsed",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1331,
                                                            "src": "1612:30:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "74727565",
                                                            "id": 708,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1646:4:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "src": "1612:38:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "7468652067617465722069736e6f74206578697374",
                                                        "id": 710,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1664:23:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_e5f5b1c469e73fdd536d3170ec5aa83949a0dbb5b35f9fb280b5ba6c579e799c",
                                                            "typeString": "literal_string \"the gater isnot exist\""
                                                        },
                                                        "value": "the gater isnot exist"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_e5f5b1c469e73fdd536d3170ec5aa83949a0dbb5b35f9fb280b5ba6c579e799c",
                                                            "typeString": "literal_string \"the gater isnot exist\""
                                                        }
                                                    ],
                                                    "id": 703,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "1591:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 711,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1591:106:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 712,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1591:106:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 718,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 713,
                                                            "name": "gateList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 621,
                                                            "src": "1707:8:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 715,
                                                        "indexExpression": {
                                                            "id": 714,
                                                            "name": "_gateraddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 698,
                                                            "src": "1716:13:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "1707:23:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                            "typeString": "struct LGate.Info storage ref"
                                                        }
                                                    },
                                                    "id": 716,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1327,
                                                    "src": "1707:36:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 717,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1746:5:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "1707:44:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 719,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1707:44:1"
                                        }
                                    ]
                                },
                                "functionSelector": "76941300",
                                "id": 721,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 701,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 700,
                                            "name": "onlyMarketManager",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 671,
                                            "src": "1559:17:1"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1559:17:1"
                                    }
                                ],
                                "name": "unlockGatebyMarketor",
                                "nameLocation": "1490:20:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 699,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 698,
                                            "mutability": "mutable",
                                            "name": "_gateraddress",
                                            "nameLocation": "1519:13:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 721,
                                            "src": "1511:21:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 697,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1511:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1510:23:1"
                                },
                                "returnParameters": {
                                    "id": 702,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1581:0:1"
                                },
                                "scope": 969,
                                "src": "1481:277:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 767,
                                    "nodeType": "Block",
                                    "src": "1932:308:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 736,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 730,
                                                                    "name": "gateList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 621,
                                                                    "src": "1963:8:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                        "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 733,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 731,
                                                                        "name": "_gater",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 724,
                                                                        "src": "1972:6:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                                            "typeString": "struct LGate.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 732,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "gateAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1313,
                                                                    "src": "1972:18:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "1963:28:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                                    "typeString": "struct LGate.Info storage ref"
                                                                }
                                                            },
                                                            "id": 734,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isUsed",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1331,
                                                            "src": "1963:35:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "74727565",
                                                            "id": 735,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2002:4:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "src": "1963:43:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "7468652067617465722069732065786973746572",
                                                        "id": 737,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2020:22:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_8afcf45f13c6bb7b3e67748a0f81d2aa57c1d04184b87dcbe5a2de6c65200cde",
                                                            "typeString": "literal_string \"the gater is exister\""
                                                        },
                                                        "value": "the gater is exister"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_8afcf45f13c6bb7b3e67748a0f81d2aa57c1d04184b87dcbe5a2de6c65200cde",
                                                            "typeString": "literal_string \"the gater is exister\""
                                                        }
                                                    ],
                                                    "id": 729,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "1942:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 738,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1942:110:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 739,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1942:110:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 748,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 740,
                                                        "name": "_gater",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 724,
                                                        "src": "2062:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                            "typeString": "struct LGate.Info memory"
                                                        }
                                                    },
                                                    "id": 742,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1327,
                                                    "src": "2062:19:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 743,
                                                            "name": "gateList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 621,
                                                            "src": "2084:8:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 746,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 744,
                                                                "name": "_gater",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 724,
                                                                "src": "2093:6:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                                    "typeString": "struct LGate.Info memory"
                                                                }
                                                            },
                                                            "id": 745,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "gateAddress",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1313,
                                                            "src": "2093:18:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2084:28:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                            "typeString": "struct LGate.Info storage ref"
                                                        }
                                                    },
                                                    "id": 747,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1327,
                                                    "src": "2084:41:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "2062:63:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 749,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2062:63:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 758,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 750,
                                                        "name": "_gater",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 724,
                                                        "src": "2135:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                            "typeString": "struct LGate.Info memory"
                                                        }
                                                    },
                                                    "id": 752,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1329,
                                                    "src": "2135:13:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 753,
                                                            "name": "gateList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 621,
                                                            "src": "2151:8:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 756,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 754,
                                                                "name": "_gater",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 724,
                                                                "src": "2160:6:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                                    "typeString": "struct LGate.Info memory"
                                                                }
                                                            },
                                                            "id": 755,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "gateAddress",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1313,
                                                            "src": "2160:18:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2151:28:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                            "typeString": "struct LGate.Info storage ref"
                                                        }
                                                    },
                                                    "id": 757,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1329,
                                                    "src": "2151:35:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "2135:51:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 759,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2135:51:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 765,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 760,
                                                        "name": "gateList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 621,
                                                        "src": "2196:8:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                            "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                        }
                                                    },
                                                    "id": 763,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 761,
                                                            "name": "_gater",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 724,
                                                            "src": "2205:6:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                                "typeString": "struct LGate.Info memory"
                                                            }
                                                        },
                                                        "id": 762,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "gateAddress",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1313,
                                                        "src": "2205:18:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "2196:28:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                        "typeString": "struct LGate.Info storage ref"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 764,
                                                    "name": "_gater",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 724,
                                                    "src": "2227:6:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                        "typeString": "struct LGate.Info memory"
                                                    }
                                                },
                                                "src": "2196:37:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                    "typeString": "struct LGate.Info storage ref"
                                                }
                                            },
                                            "id": 766,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2196:37:1"
                                        }
                                    ]
                                },
                                "functionSelector": "71271f4d",
                                "id": 768,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 727,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 726,
                                            "name": "onlyMarketManager",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 671,
                                            "src": "1910:17:1"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1910:17:1"
                                    }
                                ],
                                "name": "updateGatebyMarketor",
                                "nameLocation": "1838:20:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 725,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 724,
                                            "mutability": "mutable",
                                            "name": "_gater",
                                            "nameLocation": "1877:6:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 768,
                                            "src": "1859:24:1",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                "typeString": "struct LGate.Info"
                                            },
                                            "typeName": {
                                                "id": 723,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 722,
                                                    "name": "LGate.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1332,
                                                    "src": "1859:10:1"
                                                },
                                                "referencedDeclaration": 1332,
                                                "src": "1859:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1332_storage_ptr",
                                                    "typeString": "struct LGate.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1858:26:1"
                                },
                                "returnParameters": {
                                    "id": 728,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1932:0:1"
                                },
                                "scope": 969,
                                "src": "1829:411:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 790,
                                    "nodeType": "Block",
                                    "src": "2316:115:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 781,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 776,
                                                                    "name": "gateList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 621,
                                                                    "src": "2334:8:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                        "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 778,
                                                                "indexExpression": {
                                                                    "id": 777,
                                                                    "name": "_gater",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 770,
                                                                    "src": "2343:6:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "2334:16:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                                    "typeString": "struct LGate.Info storage ref"
                                                                }
                                                            },
                                                            "id": 779,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isUsed",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1331,
                                                            "src": "2334:23:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "74727565",
                                                            "id": 780,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2361:4:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "src": "2334:31:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "7468652067617465722069732065786973746572",
                                                        "id": 782,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2367:22:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_8afcf45f13c6bb7b3e67748a0f81d2aa57c1d04184b87dcbe5a2de6c65200cde",
                                                            "typeString": "literal_string \"the gater is exister\""
                                                        },
                                                        "value": "the gater is exister"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_8afcf45f13c6bb7b3e67748a0f81d2aa57c1d04184b87dcbe5a2de6c65200cde",
                                                            "typeString": "literal_string \"the gater is exister\""
                                                        }
                                                    ],
                                                    "id": 775,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "2326:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 783,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2326:64:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 784,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2326:64:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 788,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "delete",
                                                "prefix": true,
                                                "src": "2401:23:1",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "id": 785,
                                                        "name": "gateList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 621,
                                                        "src": "2408:8:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                            "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                        }
                                                    },
                                                    "id": 787,
                                                    "indexExpression": {
                                                        "id": 786,
                                                        "name": "_gater",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 770,
                                                        "src": "2417:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "2408:16:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                        "typeString": "struct LGate.Info storage ref"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 789,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2401:23:1"
                                        }
                                    ]
                                },
                                "functionSelector": "b614984d",
                                "id": 791,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 773,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 772,
                                            "name": "onlyMarketManager",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 671,
                                            "src": "2298:17:1"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2298:17:1"
                                    }
                                ],
                                "name": "delGatebyMarketor",
                                "nameLocation": "2255:17:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 771,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 770,
                                            "mutability": "mutable",
                                            "name": "_gater",
                                            "nameLocation": "2281:6:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 791,
                                            "src": "2273:14:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 769,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2273:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2272:16:1"
                                },
                                "returnParameters": {
                                    "id": 774,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2316:0:1"
                                },
                                "scope": 969,
                                "src": "2246:185:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 824,
                                    "nodeType": "Block",
                                    "src": "2631:230:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 812,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "id": 803,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "expression": {
                                                                    "baseExpression": {
                                                                        "id": 797,
                                                                        "name": "gateList",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 621,
                                                                        "src": "2662:8:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                            "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                                        }
                                                                    },
                                                                    "id": 800,
                                                                    "indexExpression": {
                                                                        "expression": {
                                                                            "id": 798,
                                                                            "name": "msg",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 4294967281,
                                                                            "src": "2671:3:1",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_magic_message",
                                                                                "typeString": "msg"
                                                                            }
                                                                        },
                                                                        "id": 799,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "sender",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "2671:10:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "2662:20:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                                        "typeString": "struct LGate.Info storage ref"
                                                                    }
                                                                },
                                                                "id": 801,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "isUsed",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1331,
                                                                "src": "2662:27:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                                "hexValue": "74727565",
                                                                "id": 802,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2693:4:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "true"
                                                            },
                                                            "src": "2662:35:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "&&",
                                                        "rightExpression": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            "id": 811,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "expression": {
                                                                    "baseExpression": {
                                                                        "id": 804,
                                                                        "name": "gateList",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 621,
                                                                        "src": "2717:8:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                            "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                                        }
                                                                    },
                                                                    "id": 807,
                                                                    "indexExpression": {
                                                                        "expression": {
                                                                            "id": 805,
                                                                            "name": "msg",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 4294967281,
                                                                            "src": "2726:3:1",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_magic_message",
                                                                                "typeString": "msg"
                                                                            }
                                                                        },
                                                                        "id": 806,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "sender",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "2726:10:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "2717:20:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                                        "typeString": "struct LGate.Info storage ref"
                                                                    }
                                                                },
                                                                "id": 808,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "gateAddress",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1313,
                                                                "src": "2717:32:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                                "expression": {
                                                                    "id": 809,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967281,
                                                                    "src": "2753:3:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 810,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "src": "2753:10:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "2717:46:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "src": "2662:101:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "7468652067617465722069736e6f74206578697374",
                                                        "id": 813,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2777:23:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_e5f5b1c469e73fdd536d3170ec5aa83949a0dbb5b35f9fb280b5ba6c579e799c",
                                                            "typeString": "literal_string \"the gater isnot exist\""
                                                        },
                                                        "value": "the gater isnot exist"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_e5f5b1c469e73fdd536d3170ec5aa83949a0dbb5b35f9fb280b5ba6c579e799c",
                                                            "typeString": "literal_string \"the gater isnot exist\""
                                                        }
                                                    ],
                                                    "id": 796,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "2641:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 814,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2641:169:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 815,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2641:169:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 822,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 816,
                                                            "name": "gateList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 621,
                                                            "src": "2820:8:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 819,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 817,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "2829:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 818,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "2829:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2820:20:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                            "typeString": "struct LGate.Info storage ref"
                                                        }
                                                    },
                                                    "id": 820,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1329,
                                                    "src": "2820:27:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 821,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2850:4:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "2820:34:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 823,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2820:34:1"
                                        }
                                    ]
                                },
                                "functionSelector": "3bbae141",
                                "id": 825,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 794,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 793,
                                            "name": "onlyGator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 656,
                                            "src": "2621:9:1"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2621:9:1"
                                    }
                                ],
                                "name": "lockGatebyGater",
                                "nameLocation": "2594:15:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 792,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2609:2:1"
                                },
                                "returnParameters": {
                                    "id": 795,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2631:0:1"
                                },
                                "scope": 969,
                                "src": "2585:276:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 858,
                                    "nodeType": "Block",
                                    "src": "2915:231:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 846,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "id": 837,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "expression": {
                                                                    "baseExpression": {
                                                                        "id": 831,
                                                                        "name": "gateList",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 621,
                                                                        "src": "2946:8:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                            "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                                        }
                                                                    },
                                                                    "id": 834,
                                                                    "indexExpression": {
                                                                        "expression": {
                                                                            "id": 832,
                                                                            "name": "msg",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 4294967281,
                                                                            "src": "2955:3:1",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_magic_message",
                                                                                "typeString": "msg"
                                                                            }
                                                                        },
                                                                        "id": 833,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "sender",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "2955:10:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "2946:20:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                                        "typeString": "struct LGate.Info storage ref"
                                                                    }
                                                                },
                                                                "id": 835,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "isUsed",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1331,
                                                                "src": "2946:27:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                                "hexValue": "74727565",
                                                                "id": 836,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2977:4:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "true"
                                                            },
                                                            "src": "2946:35:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "&&",
                                                        "rightExpression": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            "id": 845,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "expression": {
                                                                    "baseExpression": {
                                                                        "id": 838,
                                                                        "name": "gateList",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 621,
                                                                        "src": "3001:8:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                            "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                                        }
                                                                    },
                                                                    "id": 841,
                                                                    "indexExpression": {
                                                                        "expression": {
                                                                            "id": 839,
                                                                            "name": "msg",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 4294967281,
                                                                            "src": "3010:3:1",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_magic_message",
                                                                                "typeString": "msg"
                                                                            }
                                                                        },
                                                                        "id": 840,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "sender",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "3010:10:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "3001:20:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                                        "typeString": "struct LGate.Info storage ref"
                                                                    }
                                                                },
                                                                "id": 842,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "gateAddress",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 1313,
                                                                "src": "3001:32:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                                "expression": {
                                                                    "id": 843,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967281,
                                                                    "src": "3037:3:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 844,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "src": "3037:10:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "3001:46:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "src": "2946:101:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "7468652067617465722069736e6f74206578697374",
                                                        "id": 847,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3061:23:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_e5f5b1c469e73fdd536d3170ec5aa83949a0dbb5b35f9fb280b5ba6c579e799c",
                                                            "typeString": "literal_string \"the gater isnot exist\""
                                                        },
                                                        "value": "the gater isnot exist"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_e5f5b1c469e73fdd536d3170ec5aa83949a0dbb5b35f9fb280b5ba6c579e799c",
                                                            "typeString": "literal_string \"the gater isnot exist\""
                                                        }
                                                    ],
                                                    "id": 830,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "2925:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 848,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2925:169:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 849,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2925:169:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 856,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 850,
                                                            "name": "gateList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 621,
                                                            "src": "3104:8:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 853,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 851,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "3113:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 852,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "3113:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "3104:20:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                            "typeString": "struct LGate.Info storage ref"
                                                        }
                                                    },
                                                    "id": 854,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1329,
                                                    "src": "3104:27:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 855,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3134:5:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "3104:35:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 857,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3104:35:1"
                                        }
                                    ]
                                },
                                "functionSelector": "f1c9f40f",
                                "id": 859,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 828,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 827,
                                            "name": "onlyGator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 656,
                                            "src": "2905:9:1"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2905:9:1"
                                    }
                                ],
                                "name": "unlockGatebyGater",
                                "nameLocation": "2876:17:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 826,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2893:2:1"
                                },
                                "returnParameters": {
                                    "id": 829,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2915:0:1"
                                },
                                "scope": 969,
                                "src": "2867:279:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 909,
                                    "nodeType": "Block",
                                    "src": "3249:369:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 874,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 868,
                                                                    "name": "gateList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 621,
                                                                    "src": "3280:8:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                        "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 871,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 869,
                                                                        "name": "_gater",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 862,
                                                                        "src": "3289:6:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                                            "typeString": "struct LGate.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 870,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "gateAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1313,
                                                                    "src": "3289:18:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "3280:28:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                                    "typeString": "struct LGate.Info storage ref"
                                                                }
                                                            },
                                                            "id": 872,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isUsed",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1331,
                                                            "src": "3280:35:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "74727565",
                                                            "id": 873,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "3319:4:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "src": "3280:43:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "7468652067617465722069732065786973746572",
                                                        "id": 875,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3337:22:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_8afcf45f13c6bb7b3e67748a0f81d2aa57c1d04184b87dcbe5a2de6c65200cde",
                                                            "typeString": "literal_string \"the gater is exister\""
                                                        },
                                                        "value": "the gater is exister"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_8afcf45f13c6bb7b3e67748a0f81d2aa57c1d04184b87dcbe5a2de6c65200cde",
                                                            "typeString": "literal_string \"the gater is exister\""
                                                        }
                                                    ],
                                                    "id": 867,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "3259:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 876,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3259:110:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 877,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3259:110:1"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 886,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 879,
                                                                    "name": "gateList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 621,
                                                                    "src": "3400:8:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                        "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 882,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 880,
                                                                        "name": "_gater",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 862,
                                                                        "src": "3409:6:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                                            "typeString": "struct LGate.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 881,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "gateAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1313,
                                                                    "src": "3409:18:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "3400:28:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                                    "typeString": "struct LGate.Info storage ref"
                                                                }
                                                            },
                                                            "id": 883,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "gateAddress",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1313,
                                                            "src": "3400:40:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 884,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "3444:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 885,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "3444:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "3400:54:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520676174657220697320796f7572",
                                                        "id": 887,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3468:19:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_62f94b9804c29001f283fbd7da0d1a25187212eaa171a5ff798562d0aaaec2bf",
                                                            "typeString": "literal_string \"the gater is your\""
                                                        },
                                                        "value": "the gater is your"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_62f94b9804c29001f283fbd7da0d1a25187212eaa171a5ff798562d0aaaec2bf",
                                                            "typeString": "literal_string \"the gater is your\""
                                                        }
                                                    ],
                                                    "id": 878,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "3379:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 888,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3379:118:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 889,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3379:118:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 894,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 890,
                                                        "name": "_gater",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 862,
                                                        "src": "3507:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                            "typeString": "struct LGate.Info memory"
                                                        }
                                                    },
                                                    "id": 892,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1327,
                                                    "src": "3507:19:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 893,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3529:5:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "3507:27:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 895,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3507:27:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 900,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 896,
                                                        "name": "_gater",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 862,
                                                        "src": "3544:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                            "typeString": "struct LGate.Info memory"
                                                        }
                                                    },
                                                    "id": 898,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1329,
                                                    "src": "3544:13:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 899,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3560:4:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "3544:20:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 901,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3544:20:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 907,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 902,
                                                        "name": "gateList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 621,
                                                        "src": "3574:8:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                            "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                        }
                                                    },
                                                    "id": 905,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 903,
                                                            "name": "_gater",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 862,
                                                            "src": "3583:6:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                                "typeString": "struct LGate.Info memory"
                                                            }
                                                        },
                                                        "id": 904,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "gateAddress",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1313,
                                                        "src": "3583:18:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "3574:28:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                        "typeString": "struct LGate.Info storage ref"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 906,
                                                    "name": "_gater",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 862,
                                                    "src": "3605:6:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                        "typeString": "struct LGate.Info memory"
                                                    }
                                                },
                                                "src": "3574:37:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                    "typeString": "struct LGate.Info storage ref"
                                                }
                                            },
                                            "id": 908,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3574:37:1"
                                        }
                                    ]
                                },
                                "functionSelector": "f3a42537",
                                "id": 910,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 865,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 864,
                                            "name": "onlyGator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 656,
                                            "src": "3239:9:1"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3239:9:1"
                                    }
                                ],
                                "name": "updateGatebyGator",
                                "nameLocation": "3186:17:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 863,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 862,
                                            "mutability": "mutable",
                                            "name": "_gater",
                                            "nameLocation": "3222:6:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 910,
                                            "src": "3204:24:1",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                "typeString": "struct LGate.Info"
                                            },
                                            "typeName": {
                                                "id": 861,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 860,
                                                    "name": "LGate.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1332,
                                                    "src": "3204:10:1"
                                                },
                                                "referencedDeclaration": 1332,
                                                "src": "3204:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1332_storage_ptr",
                                                    "typeString": "struct LGate.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3203:26:1"
                                },
                                "returnParameters": {
                                    "id": 866,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3249:0:1"
                                },
                                "scope": 969,
                                "src": "3177:441:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 955,
                                    "nodeType": "Block",
                                    "src": "3677:406:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 923,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 917,
                                                                    "name": "gateList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 621,
                                                                    "src": "3708:8:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                                        "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 920,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 918,
                                                                        "name": "_gater",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 913,
                                                                        "src": "3717:6:1",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                                            "typeString": "struct LGate.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 919,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "gateAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1313,
                                                                    "src": "3717:18:1",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "3708:28:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                                    "typeString": "struct LGate.Info storage ref"
                                                                }
                                                            },
                                                            "id": 921,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isUsed",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1331,
                                                            "src": "3708:35:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "hexValue": "74727565",
                                                            "id": 922,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "3747:4:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "src": "3708:43:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "7468652067617465722069732065786973746572",
                                                        "id": 924,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3765:22:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_8afcf45f13c6bb7b3e67748a0f81d2aa57c1d04184b87dcbe5a2de6c65200cde",
                                                            "typeString": "literal_string \"the gater is exister\""
                                                        },
                                                        "value": "the gater is exister"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_8afcf45f13c6bb7b3e67748a0f81d2aa57c1d04184b87dcbe5a2de6c65200cde",
                                                            "typeString": "literal_string \"the gater is exister\""
                                                        }
                                                    ],
                                                    "id": 916,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "3687:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 925,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3687:110:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 926,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3687:110:1"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 932,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 928,
                                                                "name": "_gater",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 913,
                                                                "src": "3815:6:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                                    "typeString": "struct LGate.Info memory"
                                                                }
                                                            },
                                                            "id": 929,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "gateAddress",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1313,
                                                            "src": "3815:18:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 930,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "3837:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 931,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "3837:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "3815:32:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520676174657220697320796f7572",
                                                        "id": 933,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3849:19:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_62f94b9804c29001f283fbd7da0d1a25187212eaa171a5ff798562d0aaaec2bf",
                                                            "typeString": "literal_string \"the gater is your\""
                                                        },
                                                        "value": "the gater is your"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_62f94b9804c29001f283fbd7da0d1a25187212eaa171a5ff798562d0aaaec2bf",
                                                            "typeString": "literal_string \"the gater is your\""
                                                        }
                                                    ],
                                                    "id": 927,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "3807:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 934,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3807:62:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 935,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3807:62:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 940,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 936,
                                                        "name": "_gater",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 913,
                                                        "src": "3880:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                            "typeString": "struct LGate.Info memory"
                                                        }
                                                    },
                                                    "id": 938,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1327,
                                                    "src": "3880:19:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 939,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3902:5:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "3880:27:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 941,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3880:27:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 946,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 942,
                                                        "name": "_gater",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 913,
                                                        "src": "3944:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                            "typeString": "struct LGate.Info memory"
                                                        }
                                                    },
                                                    "id": 944,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1329,
                                                    "src": "3944:13:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 945,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3960:5:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "3944:21:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 947,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3944:21:1"
                                        },
                                        {
                                            "expression": {
                                                "id": 953,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 948,
                                                        "name": "gateList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 621,
                                                        "src": "4003:8:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                            "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                        }
                                                    },
                                                    "id": 951,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 949,
                                                            "name": "_gater",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 913,
                                                            "src": "4012:6:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                                "typeString": "struct LGate.Info memory"
                                                            }
                                                        },
                                                        "id": 950,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "gateAddress",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1313,
                                                        "src": "4012:18:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "4003:28:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                        "typeString": "struct LGate.Info storage ref"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 952,
                                                    "name": "_gater",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 913,
                                                    "src": "4034:6:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                        "typeString": "struct LGate.Info memory"
                                                    }
                                                },
                                                "src": "4003:37:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                    "typeString": "struct LGate.Info storage ref"
                                                }
                                            },
                                            "id": 954,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4003:37:1"
                                        }
                                    ]
                                },
                                "functionSelector": "d8feb7ff",
                                "id": 956,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "addGater",
                                "nameLocation": "3633:8:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 914,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 913,
                                            "mutability": "mutable",
                                            "name": "_gater",
                                            "nameLocation": "3660:6:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 956,
                                            "src": "3642:24:1",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$1332_memory_ptr",
                                                "typeString": "struct LGate.Info"
                                            },
                                            "typeName": {
                                                "id": 912,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 911,
                                                    "name": "LGate.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1332,
                                                    "src": "3642:10:1"
                                                },
                                                "referencedDeclaration": 1332,
                                                "src": "3642:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1332_storage_ptr",
                                                    "typeString": "struct LGate.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3641:26:1"
                                },
                                "returnParameters": {
                                    "id": 915,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3677:0:1"
                                },
                                "scope": 969,
                                "src": "3624:459:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 967,
                                    "nodeType": "Block",
                                    "src": "4142:57:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "expression": {
                                                    "baseExpression": {
                                                        "id": 961,
                                                        "name": "gateList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 621,
                                                        "src": "4159:8:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$1332_storage_$",
                                                            "typeString": "mapping(address => struct LGate.Info storage ref)"
                                                        }
                                                    },
                                                    "id": 964,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 962,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "4168:3:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 963,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "4168:10:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "4159:20:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$1332_storage",
                                                        "typeString": "struct LGate.Info storage ref"
                                                    }
                                                },
                                                "id": 965,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "marketunlock",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1327,
                                                "src": "4159:33:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 960,
                                            "id": 966,
                                            "nodeType": "Return",
                                            "src": "4152:40:1"
                                        }
                                    ]
                                },
                                "functionSelector": "ab3acb5c",
                                "id": 968,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isValidGater",
                                "nameLocation": "4098:12:1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 957,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4110:2:1"
                                },
                                "returnParameters": {
                                    "id": 960,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 959,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 968,
                                            "src": "4136:4:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 958,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4136:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4135:6:1"
                                },
                                "scope": 969,
                                "src": "4089:110:1",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 970,
                        "src": "138:4063:1",
                        "usedErrors": []
                    }
                ],
                "src": "45:4157:1"
            },
            "id": 1
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Manager.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/MoonV1Manager.sol",
                "exportedSymbols": {
                    "IManagerV1Events": [
                        1212
                    ],
                    "IManagerV1Immutables": [
                        1222
                    ],
                    "IManagerV1MarketCreatorActions": [
                        1240
                    ],
                    "IManagerV1State": [
                        1253
                    ],
                    "IMoonV1Manager": [
                        1208
                    ],
                    "LCoin": [
                        1285
                    ],
                    "LCustomer": [
                        1307
                    ],
                    "LGate": [
                        1333
                    ],
                    "LSTThings": [
                        1361
                    ],
                    "MoonV1Manager": [
                        1060
                    ]
                },
                "id": 1061,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 971,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:2"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Manager.sol",
                        "file": "./interfaces/IMoonV1Manager.sol",
                        "id": 972,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1061,
                        "sourceUnit": 1209,
                        "src": "70:41:2",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 973,
                                    "name": "IMoonV1Manager",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1208,
                                    "src": "139:14:2"
                                },
                                "id": 974,
                                "nodeType": "InheritanceSpecifier",
                                "src": "139:14:2"
                            }
                        ],
                        "canonicalName": "MoonV1Manager",
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 1060,
                        "linearizedBaseContracts": [
                            1060,
                            1208,
                            1253,
                            1240,
                            1222,
                            1212
                        ],
                        "name": "MoonV1Manager",
                        "nameLocation": "122:13:2",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "functionSelector": "753c5188",
                                "id": 978,
                                "mutability": "mutable",
                                "name": "marketManagers",
                                "nameLocation": "235:14:2",
                                "nodeType": "VariableDeclaration",
                                "scope": 1060,
                                "src": "203:46:2",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                },
                                "typeName": {
                                    "id": 977,
                                    "keyType": {
                                        "id": 975,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "211:7:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "203:24:2",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                    },
                                    "valueType": {
                                        "id": 976,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "222:4:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    1221
                                ],
                                "constant": false,
                                "functionSelector": "27cbaabe",
                                "id": 980,
                                "mutability": "mutable",
                                "name": "marketCreator",
                                "nameLocation": "271:13:2",
                                "nodeType": "VariableDeclaration",
                                "scope": 1060,
                                "src": "256:28:2",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 979,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "256:7:2",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 989,
                                    "nodeType": "Block",
                                    "src": "327:47:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 987,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 985,
                                                    "name": "marketCreator",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 980,
                                                    "src": "337:13:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 986,
                                                    "name": "_marketCreator",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 982,
                                                    "src": "353:14:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "337:30:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 988,
                                            "nodeType": "ExpressionStatement",
                                            "src": "337:30:2"
                                        }
                                    ]
                                },
                                "id": 990,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nameLocation": "-1:-1:-1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 983,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 982,
                                            "mutability": "mutable",
                                            "name": "_marketCreator",
                                            "nameLocation": "311:14:2",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 990,
                                            "src": "303:22:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 981,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "303:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "302:24:2"
                                },
                                "returnParameters": {
                                    "id": 984,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "327:0:2"
                                },
                                "scope": 1060,
                                "src": "291:83:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 1000,
                                    "nodeType": "Block",
                                    "src": "409:64:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 996,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 993,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "427:3:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 994,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "427:10:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "id": 995,
                                                            "name": "marketCreator",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 980,
                                                            "src": "441:13:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "427:27:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 992,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "419:7:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 997,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "419:36:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 998,
                                            "nodeType": "ExpressionStatement",
                                            "src": "419:36:2"
                                        },
                                        {
                                            "id": 999,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "465:1:2"
                                        }
                                    ]
                                },
                                "id": 1001,
                                "name": "onlyMarketCreator",
                                "nameLocation": "389:17:2",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 991,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "406:2:2"
                                },
                                "src": "380:93:2",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 1014,
                                    "nodeType": "Block",
                                    "src": "616:71:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 1010,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "baseExpression": {
                                                                "id": 1005,
                                                                "name": "marketManagers",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 978,
                                                                "src": "634:14:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                                    "typeString": "mapping(address => bool)"
                                                                }
                                                            },
                                                            "id": 1008,
                                                            "indexExpression": {
                                                                "expression": {
                                                                    "id": 1006,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967281,
                                                                    "src": "649:3:2",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 1007,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "src": "649:10:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "634:26:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "74727565",
                                                            "id": 1009,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "664:4:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "src": "634:34:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 1004,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "626:7:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 1011,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "626:43:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1012,
                                            "nodeType": "ExpressionStatement",
                                            "src": "626:43:2"
                                        },
                                        {
                                            "id": 1013,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "679:1:2"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 1002,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "479:103:2",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "id": 1015,
                                "name": "onlyMarketManager",
                                "nameLocation": "596:17:2",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 1003,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "613:2:2"
                                },
                                "src": "587:100:2",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "baseFunctions": [
                                    1233
                                ],
                                "body": {
                                    "id": 1030,
                                    "nodeType": "Block",
                                    "src": "1016:46:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 1028,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 1024,
                                                        "name": "marketManagers",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 978,
                                                        "src": "1026:14:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 1026,
                                                    "indexExpression": {
                                                        "id": 1025,
                                                        "name": "_owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1018,
                                                        "src": "1041:6:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "1026:22:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 1027,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1051:4:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "1026:29:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 1029,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1026:29:2"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 1016,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "802:103:2",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "functionSelector": "d82aff11",
                                "id": 1031,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 1022,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 1021,
                                            "name": "onlyMarketCreator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 1001,
                                            "src": "994:17:2"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "994:17:2"
                                    }
                                ],
                                "name": "setMarketManager",
                                "nameLocation": "919:16:2",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 1020,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "977:8:2"
                                },
                                "parameters": {
                                    "id": 1019,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1018,
                                            "mutability": "mutable",
                                            "name": "_owner",
                                            "nameLocation": "944:6:2",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1031,
                                            "src": "936:14:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1017,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "936:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "935:16:2"
                                },
                                "returnParameters": {
                                    "id": 1023,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1016:0:2"
                                },
                                "scope": 1060,
                                "src": "910:152:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1239
                                ],
                                "body": {
                                    "id": 1045,
                                    "nodeType": "Block",
                                    "src": "1282:46:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 1043,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "delete",
                                                "prefix": true,
                                                "src": "1292:29:2",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "id": 1040,
                                                        "name": "marketManagers",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 978,
                                                        "src": "1299:14:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 1042,
                                                    "indexExpression": {
                                                        "id": 1041,
                                                        "name": "_owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1034,
                                                        "src": "1314:6:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "1299:22:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 1044,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1292:29:2"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 1032,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1068:103:2",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "functionSelector": "2b890543",
                                "id": 1046,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 1038,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 1037,
                                            "name": "onlyMarketCreator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 1001,
                                            "src": "1260:17:2"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1260:17:2"
                                    }
                                ],
                                "name": "delMarketManager",
                                "nameLocation": "1185:16:2",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 1036,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "1243:8:2"
                                },
                                "parameters": {
                                    "id": 1035,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1034,
                                            "mutability": "mutable",
                                            "name": "_owner",
                                            "nameLocation": "1210:6:2",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1046,
                                            "src": "1202:14:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1033,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1202:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1201:16:2"
                                },
                                "returnParameters": {
                                    "id": 1039,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1282:0:2"
                                },
                                "scope": 1060,
                                "src": "1176:152:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    1252
                                ],
                                "body": {
                                    "id": 1058,
                                    "nodeType": "Block",
                                    "src": "1507:50:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "baseExpression": {
                                                    "id": 1053,
                                                    "name": "marketManagers",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 978,
                                                    "src": "1524:14:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                        "typeString": "mapping(address => bool)"
                                                    }
                                                },
                                                "id": 1056,
                                                "indexExpression": {
                                                    "expression": {
                                                        "id": 1054,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "1539:3:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 1055,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1539:10:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "1524:26:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 1052,
                                            "id": 1057,
                                            "nodeType": "Return",
                                            "src": "1517:33:2"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 1047,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1334:103:2",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "functionSelector": "1487f252",
                                "id": 1059,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "ismarketManager",
                                "nameLocation": "1451:15:2",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 1049,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "1483:8:2"
                                },
                                "parameters": {
                                    "id": 1048,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1466:2:2"
                                },
                                "returnParameters": {
                                    "id": 1052,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1051,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1059,
                                            "src": "1501:4:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 1050,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1501:4:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1500:6:2"
                                },
                                "scope": 1060,
                                "src": "1442:115:2",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 1061,
                        "src": "113:1446:2",
                        "usedErrors": []
                    }
                ],
                "src": "45:1515:2"
            },
            "id": 2
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol",
                "exportedSymbols": {
                    "ICoinV1Events": [
                        1064
                    ]
                },
                "id": 1065,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1062,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:3"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "ICoinV1Events",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 1063,
                            "nodeType": "StructuredDocumentation",
                            "src": "70:88:3",
                            "text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
                        },
                        "fullyImplemented": true,
                        "id": 1064,
                        "linearizedBaseContracts": [
                            1064
                        ],
                        "name": "ICoinV1Events",
                        "nameLocation": "168:13:3",
                        "nodeType": "ContractDefinition",
                        "nodes": [],
                        "scope": 1065,
                        "src": "158:28:3",
                        "usedErrors": []
                    }
                ],
                "src": "45:142:3"
            },
            "id": 3
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GaterActions.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GaterActions.sol",
                "exportedSymbols": {
                    "ICoinV1GaterActions": [
                        1091
                    ],
                    "LCoin": [
                        1285
                    ]
                },
                "id": 1092,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1066,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:4"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol",
                        "file": "../../libraries/base/LCoin.sol",
                        "id": 1067,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1092,
                        "sourceUnit": 1286,
                        "src": "70:40:4",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "ICoinV1GaterActions",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 1068,
                            "nodeType": "StructuredDocumentation",
                            "src": "112:116:4",
                            "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
                        },
                        "fullyImplemented": false,
                        "id": 1091,
                        "linearizedBaseContracts": [
                            1091
                        ],
                        "name": "ICoinV1GaterActions",
                        "nameLocation": "238:19:4",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "e911abec",
                                "id": 1074,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "addCoinbyGator",
                                "nameLocation": "311:14:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1072,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1071,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "344:9:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1074,
                                            "src": "326:27:4",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 1070,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 1069,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1284,
                                                    "src": "326:10:4"
                                                },
                                                "referencedDeclaration": 1284,
                                                "src": "326:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1284_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "325:29:4"
                                },
                                "returnParameters": {
                                    "id": 1073,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "363:0:4"
                                },
                                "scope": 1091,
                                "src": "302:62:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "385e4b7a",
                                "id": 1079,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "unlockCoinbyGator",
                                "nameLocation": "379:17:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1077,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1076,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "405:20:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1079,
                                            "src": "397:28:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1075,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "397:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "396:30:4"
                                },
                                "returnParameters": {
                                    "id": 1078,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "435:0:4"
                                },
                                "scope": 1091,
                                "src": "370:66:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "441eb548",
                                "id": 1084,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "lockCoinbyGator",
                                "nameLocation": "451:15:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1082,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1081,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "475:20:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1084,
                                            "src": "467:28:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1080,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "467:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "466:30:4"
                                },
                                "returnParameters": {
                                    "id": 1083,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "505:0:4"
                                },
                                "scope": 1091,
                                "src": "442:64:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "a935b6af",
                                "id": 1090,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "updateCoinbyGator",
                                "nameLocation": "521:17:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1088,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1087,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "557:9:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1090,
                                            "src": "539:27:4",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 1086,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 1085,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1284,
                                                    "src": "539:10:4"
                                                },
                                                "referencedDeclaration": 1284,
                                                "src": "539:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1284_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "538:29:4"
                                },
                                "returnParameters": {
                                    "id": 1089,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "576:0:4"
                                },
                                "scope": 1091,
                                "src": "512:65:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 1092,
                        "src": "228:351:4",
                        "usedErrors": []
                    }
                ],
                "src": "45:535:4"
            },
            "id": 4
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol",
                "exportedSymbols": {
                    "ICoinV1Immutables": [
                        1107
                    ]
                },
                "id": 1108,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1093,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:5"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "ICoinV1Immutables",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 1094,
                            "nodeType": "StructuredDocumentation",
                            "src": "70:153:5",
                            "text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
                        },
                        "fullyImplemented": false,
                        "id": 1107,
                        "linearizedBaseContracts": [
                            1107
                        ],
                        "name": "ICoinV1Immutables",
                        "nameLocation": "233:17:5",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "documentation": {
                                    "id": 1095,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "257:138:5",
                                    "text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
                                },
                                "functionSelector": "2f17d5df",
                                "id": 1100,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "gateContractAddress",
                                "nameLocation": "409:19:5",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1096,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "428:2:5"
                                },
                                "returnParameters": {
                                    "id": 1099,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1098,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1100,
                                            "src": "454:7:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1097,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "454:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "453:9:5"
                                },
                                "scope": 1107,
                                "src": "400:63:5",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 1101,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "469:138:5",
                                    "text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
                                },
                                "functionSelector": "492b7107",
                                "id": 1106,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "marketorContractAddress",
                                "nameLocation": "621:23:5",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1102,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "644:2:5"
                                },
                                "returnParameters": {
                                    "id": 1105,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1104,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1106,
                                            "src": "670:7:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1103,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "670:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "669:9:5"
                                },
                                "scope": 1107,
                                "src": "612:67:5",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 1108,
                        "src": "223:458:5",
                        "usedErrors": []
                    }
                ],
                "src": "45:637:5"
            },
            "id": 5
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol",
                "exportedSymbols": {
                    "ICoinV1MarketorActions": [
                        1160
                    ],
                    "LCoin": [
                        1285
                    ]
                },
                "id": 1161,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1109,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:6"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol",
                        "file": "../../libraries/base/LCoin.sol",
                        "id": 1110,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1161,
                        "sourceUnit": 1286,
                        "src": "70:40:6",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "ICoinV1MarketorActions",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 1111,
                            "nodeType": "StructuredDocumentation",
                            "src": "112:116:6",
                            "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
                        },
                        "fullyImplemented": false,
                        "id": 1160,
                        "linearizedBaseContracts": [
                            1160
                        ],
                        "name": "ICoinV1MarketorActions",
                        "nameLocation": "238:22:6",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "87a70938",
                                "id": 1117,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "addCoinbyMarketor",
                                "nameLocation": "314:17:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1115,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1114,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "350:9:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1117,
                                            "src": "332:27:6",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 1113,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 1112,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1284,
                                                    "src": "332:10:6"
                                                },
                                                "referencedDeclaration": 1284,
                                                "src": "332:10:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1284_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "331:29:6"
                                },
                                "returnParameters": {
                                    "id": 1116,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "369:0:6"
                                },
                                "scope": 1160,
                                "src": "305:65:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "5385cbf5",
                                "id": 1124,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "changeCoinScopebyMarketor",
                                "nameLocation": "385:25:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1122,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1119,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "428:20:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1124,
                                            "src": "420:28:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1118,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "420:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1121,
                                            "mutability": "mutable",
                                            "name": "_scope",
                                            "nameLocation": "464:6:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1124,
                                            "src": "458:12:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            },
                                            "typeName": {
                                                "id": 1120,
                                                "name": "uint8",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "458:5:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "410:66:6"
                                },
                                "returnParameters": {
                                    "id": 1123,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "485:0:6"
                                },
                                "scope": 1160,
                                "src": "376:110:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "b20be2b4",
                                "id": 1129,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "lockCoinbyMarketor",
                                "nameLocation": "501:18:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1127,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1126,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "528:20:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1129,
                                            "src": "520:28:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1125,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "520:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "519:30:6"
                                },
                                "returnParameters": {
                                    "id": 1128,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "558:0:6"
                                },
                                "scope": 1160,
                                "src": "492:67:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "1d3b8f67",
                                "id": 1134,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "unlockCoinbyMarketor",
                                "nameLocation": "574:20:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1132,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1131,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "603:20:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1134,
                                            "src": "595:28:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1130,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "595:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "594:30:6"
                                },
                                "returnParameters": {
                                    "id": 1133,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "633:0:6"
                                },
                                "scope": 1160,
                                "src": "565:69:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "24fd7139",
                                "id": 1140,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "updateCoinbyMarketor",
                                "nameLocation": "649:20:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1138,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1137,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "688:9:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1140,
                                            "src": "670:27:6",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 1136,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 1135,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1284,
                                                    "src": "670:10:6"
                                                },
                                                "referencedDeclaration": 1284,
                                                "src": "670:10:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1284_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "669:29:6"
                                },
                                "returnParameters": {
                                    "id": 1139,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "707:0:6"
                                },
                                "scope": 1160,
                                "src": "640:68:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "cfcdca52",
                                "id": 1147,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "impoveGateCoinbyMarketor",
                                "nameLocation": "723:24:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1145,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1142,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "765:16:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1147,
                                            "src": "757:24:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1141,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "757:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1144,
                                            "mutability": "mutable",
                                            "name": "_gateaddress",
                                            "nameLocation": "799:12:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1147,
                                            "src": "791:20:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1143,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "791:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "747:70:6"
                                },
                                "returnParameters": {
                                    "id": 1146,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "826:0:6"
                                },
                                "scope": 1160,
                                "src": "714:113:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "7c3e2f02",
                                "id": 1152,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "delCoinbyMarketor",
                                "nameLocation": "842:17:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1150,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1149,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "868:16:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1152,
                                            "src": "860:24:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1148,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "860:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "859:26:6"
                                },
                                "returnParameters": {
                                    "id": 1151,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "894:0:6"
                                },
                                "scope": 1160,
                                "src": "833:62:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "eaec0112",
                                "id": 1159,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "delGateCoinbyMarketor",
                                "nameLocation": "910:21:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1157,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1154,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "949:16:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1159,
                                            "src": "941:24:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1153,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "941:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 1156,
                                            "mutability": "mutable",
                                            "name": "_gateaddress",
                                            "nameLocation": "983:12:6",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1159,
                                            "src": "975:20:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1155,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "975:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "931:70:6"
                                },
                                "returnParameters": {
                                    "id": 1158,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1010:0:6"
                                },
                                "scope": 1160,
                                "src": "901:110:6",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 1161,
                        "src": "228:785:6",
                        "usedErrors": []
                    }
                ],
                "src": "45:969:6"
            },
            "id": 6
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol",
                "exportedSymbols": {
                    "ICoinV1State": [
                        1173
                    ],
                    "LCoin": [
                        1285
                    ]
                },
                "id": 1174,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1162,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:7"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol",
                        "file": "../../libraries/base/LCoin.sol",
                        "id": 1163,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1174,
                        "sourceUnit": 1286,
                        "src": "70:40:7",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "ICoinV1State",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 1164,
                            "nodeType": "StructuredDocumentation",
                            "src": "112:169:7",
                            "text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
                        },
                        "fullyImplemented": false,
                        "id": 1173,
                        "linearizedBaseContracts": [
                            1173
                        ],
                        "name": "ICoinV1State",
                        "nameLocation": "291:12:7",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "e8dd4655",
                                "id": 1172,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getCoinInfo",
                                "nameLocation": "319:11:7",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1167,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1166,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "339:16:7",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1172,
                                            "src": "331:24:7",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1165,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "331:7:7",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "330:26:7"
                                },
                                "returnParameters": {
                                    "id": 1171,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1170,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1172,
                                            "src": "404:17:7",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$1284_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 1169,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 1168,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1284,
                                                    "src": "404:10:7"
                                                },
                                                "referencedDeclaration": 1284,
                                                "src": "404:10:7",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$1284_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "403:19:7"
                                },
                                "scope": 1173,
                                "src": "310:113:7",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 1174,
                        "src": "281:144:7",
                        "usedErrors": []
                    }
                ],
                "src": "45:381:7"
            },
            "id": 7
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Coin.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Coin.sol",
                "exportedSymbols": {
                    "ICoinV1Events": [
                        1064
                    ],
                    "ICoinV1GaterActions": [
                        1091
                    ],
                    "ICoinV1Immutables": [
                        1107
                    ],
                    "ICoinV1MarketorActions": [
                        1160
                    ],
                    "ICoinV1State": [
                        1173
                    ],
                    "IMoonV1Coin": [
                        1192
                    ],
                    "LCoin": [
                        1285
                    ]
                },
                "id": 1193,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1175,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:8"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol",
                        "file": "./Coin/ICoinV1Events.sol",
                        "id": 1176,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1193,
                        "sourceUnit": 1065,
                        "src": "70:34:8",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GaterActions.sol",
                        "file": "./Coin/ICoinV1GaterActions.sol",
                        "id": 1177,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1193,
                        "sourceUnit": 1092,
                        "src": "105:40:8",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol",
                        "file": "./Coin/ICoinV1Immutables.sol",
                        "id": 1178,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1193,
                        "sourceUnit": 1108,
                        "src": "146:38:8",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol",
                        "file": "./Coin/ICoinV1MarketorActions.sol",
                        "id": 1179,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1193,
                        "sourceUnit": 1161,
                        "src": "185:43:8",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol",
                        "file": "./Coin/ICoinV1State.sol",
                        "id": 1180,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1193,
                        "sourceUnit": 1174,
                        "src": "229:33:8",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 1182,
                                    "name": "ICoinV1Events",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1064,
                                    "src": "558:13:8"
                                },
                                "id": 1183,
                                "nodeType": "InheritanceSpecifier",
                                "src": "558:13:8"
                            },
                            {
                                "baseName": {
                                    "id": 1184,
                                    "name": "ICoinV1GaterActions",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1091,
                                    "src": "577:19:8"
                                },
                                "id": 1185,
                                "nodeType": "InheritanceSpecifier",
                                "src": "577:19:8"
                            },
                            {
                                "baseName": {
                                    "id": 1186,
                                    "name": "ICoinV1Immutables",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1107,
                                    "src": "602:17:8"
                                },
                                "id": 1187,
                                "nodeType": "InheritanceSpecifier",
                                "src": "602:17:8"
                            },
                            {
                                "baseName": {
                                    "id": 1188,
                                    "name": "ICoinV1MarketorActions",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1160,
                                    "src": "625:22:8"
                                },
                                "id": 1189,
                                "nodeType": "InheritanceSpecifier",
                                "src": "625:22:8"
                            },
                            {
                                "baseName": {
                                    "id": 1190,
                                    "name": "ICoinV1State",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1173,
                                    "src": "653:12:8"
                                },
                                "id": 1191,
                                "nodeType": "InheritanceSpecifier",
                                "src": "653:12:8"
                            }
                        ],
                        "canonicalName": "IMoonV1Coin",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 1181,
                            "nodeType": "StructuredDocumentation",
                            "src": "264:265:8",
                            "text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
                        },
                        "fullyImplemented": false,
                        "id": 1192,
                        "linearizedBaseContracts": [
                            1192,
                            1173,
                            1160,
                            1107,
                            1091,
                            1064
                        ],
                        "name": "IMoonV1Coin",
                        "nameLocation": "539:11:8",
                        "nodeType": "ContractDefinition",
                        "nodes": [],
                        "scope": 1193,
                        "src": "529:141:8",
                        "usedErrors": []
                    }
                ],
                "src": "45:626:8"
            },
            "id": 8
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Manager.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/IMoonV1Manager.sol",
                "exportedSymbols": {
                    "IManagerV1Events": [
                        1212
                    ],
                    "IManagerV1Immutables": [
                        1222
                    ],
                    "IManagerV1MarketCreatorActions": [
                        1240
                    ],
                    "IManagerV1State": [
                        1253
                    ],
                    "IMoonV1Manager": [
                        1208
                    ],
                    "LCoin": [
                        1285
                    ],
                    "LCustomer": [
                        1307
                    ],
                    "LGate": [
                        1333
                    ],
                    "LSTThings": [
                        1361
                    ]
                },
                "id": 1209,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1194,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:9"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Events.sol",
                        "file": "./Manager/IManagerV1Events.sol",
                        "id": 1195,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1209,
                        "sourceUnit": 1213,
                        "src": "70:40:9",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Immutables.sol",
                        "file": "./Manager/IManagerV1Immutables.sol",
                        "id": 1196,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1209,
                        "sourceUnit": 1223,
                        "src": "111:44:9",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1MarketCreatorActions.sol",
                        "file": "./Manager/IManagerV1MarketCreatorActions.sol",
                        "id": 1197,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1209,
                        "sourceUnit": 1241,
                        "src": "156:54:9",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1State.sol",
                        "file": "./Manager/IManagerV1State.sol",
                        "id": 1198,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1209,
                        "sourceUnit": 1254,
                        "src": "211:39:9",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 1200,
                                    "name": "IManagerV1Events",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1212,
                                    "src": "549:16:9"
                                },
                                "id": 1201,
                                "nodeType": "InheritanceSpecifier",
                                "src": "549:16:9"
                            },
                            {
                                "baseName": {
                                    "id": 1202,
                                    "name": "IManagerV1Immutables",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1222,
                                    "src": "571:20:9"
                                },
                                "id": 1203,
                                "nodeType": "InheritanceSpecifier",
                                "src": "571:20:9"
                            },
                            {
                                "baseName": {
                                    "id": 1204,
                                    "name": "IManagerV1MarketCreatorActions",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1240,
                                    "src": "597:30:9"
                                },
                                "id": 1205,
                                "nodeType": "InheritanceSpecifier",
                                "src": "597:30:9"
                            },
                            {
                                "baseName": {
                                    "id": 1206,
                                    "name": "IManagerV1State",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1253,
                                    "src": "633:15:9"
                                },
                                "id": 1207,
                                "nodeType": "InheritanceSpecifier",
                                "src": "633:15:9"
                            }
                        ],
                        "canonicalName": "IMoonV1Manager",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 1199,
                            "nodeType": "StructuredDocumentation",
                            "src": "252:265:9",
                            "text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
                        },
                        "fullyImplemented": false,
                        "id": 1208,
                        "linearizedBaseContracts": [
                            1208,
                            1253,
                            1240,
                            1222,
                            1212
                        ],
                        "name": "IMoonV1Manager",
                        "nameLocation": "527:14:9",
                        "nodeType": "ContractDefinition",
                        "nodes": [],
                        "scope": 1209,
                        "src": "517:136:9",
                        "usedErrors": []
                    }
                ],
                "src": "45:609:9"
            },
            "id": 9
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Events.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Events.sol",
                "exportedSymbols": {
                    "IManagerV1Events": [
                        1212
                    ]
                },
                "id": 1213,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1210,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:10"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IManagerV1Events",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 1211,
                            "nodeType": "StructuredDocumentation",
                            "src": "70:88:10",
                            "text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
                        },
                        "fullyImplemented": true,
                        "id": 1212,
                        "linearizedBaseContracts": [
                            1212
                        ],
                        "name": "IManagerV1Events",
                        "nameLocation": "168:16:10",
                        "nodeType": "ContractDefinition",
                        "nodes": [],
                        "scope": 1213,
                        "src": "158:31:10",
                        "usedErrors": []
                    }
                ],
                "src": "45:145:10"
            },
            "id": 10
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Immutables.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1Immutables.sol",
                "exportedSymbols": {
                    "IManagerV1Immutables": [
                        1222
                    ]
                },
                "id": 1223,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1214,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:11"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IManagerV1Immutables",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 1215,
                            "nodeType": "StructuredDocumentation",
                            "src": "70:153:11",
                            "text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
                        },
                        "fullyImplemented": false,
                        "id": 1222,
                        "linearizedBaseContracts": [
                            1222
                        ],
                        "name": "IManagerV1Immutables",
                        "nameLocation": "233:20:11",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "documentation": {
                                    "id": 1216,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "260:138:11",
                                    "text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
                                },
                                "functionSelector": "27cbaabe",
                                "id": 1221,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "marketCreator",
                                "nameLocation": "412:13:11",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1217,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "425:2:11"
                                },
                                "returnParameters": {
                                    "id": 1220,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1219,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1221,
                                            "src": "451:7:11",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1218,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "451:7:11",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "450:9:11"
                                },
                                "scope": 1222,
                                "src": "403:57:11",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 1223,
                        "src": "223:239:11",
                        "usedErrors": []
                    }
                ],
                "src": "45:418:11"
            },
            "id": 11
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1MarketCreatorActions.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1MarketCreatorActions.sol",
                "exportedSymbols": {
                    "IManagerV1MarketCreatorActions": [
                        1240
                    ],
                    "LCoin": [
                        1285
                    ],
                    "LGate": [
                        1333
                    ],
                    "LSTThings": [
                        1361
                    ]
                },
                "id": 1241,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1224,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:12"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol",
                        "file": "../../libraries/base/LCoin.sol",
                        "id": 1225,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1241,
                        "sourceUnit": 1286,
                        "src": "70:40:12",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LSTThings.sol",
                        "file": "../../libraries/base/LSTThings.sol",
                        "id": 1226,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1241,
                        "sourceUnit": 1362,
                        "src": "111:44:12",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol",
                        "file": "../../libraries/base/LGate.sol",
                        "id": 1227,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1241,
                        "sourceUnit": 1334,
                        "src": "156:40:12",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IManagerV1MarketCreatorActions",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 1228,
                            "nodeType": "StructuredDocumentation",
                            "src": "198:116:12",
                            "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
                        },
                        "fullyImplemented": false,
                        "id": 1240,
                        "linearizedBaseContracts": [
                            1240
                        ],
                        "name": "IManagerV1MarketCreatorActions",
                        "nameLocation": "324:30:12",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "d82aff11",
                                "id": 1233,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "setMarketManager",
                                "nameLocation": "370:16:12",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1231,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1230,
                                            "mutability": "mutable",
                                            "name": "_owner",
                                            "nameLocation": "395:6:12",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1233,
                                            "src": "387:14:12",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1229,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "387:7:12",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "386:16:12"
                                },
                                "returnParameters": {
                                    "id": 1232,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "411:0:12"
                                },
                                "scope": 1240,
                                "src": "361:51:12",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 1234,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "418:103:12",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "functionSelector": "2b890543",
                                "id": 1239,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "delMarketManager",
                                "nameLocation": "535:16:12",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1237,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1236,
                                            "mutability": "mutable",
                                            "name": "_owner",
                                            "nameLocation": "560:6:12",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1239,
                                            "src": "552:14:12",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 1235,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "552:7:12",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "551:16:12"
                                },
                                "returnParameters": {
                                    "id": 1238,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "576:0:12"
                                },
                                "scope": 1240,
                                "src": "526:51:12",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 1241,
                        "src": "314:265:12",
                        "usedErrors": []
                    }
                ],
                "src": "45:535:12"
            },
            "id": 12
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1State.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Manager/IManagerV1State.sol",
                "exportedSymbols": {
                    "IManagerV1State": [
                        1253
                    ],
                    "LCoin": [
                        1285
                    ],
                    "LCustomer": [
                        1307
                    ],
                    "LGate": [
                        1333
                    ],
                    "LSTThings": [
                        1361
                    ]
                },
                "id": 1254,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1242,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:13"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol",
                        "file": "../../libraries/base/LCoin.sol",
                        "id": 1243,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1254,
                        "sourceUnit": 1286,
                        "src": "70:40:13",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LSTThings.sol",
                        "file": "../../libraries/base/LSTThings.sol",
                        "id": 1244,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1254,
                        "sourceUnit": 1362,
                        "src": "111:44:13",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol",
                        "file": "../../libraries/base/LGate.sol",
                        "id": 1245,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1254,
                        "sourceUnit": 1334,
                        "src": "156:40:13",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol",
                        "file": "../../libraries/base/LCustomer.sol",
                        "id": 1246,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 1254,
                        "sourceUnit": 1308,
                        "src": "197:44:13",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IManagerV1State",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 1247,
                            "nodeType": "StructuredDocumentation",
                            "src": "243:169:13",
                            "text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
                        },
                        "fullyImplemented": false,
                        "id": 1253,
                        "linearizedBaseContracts": [
                            1253
                        ],
                        "name": "IManagerV1State",
                        "nameLocation": "422:15:13",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "1487f252",
                                "id": 1252,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "ismarketManager",
                                "nameLocation": "453:15:13",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 1248,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "468:2:13"
                                },
                                "returnParameters": {
                                    "id": 1251,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 1250,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1252,
                                            "src": "494:4:13",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 1249,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "494:4:13",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "493:6:13"
                                },
                                "scope": 1253,
                                "src": "444:56:13",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 1254,
                        "src": "412:90:13",
                        "usedErrors": []
                    }
                ],
                "src": "45:458:13"
            },
            "id": 13
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol",
                "exportedSymbols": {
                    "LCoin": [
                        1285
                    ]
                },
                "id": 1286,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1255,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:14"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "LCoin",
                        "contractDependencies": [],
                        "contractKind": "library",
                        "fullyImplemented": true,
                        "id": 1285,
                        "linearizedBaseContracts": [
                            1285
                        ],
                        "name": "LCoin",
                        "nameLocation": "78:5:14",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "canonicalName": "LCoin.Info",
                                "id": 1284,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 1257,
                                        "mutability": "mutable",
                                        "name": "coinFullName",
                                        "nameLocation": "120:12:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "112:20:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 1256,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "112:7:14",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1259,
                                        "mutability": "mutable",
                                        "name": "symbol",
                                        "nameLocation": "164:6:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "157:13:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes6",
                                            "typeString": "bytes6"
                                        },
                                        "typeName": {
                                            "id": 1258,
                                            "name": "bytes6",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "157:6:14",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes6",
                                                "typeString": "bytes6"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1261,
                                        "mutability": "mutable",
                                        "name": "scope",
                                        "nameLocation": "201:5:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "195:11:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        },
                                        "typeName": {
                                            "id": 1260,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "195:5:14",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1263,
                                        "mutability": "mutable",
                                        "name": "decimals",
                                        "nameLocation": "318:8:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "312:14:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        },
                                        "typeName": {
                                            "id": 1262,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "312:5:14",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1265,
                                        "mutability": "mutable",
                                        "name": "maxSupply",
                                        "nameLocation": "353:9:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "345:17:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "typeName": {
                                            "id": 1264,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "345:7:14",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1267,
                                        "mutability": "mutable",
                                        "name": "totalSupply",
                                        "nameLocation": "392:11:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "384:19:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "typeName": {
                                            "id": 1266,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "384:7:14",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1269,
                                        "mutability": "mutable",
                                        "name": "contractAddress",
                                        "nameLocation": "433:15:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "425:23:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 1268,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "425:7:14",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1271,
                                        "mutability": "mutable",
                                        "name": "WhitePaperUrl",
                                        "nameLocation": "481:13:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "473:21:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 1270,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "473:7:14",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1273,
                                        "mutability": "mutable",
                                        "name": "OfficalWebsite",
                                        "nameLocation": "530:14:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "522:22:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 1272,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "522:7:14",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1275,
                                        "mutability": "mutable",
                                        "name": "blockExplorerUrl",
                                        "nameLocation": "571:16:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "563:24:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 1274,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "563:7:14",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1277,
                                        "mutability": "mutable",
                                        "name": "marketunlock",
                                        "nameLocation": "617:12:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "612:17:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 1276,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "612:4:14",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1279,
                                        "mutability": "mutable",
                                        "name": "unlock",
                                        "nameLocation": "656:6:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "651:11:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 1278,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "651:4:14",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1281,
                                        "mutability": "mutable",
                                        "name": "creator",
                                        "nameLocation": "692:7:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "684:15:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 1280,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "684:7:14",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1283,
                                        "mutability": "mutable",
                                        "name": "isUsed",
                                        "nameLocation": "726:6:14",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1284,
                                        "src": "721:11:14",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 1282,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "721:4:14",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "Info",
                                "nameLocation": "97:4:14",
                                "nodeType": "StructDefinition",
                                "scope": 1285,
                                "src": "90:649:14",
                                "visibility": "public"
                            }
                        ],
                        "scope": 1286,
                        "src": "70:671:14",
                        "usedErrors": []
                    }
                ],
                "src": "45:697:14"
            },
            "id": 14
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol",
                "exportedSymbols": {
                    "LCustomer": [
                        1307
                    ]
                },
                "id": 1308,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1287,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:15"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "LCustomer",
                        "contractDependencies": [],
                        "contractKind": "library",
                        "fullyImplemented": true,
                        "id": 1307,
                        "linearizedBaseContracts": [
                            1307
                        ],
                        "name": "LCustomer",
                        "nameLocation": "78:9:15",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "canonicalName": "LCustomer.Info",
                                "id": 1306,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 1289,
                                        "mutability": "mutable",
                                        "name": "neckname",
                                        "nameLocation": "246:8:15",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1306,
                                        "src": "238:16:15",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 1288,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "238:7:15",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1291,
                                        "mutability": "mutable",
                                        "name": "createtimestamp",
                                        "nameLocation": "359:15:15",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1306,
                                        "src": "352:22:15",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                        },
                                        "typeName": {
                                            "id": 1290,
                                            "name": "uint32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "352:6:15",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1293,
                                        "mutability": "mutable",
                                        "name": "recommender",
                                        "nameLocation": "480:11:15",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1306,
                                        "src": "472:19:15",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 1292,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "472:7:15",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1295,
                                        "mutability": "mutable",
                                        "name": "customerKey",
                                        "nameLocation": "544:11:15",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1306,
                                        "src": "537:18:15",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint40",
                                            "typeString": "uint40"
                                        },
                                        "typeName": {
                                            "id": 1294,
                                            "name": "uint40",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "537:6:15",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint40",
                                                "typeString": "uint40"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1297,
                                        "mutability": "mutable",
                                        "name": "Gater",
                                        "nameLocation": "609:5:15",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1306,
                                        "src": "601:13:15",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 1296,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "601:7:15",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1299,
                                        "mutability": "mutable",
                                        "name": "GaterKey",
                                        "nameLocation": "631:8:15",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1306,
                                        "src": "624:15:15",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                        },
                                        "typeName": {
                                            "id": 1298,
                                            "name": "uint32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "624:6:15",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1301,
                                        "mutability": "mutable",
                                        "name": "contractAddress",
                                        "nameLocation": "681:15:15",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1306,
                                        "src": "673:23:15",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 1300,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "673:7:15",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1303,
                                        "mutability": "mutable",
                                        "name": "isUsed",
                                        "nameLocation": "711:6:15",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1306,
                                        "src": "706:11:15",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 1302,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "706:4:15",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1305,
                                        "mutability": "mutable",
                                        "name": "unlock",
                                        "nameLocation": "732:6:15",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1306,
                                        "src": "727:11:15",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 1304,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "727:4:15",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "Info",
                                "nameLocation": "101:4:15",
                                "nodeType": "StructDefinition",
                                "scope": 1307,
                                "src": "94:651:15",
                                "visibility": "public"
                            }
                        ],
                        "scope": 1308,
                        "src": "70:677:15",
                        "usedErrors": []
                    }
                ],
                "src": "45:703:15"
            },
            "id": 15
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LGate.sol",
                "exportedSymbols": {
                    "LGate": [
                        1333
                    ]
                },
                "id": 1334,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1309,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:16"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "LGate",
                        "contractDependencies": [],
                        "contractKind": "library",
                        "fullyImplemented": true,
                        "id": 1333,
                        "linearizedBaseContracts": [
                            1333
                        ],
                        "name": "LGate",
                        "nameLocation": "78:5:16",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "canonicalName": "LGate.Info",
                                "id": 1332,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 1311,
                                        "mutability": "mutable",
                                        "name": "market",
                                        "nameLocation": "187:6:16",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1332,
                                        "src": "179:14:16",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 1310,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "179:7:16",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1313,
                                        "mutability": "mutable",
                                        "name": "gateAddress",
                                        "nameLocation": "233:11:16",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1332,
                                        "src": "225:19:16",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 1312,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "225:7:16",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1315,
                                        "mutability": "mutable",
                                        "name": "authority",
                                        "nameLocation": "335:9:16",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1332,
                                        "src": "327:17:16",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint160",
                                            "typeString": "uint160"
                                        },
                                        "typeName": {
                                            "id": 1314,
                                            "name": "uint160",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "327:7:16",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint160",
                                                "typeString": "uint160"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1317,
                                        "mutability": "mutable",
                                        "name": "name",
                                        "nameLocation": "435:4:16",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1332,
                                        "src": "427:12:16",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 1316,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "427:7:16",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1319,
                                        "mutability": "mutable",
                                        "name": "website",
                                        "nameLocation": "541:7:16",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1332,
                                        "src": "533:15:16",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 1318,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "533:7:16",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1323,
                                        "mutability": "mutable",
                                        "name": "webserverip",
                                        "nameLocation": "657:11:16",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1332,
                                        "src": "645:23:16",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_bytes32_$10_storage_ptr",
                                            "typeString": "bytes32[10]"
                                        },
                                        "typeName": {
                                            "baseType": {
                                                "id": 1320,
                                                "name": "bytes32",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "645:7:16",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "id": 1322,
                                            "length": {
                                                "hexValue": "3130",
                                                "id": 1321,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "653:2:16",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                },
                                                "value": "10"
                                            },
                                            "nodeType": "ArrayTypeName",
                                            "src": "645:11:16",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_bytes32_$10_storage_ptr",
                                                "typeString": "bytes32[10]"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1325,
                                        "mutability": "mutable",
                                        "name": "createtimestamp",
                                        "nameLocation": "785:15:16",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1332,
                                        "src": "778:22:16",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                        },
                                        "typeName": {
                                            "id": 1324,
                                            "name": "uint32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "778:6:16",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1327,
                                        "mutability": "mutable",
                                        "name": "marketunlock",
                                        "nameLocation": "876:12:16",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1332,
                                        "src": "871:17:16",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 1326,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "871:4:16",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1329,
                                        "mutability": "mutable",
                                        "name": "unlock",
                                        "nameLocation": "934:6:16",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1332,
                                        "src": "929:11:16",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 1328,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "929:4:16",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1331,
                                        "mutability": "mutable",
                                        "name": "isUsed",
                                        "nameLocation": "955:6:16",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1332,
                                        "src": "950:11:16",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 1330,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "950:4:16",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "Info",
                                "nameLocation": "97:4:16",
                                "nodeType": "StructDefinition",
                                "scope": 1333,
                                "src": "90:878:16",
                                "visibility": "public"
                            }
                        ],
                        "scope": 1334,
                        "src": "70:900:16",
                        "usedErrors": []
                    }
                ],
                "src": "45:926:16"
            },
            "id": 16
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LSTThings.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LSTThings.sol",
                "exportedSymbols": {
                    "LSTThings": [
                        1361
                    ]
                },
                "id": 1362,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1335,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:17"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "LSTThings",
                        "contractDependencies": [],
                        "contractKind": "library",
                        "fullyImplemented": true,
                        "id": 1361,
                        "linearizedBaseContracts": [
                            1361
                        ],
                        "name": "LSTThings",
                        "nameLocation": "78:9:17",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "canonicalName": "LSTThings.Info",
                                "id": 1360,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 1337,
                                        "mutability": "mutable",
                                        "name": "name",
                                        "nameLocation": "246:4:17",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1360,
                                        "src": "238:12:17",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 1336,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "238:7:17",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1339,
                                        "mutability": "mutable",
                                        "name": "ownerAddress",
                                        "nameLocation": "359:12:17",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1360,
                                        "src": "351:20:17",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 1338,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "351:7:17",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1341,
                                        "mutability": "mutable",
                                        "name": "LSTThingsFullName",
                                        "nameLocation": "446:17:17",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1360,
                                        "src": "438:25:17",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 1340,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "438:7:17",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1343,
                                        "mutability": "mutable",
                                        "name": "symbol",
                                        "nameLocation": "497:6:17",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1360,
                                        "src": "490:13:17",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes6",
                                            "typeString": "bytes6"
                                        },
                                        "typeName": {
                                            "id": 1342,
                                            "name": "bytes6",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "490:6:17",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes6",
                                                "typeString": "bytes6"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1345,
                                        "mutability": "mutable",
                                        "name": "scope",
                                        "nameLocation": "519:5:17",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1360,
                                        "src": "513:11:17",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        },
                                        "typeName": {
                                            "id": 1344,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "513:5:17",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1347,
                                        "mutability": "mutable",
                                        "name": "contractAddress",
                                        "nameLocation": "639:15:17",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1360,
                                        "src": "631:23:17",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 1346,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "631:7:17",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1349,
                                        "mutability": "mutable",
                                        "name": "marketunlock",
                                        "nameLocation": "669:12:17",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1360,
                                        "src": "664:17:17",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 1348,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "664:4:17",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1351,
                                        "mutability": "mutable",
                                        "name": "unlock",
                                        "nameLocation": "696:6:17",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1360,
                                        "src": "691:11:17",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 1350,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "691:4:17",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1353,
                                        "mutability": "mutable",
                                        "name": "createrunlock",
                                        "nameLocation": "717:13:17",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1360,
                                        "src": "712:18:17",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 1352,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "712:4:17",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1355,
                                        "mutability": "mutable",
                                        "name": "isUsed",
                                        "nameLocation": "745:6:17",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1360,
                                        "src": "740:11:17",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 1354,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "740:4:17",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1357,
                                        "mutability": "mutable",
                                        "name": "addfromgater",
                                        "nameLocation": "769:12:17",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1360,
                                        "src": "761:20:17",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 1356,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "761:7:17",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 1359,
                                        "mutability": "mutable",
                                        "name": "creator",
                                        "nameLocation": "799:7:17",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1360,
                                        "src": "791:15:17",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 1358,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "791:7:17",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "Info",
                                "nameLocation": "101:4:17",
                                "nodeType": "StructDefinition",
                                "scope": 1361,
                                "src": "94:719:17",
                                "visibility": "public"
                            }
                        ],
                        "scope": 1362,
                        "src": "70:745:17",
                        "usedErrors": []
                    }
                ],
                "src": "45:771:17"
            },
            "id": 17
        }
    }
}