{
    "contracts": {
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol": {
            "TTSwapV1Coin": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_gatorContractAddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_marketorContractAddress",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "addCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "addCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            },
                            {
                                "internalType": "uint8",
                                "name": "_scope",
                                "type": "uint8"
                            }
                        ],
                        "name": "changeCoinScopebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "coinList",
                        "outputs": [
                            {
                                "internalType": "bytes32",
                                "name": "coinFullName",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "bytes6",
                                "name": "symbol",
                                "type": "bytes6"
                            },
                            {
                                "internalType": "uint8",
                                "name": "scope",
                                "type": "uint8"
                            },
                            {
                                "internalType": "uint8",
                                "name": "decimals",
                                "type": "uint8"
                            },
                            {
                                "internalType": "uint256",
                                "name": "maxSupply",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "totalSupply",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "contractAddress",
                                "type": "address"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "WhitePaperUrl",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "OfficalWebsite",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "blockExplorerUrl",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "bool",
                                "name": "marketunlock",
                                "type": "bool"
                            },
                            {
                                "internalType": "bool",
                                "name": "unlock",
                                "type": "bool"
                            },
                            {
                                "internalType": "address",
                                "name": "creator",
                                "type": "address"
                            },
                            {
                                "internalType": "bool",
                                "name": "isUsed",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            }
                        ],
                        "name": "delCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_gateaddress",
                                "type": "address"
                            }
                        ],
                        "name": "delGateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "gateCoinList",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "gatorContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            }
                        ],
                        "name": "getCoinInfo",
                        "outputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "",
                                "type": "tuple"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_gateaddress",
                                "type": "address"
                            }
                        ],
                        "name": "impoveGateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_coinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "isValidCoin",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "marketCoinList",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketorContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": {
                            "details": "Explain to a developer any extra details"
                        }
                    },
                    "stateVariables": {
                        "gatorContractAddress": {
                            "return": "The contract address",
                            "returns": {
                                "_0": "The contract address"
                            }
                        },
                        "marketorContractAddress": {
                            "return": "The contract address",
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {
                            "@_42": {
                                "entryPoint": null,
                                "id": 42,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "abi_decode_address_fromMemory": {
                                "entryPoint": 76,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_decode_tuple_t_addresst_address_fromMemory": {
                                "entryPoint": 105,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 2
                            }
                        },
                        "generatedSources": [
                            {
                                "ast": {
                                    "nodeType": "YulBlock",
                                    "src": "0:491:11",
                                    "statements": [
                                        {
                                            "nodeType": "YulBlock",
                                            "src": "6:3:11",
                                            "statements": []
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "74:117:11",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "84:22:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "99:6:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "93:5:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "93:13:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "84:5:11"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "169:16:11",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "178:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "181:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "171:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "171:12:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "171:12:11"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "128:5:11"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "139:5:11"
                                                                                },
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "154:3:11",
                                                                                                    "type": "",
                                                                                                    "value": "160"
                                                                                                },
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "159:1:11",
                                                                                                    "type": "",
                                                                                                    "value": "1"
                                                                                                }
                                                                                            ],
                                                                                            "functionName": {
                                                                                                "name": "shl",
                                                                                                "nodeType": "YulIdentifier",
                                                                                                "src": "150:3:11"
                                                                                            },
                                                                                            "nodeType": "YulFunctionCall",
                                                                                            "src": "150:11:11"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "163:1:11",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "sub",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "146:3:11"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "146:19:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "135:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "135:31:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "125:2:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "125:42:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "118:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "118:50:11"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "115:70:11"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_address_fromMemory",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "53:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "64:5:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "14:177:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "294:195:11",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "340:16:11",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "349:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "352:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "342:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "342:12:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "342:12:11"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "315:7:11"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "324:9:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "311:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "311:23:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "336:2:11",
                                                                    "type": "",
                                                                    "value": "64"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "307:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "307:32:11"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "304:52:11"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "365:50:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "405:9:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address_fromMemory",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "375:29:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "375:40:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "365:6:11"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "424:59:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "468:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "479:2:11",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "464:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "464:18:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address_fromMemory",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "434:29:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "434:49:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value1",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "424:6:11"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "252:9:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "263:7:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "275:6:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value1",
                                                    "nodeType": "YulTypedName",
                                                    "src": "283:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "196:293:11"
                                        }
                                    ]
                                },
                                "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
                                "id": 11,
                                "language": "Yul",
                                "name": "#utility.yul"
                            }
                        ],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1ECD CODESIZE SUB DUP1 PUSH3 0x1ECD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH3 0xA1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x88 DUP4 PUSH3 0x4C JUMP JUMPDEST SWAP2 POP PUSH3 0x98 PUSH1 0x20 DUP5 ADD PUSH3 0x4C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1DB2 PUSH3 0x11B PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2DA ADD MSTORE DUP2 DUP2 PUSH2 0x3EA ADD MSTORE DUP2 DUP2 PUSH2 0x49C ADD MSTORE DUP2 DUP2 PUSH2 0x8A1 ADD MSTORE DUP2 DUP2 PUSH2 0x969 ADD MSTORE DUP2 DUP2 PUSH2 0xA53 ADD MSTORE DUP2 DUP2 PUSH2 0x105F ADD MSTORE DUP2 DUP2 PUSH2 0x110E ADD MSTORE PUSH2 0x187D ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2B3 ADD MSTORE DUP2 DUP2 PUSH2 0x6B0 ADD MSTORE DUP2 DUP2 PUSH2 0x7AF ADD MSTORE DUP2 DUP2 PUSH2 0xDE9 ADD MSTORE PUSH2 0x1438 ADD MSTORE PUSH2 0x1DB2 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5385CBF5 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCC0BF757 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCC0BF757 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xCFCDCA52 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xE8DD4655 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xE911ABEC EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xEAEC0112 EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5385CBF5 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x7C3E2F02 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x87A70938 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xA935B6AF EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xB20BE2B4 EQ PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x385E4B7A GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x385E4B7A EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x3B830305 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x441EB548 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x47D0A634 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x492B7107 EQ PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D3B8F67 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x24FD7139 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x31ECDEB8 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x328320BF EQ PUSH2 0x208 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP8 PUSH1 0xD0 DUP2 SWAP1 SHL SWAP8 PUSH1 0xFF PUSH1 0x1 PUSH1 0x30 SHL DUP4 DIV DUP2 AND SWAP9 PUSH1 0x1 PUSH1 0x38 SHL SWAP1 SWAP4 DIV DUP2 AND SWAP8 SWAP7 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 SWAP5 SWAP4 DUP1 DUP4 AND SWAP3 PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH3 0x10000 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV AND DUP15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP15 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x139 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x283 PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x139 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x7AD JUMP JUMPDEST PUSH2 0x283 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x283 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST PUSH2 0x139 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x967 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x105D JUMP JUMPDEST PUSH2 0x283 PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0x110C JUMP JUMPDEST PUSH2 0x3B5 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x139 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0x187B JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x446 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD DUP2 DUP2 MSTORE PUSH2 0x160 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 PUSH1 0x8 SWAP1 DUP2 ADD SLOAD PUSH3 0x10000 SWAP1 DUP2 SWAP1 DIV DUP7 AND PUSH2 0x180 DUP15 ADD SWAP1 DUP2 MSTORE DUP8 MLOAD DUP8 AND DUP14 MSTORE DUP6 DUP6 MSTORE SWAP12 DUP4 SWAP1 KECCAK256 DUP14 MLOAD DUP2 SSTORE SWAP4 DUP14 ADD MLOAD SWAP9 DUP5 ADD DUP1 SLOAD SWAP4 DUP15 ADD MLOAD PUSH1 0x60 DUP16 ADD MLOAD PUSH1 0xD0 SWAP12 SWAP1 SWAP12 SHR PUSH7 0xFFFFFFFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x30 SHL PUSH1 0xFF SWAP6 DUP7 AND MUL OR PUSH1 0xFF PUSH1 0x38 SHL NOT AND PUSH1 0x1 PUSH1 0x38 SHL SWAP5 SWAP1 SWAP11 AND SWAP4 SWAP1 SWAP4 MUL SWAP9 SWAP1 SWAP9 OR SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP12 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xA0 DUP11 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE SWAP3 MLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP10 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x120 SWAP1 SWAP10 ADD MLOAD PUSH1 0x7 DUP5 ADD SSTORE SWAP6 MLOAD SWAP2 SWAP1 SWAP6 ADD DUP1 SLOAD SWAP5 MLOAD SWAP7 MLOAD SWAP3 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP2 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP2 SWAP1 SWAP2 OR SWAP6 ISZERO ISZERO SWAP1 SWAP7 MUL SWAP5 SWAP1 SWAP5 OR PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP4 SWAP1 SWAP3 AND SWAP1 SWAP2 MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xB0 SHL SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x54A460F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x730 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x54A460F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82F SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x921 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x92A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x30 SHL MUL PUSH7 0xFF000000000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E9 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD3 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xD49 JUMPI CALLER DUP2 PUSH2 0x180 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x140 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x160 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH2 0x1A0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xD0 SHR MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 DUP1 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2065786973747320696E20746865206D61726B6574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77B JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x54A460F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE69 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0xE72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0xEB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D1C JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND PUSH1 0x4 EQ PUSH2 0xF10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2073636F7065206973206E6F74206A757374696669656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD DUP2 DUP2 MSTORE PUSH2 0x160 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP6 ADD DUP2 DUP2 MSTORE CALLER PUSH2 0x180 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xC0 DUP8 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP10 DUP11 SWAP1 KECCAK256 DUP12 MLOAD DUP2 SSTORE SWAP1 DUP12 ADD MLOAD SWAP7 DUP2 ADD DUP1 SLOAD SWAP11 DUP13 ADD MLOAD PUSH1 0x60 DUP14 ADD MLOAD PUSH1 0xD0 SWAP10 SWAP1 SWAP10 SHR PUSH7 0xFFFFFFFFFFFFFF NOT SWAP1 SWAP13 AND SWAP12 SWAP1 SWAP12 OR PUSH1 0x1 PUSH1 0x30 SHL PUSH1 0xFF SWAP13 DUP14 AND MUL OR PUSH1 0xFF PUSH1 0x38 SHL NOT AND PUSH1 0x1 PUSH1 0x38 SHL SWAP12 SWAP1 SWAP9 AND SWAP11 SWAP1 SWAP11 MUL SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP9 SSTORE PUSH1 0x80 DUP10 ADD MLOAD SWAP8 DUP6 ADD SWAP8 SWAP1 SWAP8 SSTORE PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE MLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH2 0x100 DUP1 DUP9 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x120 SWAP1 SWAP8 ADD MLOAD PUSH1 0x7 DUP5 ADD SSTORE SWAP4 MLOAD PUSH1 0x8 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP4 MLOAD SWAP5 MLOAD SWAP2 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP3 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP3 SWAP1 SWAP3 OR SWAP4 ISZERO ISZERO SWAP1 SWAP6 MUL SWAP3 SWAP1 SWAP3 OR PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND PUSH3 0x10000 SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xB0 SHL SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10DF SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x116A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118E SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND PUSH2 0x11DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x1243 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E206973202065786973747320696E206D61726B6574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP5 AND DUP4 MSTORE DUP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 DUP5 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP4 SSTORE SWAP3 SWAP1 SWAP3 MSTORE DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1C0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1A0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D4C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x1C0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT PUSH1 0xD0 DUP3 SWAP1 SHL AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x30 SHL DUP5 DIV DUP2 AND SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x38 SHL SWAP1 SWAP3 DIV DUP5 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP5 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH2 0x100 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x8 SWAP1 SWAP3 ADD SLOAD DUP1 DUP5 AND ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE SWAP2 DUP3 DIV DUP4 AND ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE PUSH3 0x10000 DUP3 DIV SWAP1 SWAP4 AND PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV AND ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x54A460F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1494 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B8 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x14C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1752 JUMPI CALLER DUP2 PUSH2 0x180 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x140 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x160 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH2 0x1A0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xD0 SHR MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x17BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2065786973747320696E20746865206D61726B6574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND ISZERO PUSH2 0x1837 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2065786973747320696E2074686520676174650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77B JUMP JUMPDEST PUSH1 0xC0 ADD DUP1 MLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18FD SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x1906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x194B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19BA DUP3 PUSH2 0x1983 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x19F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x199A DUP2 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A56 PUSH2 0x19C1 JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE PUSH2 0x1A66 PUSH1 0x20 DUP5 ADD PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1A77 PUSH1 0x40 DUP5 ADD PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1A88 PUSH1 0x60 DUP5 ADD PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x1AAD PUSH1 0xC0 DUP5 ADD PUSH2 0x1983 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x1AE0 DUP2 DUP6 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0x1AF2 DUP5 DUP3 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x180 PUSH2 0x1B04 DUP5 DUP3 ADD PUSH2 0x1983 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 PUSH2 0x1B16 DUP5 DUP3 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP15 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT DUP15 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xFF DUP14 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP13 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C0 DUP2 ADD DUP12 PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1B6B PUSH1 0xC0 DUP4 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST DUP9 PUSH1 0xE0 DUP4 ADD MSTORE DUP8 PUSH2 0x100 DUP4 ADD MSTORE DUP7 PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x1B8E PUSH2 0x140 DUP4 ADD DUP8 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH2 0x180 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x1A0 SWAP1 SWAP2 ADD MSTORE SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BDD DUP4 PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEB PUSH1 0x20 DUP5 ADD PUSH2 0x1A11 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C10 DUP4 PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEB PUSH1 0x20 DUP5 ADD PUSH2 0x1983 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH2 0x1C0 DUP4 ADD SWAP2 PUSH2 0x1C43 SWAP1 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1C58 PUSH1 0x40 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1C6D PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1C9C PUSH1 0xC0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 DUP2 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x140 DUP1 DUP5 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x160 DUP1 DUP5 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x180 DUP1 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH2 0x1A0 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19BA DUP2 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x1E5BDD481A185D99481B9BDD081D1A19481C9A59DA1D PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x74686520636F696E206973206E6F7420657869737473 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xB9 CALLER 0x4D 0xB9 0xC1 0x24 0xC1 0xB5 DIV PUSH16 0x2BDD27D54DD0A39A2B379402EBDA0AC9 0x5D SIGNEXTEND 0xDA 0x26 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
                        "sourceMap": "249:7052:0:-:0;;;879:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;970:44:0;;;;;1024:50;;;249:7052;;14:177:11;93:13;;-1:-1:-1;;;;;135:31:11;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;249:7052:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {
                            "@addCoinbyGator_462": {
                                "entryPoint": 5174,
                                "id": 462,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@addCoinbyMarketor_148": {
                                "entryPoint": 2641,
                                "id": 148,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@changeCoinScopebyMarketor_165": {
                                "entryPoint": 2207,
                                "id": 165,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "@coinList_22": {
                                "entryPoint": null,
                                "id": 22,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@delCoinbyMarketor_329": {
                                "entryPoint": 2407,
                                "id": 329,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@delGateCoinbyMarketor_360": {
                                "entryPoint": 6267,
                                "id": 360,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "@gateCoinList_17": {
                                "entryPoint": null,
                                "id": 17,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@gatorContractAddress_24": {
                                "entryPoint": null,
                                "id": 24,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@getCoinInfo_598": {
                                "entryPoint": 4756,
                                "id": 598,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "@impoveGateCoinbyMarketor_304": {
                                "entryPoint": 4364,
                                "id": 304,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "@isValidCoin_611": {
                                "entryPoint": null,
                                "id": 611,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "@lockCoinbyGator_514": {
                                "entryPoint": 1965,
                                "id": 514,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@lockCoinbyMarketor_180": {
                                "entryPoint": 4189,
                                "id": 180,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@marketCoinList_11": {
                                "entryPoint": null,
                                "id": 11,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@marketorContractAddress_26": {
                                "entryPoint": null,
                                "id": 26,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@unlockCoinbyGator_488": {
                                "entryPoint": 1710,
                                "id": 488,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@unlockCoinbyMarketor_195": {
                                "entryPoint": 1000,
                                "id": 195,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@updateCoinbyGator_575": {
                                "entryPoint": 3559,
                                "id": 575,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@updateCoinbyMarketor_251": {
                                "entryPoint": 1178,
                                "id": 251,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "abi_decode_address": {
                                "entryPoint": 6531,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_decode_bool": {
                                "entryPoint": 6704,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_decode_bytes6": {
                                "entryPoint": 6649,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_decode_tuple_t_address": {
                                "entryPoint": 6559,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_decode_tuple_t_addresst_address": {
                                "entryPoint": 7156,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 2
                            },
                            "abi_decode_tuple_t_addresst_uint8": {
                                "entryPoint": 7105,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 2
                            },
                            "abi_decode_tuple_t_bool_fromMemory": {
                                "entryPoint": 7423,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_decode_tuple_t_struct$_Info_$794_memory_ptr": {
                                "entryPoint": 6715,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_decode_uint8": {
                                "entryPoint": 6673,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_address": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "abi_encode_bool": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "abi_encode_bytes6": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_bytes32_t_bytes6_t_uint8_t_uint8_t_uint256_t_uint256_t_address_t_bytes32_t_bytes32_t_bytes32_t_bool_t_bool_t_address_t_bool__to_t_bytes32_t_bytes6_t_uint8_t_uint8_t_uint256_t_uint256_t_address_t_bytes32_t_bytes32_t_bytes32_t_bool_t_bool_t_address_t_bool__fromStack_reversed": {
                                "entryPoint": 6945,
                                "id": null,
                                "parameterSlots": 15,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": 7500,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_55b5ab3acaf98f73f24e340e3fce4376f33427349016b0431ff2c4efa932d18e__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_81cb1dfb23a252b826bafd64e1a5e758717edd6cb6cf234d6b50e48a1bea516b__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": 7452,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_stringliteral_d35edcbfadff3d182421fe87d6d101d172666bcdd07b46d70b2a94d2cce5545f__to_t_string_memory_ptr__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_struct$_Info_$794_memory_ptr__to_t_struct$_Info_$794_memory_ptr__fromStack_reversed": {
                                "entryPoint": 7198,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_uint8": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 0
                            },
                            "allocate_memory": {
                                "entryPoint": 6593,
                                "id": null,
                                "parameterSlots": 0,
                                "returnSlots": 1
                            },
                            "validator_revert_bool": {
                                "entryPoint": 6690,
                                "id": null,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            }
                        },
                        "generatedSources": [
                            {
                                "ast": {
                                    "nodeType": "YulBlock",
                                    "src": "0:9145:11",
                                    "statements": [
                                        {
                                            "nodeType": "YulBlock",
                                            "src": "6:3:11",
                                            "statements": []
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "63:124:11",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "73:29:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "95:6:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "82:12:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "82:20:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "73:5:11"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "165:16:11",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "174:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "177:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "167:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "167:12:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "167:12:11"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "124:5:11"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "135:5:11"
                                                                                },
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "150:3:11",
                                                                                                    "type": "",
                                                                                                    "value": "160"
                                                                                                },
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "155:1:11",
                                                                                                    "type": "",
                                                                                                    "value": "1"
                                                                                                }
                                                                                            ],
                                                                                            "functionName": {
                                                                                                "name": "shl",
                                                                                                "nodeType": "YulIdentifier",
                                                                                                "src": "146:3:11"
                                                                                            },
                                                                                            "nodeType": "YulFunctionCall",
                                                                                            "src": "146:11:11"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "159:1:11",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "sub",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "142:3:11"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "142:19:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "131:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "131:31:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "121:2:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "121:42:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "114:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "114:50:11"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "111:70:11"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "42:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "53:5:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "14:173:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "262:116:11",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "308:16:11",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "317:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "320:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "310:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "310:12:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "310:12:11"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "283:7:11"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "292:9:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "279:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "279:23:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "304:2:11",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "275:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "275:32:11"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "272:52:11"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "333:39:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "362:9:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "343:18:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "343:29:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "333:6:11"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "228:9:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "239:7:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "251:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "192:186:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "424:303:11",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "434:19:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "450:2:11",
                                                                    "type": "",
                                                                    "value": "64"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "444:5:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "444:9:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "memPtr",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "434:6:11"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "462:34:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memPtr",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "484:6:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "492:3:11",
                                                                    "type": "",
                                                                    "value": "448"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "480:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "480:16:11"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "newFreePtr",
                                                                "nodeType": "YulTypedName",
                                                                "src": "466:10:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "579:111:11",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "600:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "arguments": [
                                                                                    {
                                                                                        "kind": "number",
                                                                                        "nodeType": "YulLiteral",
                                                                                        "src": "607:3:11",
                                                                                        "type": "",
                                                                                        "value": "224"
                                                                                    },
                                                                                    {
                                                                                        "kind": "number",
                                                                                        "nodeType": "YulLiteral",
                                                                                        "src": "612:10:11",
                                                                                        "type": "",
                                                                                        "value": "0x4e487b71"
                                                                                    }
                                                                                ],
                                                                                "functionName": {
                                                                                    "name": "shl",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "603:3:11"
                                                                                },
                                                                                "nodeType": "YulFunctionCall",
                                                                                "src": "603:20:11"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "mstore",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "593:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "593:31:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "593:31:11"
                                                                },
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "644:1:11",
                                                                                "type": "",
                                                                                "value": "4"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "647:4:11",
                                                                                "type": "",
                                                                                "value": "0x41"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "mstore",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "637:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "637:15:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "637:15:11"
                                                                },
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "672:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "675:4:11",
                                                                                "type": "",
                                                                                "value": "0x24"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "665:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "665:15:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "665:15:11"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "newFreePtr",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "514:10:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "526:18:11",
                                                                            "type": "",
                                                                            "value": "0xffffffffffffffff"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "gt",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "511:2:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "511:34:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "newFreePtr",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "550:10:11"
                                                                        },
                                                                        {
                                                                            "name": "memPtr",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "562:6:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "lt",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "547:2:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "547:22:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "or",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "508:2:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "508:62:11"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "505:185:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "706:2:11",
                                                                    "type": "",
                                                                    "value": "64"
                                                                },
                                                                {
                                                                    "name": "newFreePtr",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "710:10:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "699:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "699:22:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "699:22:11"
                                                    }
                                                ]
                                            },
                                            "name": "allocate_memory",
                                            "nodeType": "YulFunctionDefinition",
                                            "returnVariables": [
                                                {
                                                    "name": "memPtr",
                                                    "nodeType": "YulTypedName",
                                                    "src": "413:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "383:344:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "780:129:11",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "790:29:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "812:6:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "799:12:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "799:20:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "790:5:11"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "887:16:11",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "896:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "899:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "889:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "889:12:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "889:12:11"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "841:5:11"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "852:5:11"
                                                                                },
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "863:3:11",
                                                                                            "type": "",
                                                                                            "value": "208"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "868:14:11",
                                                                                            "type": "",
                                                                                            "value": "0xffffffffffff"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "shl",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "859:3:11"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "859:24:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "848:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "848:36:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "838:2:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "838:47:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "831:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "831:55:11"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "828:75:11"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_bytes6",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "759:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "770:5:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "732:177:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "961:109:11",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "971:29:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "993:6:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "980:12:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "980:20:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "971:5:11"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "1048:16:11",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "1057:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "1060:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1050:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "1050:12:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "1050:12:11"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1022:5:11"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1033:5:11"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1040:4:11",
                                                                                    "type": "",
                                                                                    "value": "0xff"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1029:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1029:16:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1019:2:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1019:27:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1012:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1012:35:11"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "1009:55:11"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_uint8",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "940:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "951:5:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "914:156:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "1117:76:11",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "1171:16:11",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "1180:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "1183:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1173:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "1173:12:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "1173:12:11"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1140:5:11"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "name": "value",
                                                                                            "nodeType": "YulIdentifier",
                                                                                            "src": "1161:5:11"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "iszero",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "1154:6:11"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "1154:13:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1147:6:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1147:21:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1137:2:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1137:32:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1130:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1130:40:11"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "1127:60:11"
                                                    }
                                                ]
                                            },
                                            "name": "validator_revert_bool",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1106:5:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "1075:118:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "1244:82:11",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "1254:29:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "offset",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1276:6:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1263:12:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1263:20:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1254:5:11"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1314:5:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "validator_revert_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1292:21:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1292:28:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1292:28:11"
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_bool",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "offset",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1223:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1234:5:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "1198:128:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "1422:1198:11",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "1469:16:11",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "1478:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "1481:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1471:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "1471:12:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "1471:12:11"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1443:7:11"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1452:9:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1439:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1439:23:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1464:3:11",
                                                                    "type": "",
                                                                    "value": "448"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1435:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1435:33:11"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "1432:53:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "1494:30:11",
                                                        "value": {
                                                            "arguments": [],
                                                            "functionName": {
                                                                "name": "allocate_memory",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1507:15:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1507:17:11"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulTypedName",
                                                                "src": "1498:5:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1540:5:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1560:9:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1547:12:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1547:23:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1533:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1533:38:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1533:38:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1591:5:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1598:2:11",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1587:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1587:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1625:9:11"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1636:2:11",
                                                                                    "type": "",
                                                                                    "value": "32"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1621:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1621:18:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_bytes6",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1603:17:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1603:37:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1580:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1580:61:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1580:61:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1661:5:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1668:2:11",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1657:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1657:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1694:9:11"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1705:2:11",
                                                                                    "type": "",
                                                                                    "value": "64"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1690:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1690:18:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_uint8",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1673:16:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1673:36:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1650:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1650:60:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1650:60:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1730:5:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1737:2:11",
                                                                            "type": "",
                                                                            "value": "96"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1726:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1726:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1763:9:11"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1774:2:11",
                                                                                    "type": "",
                                                                                    "value": "96"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1759:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1759:18:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_uint8",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1742:16:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1742:36:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1719:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1719:60:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1719:60:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1799:5:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1806:3:11",
                                                                            "type": "",
                                                                            "value": "128"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1795:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1795:15:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1829:9:11"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1840:3:11",
                                                                                    "type": "",
                                                                                    "value": "128"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1825:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1825:19:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1812:12:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1812:33:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1788:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1788:58:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1788:58:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1866:5:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1873:3:11",
                                                                            "type": "",
                                                                            "value": "160"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1862:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1862:15:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1896:9:11"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1907:3:11",
                                                                                    "type": "",
                                                                                    "value": "160"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1892:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1892:19:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1879:12:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1879:33:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1855:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1855:58:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1855:58:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "1933:5:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "1940:3:11",
                                                                            "type": "",
                                                                            "value": "192"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1929:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1929:15:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "1969:9:11"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "1980:3:11",
                                                                                    "type": "",
                                                                                    "value": "192"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "1965:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "1965:19:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_address",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "1946:18:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "1946:39:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1922:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1922:64:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1922:64:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2006:5:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "2013:3:11",
                                                                            "type": "",
                                                                            "value": "224"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2002:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2002:15:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2036:9:11"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "2047:3:11",
                                                                                    "type": "",
                                                                                    "value": "224"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2032:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2032:19:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2019:12:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2019:33:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1995:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1995:58:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "1995:58:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2062:13:11",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2072:3:11",
                                                            "type": "",
                                                            "value": "256"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_1",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2066:2:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2095:5:11"
                                                                        },
                                                                        {
                                                                            "name": "_1",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2102:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2091:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2091:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2124:9:11"
                                                                                },
                                                                                {
                                                                                    "name": "_1",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2135:2:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2120:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2120:18:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2107:12:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2107:32:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2084:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2084:56:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2084:56:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2149:13:11",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2159:3:11",
                                                            "type": "",
                                                            "value": "288"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_2",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2153:2:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2182:5:11"
                                                                        },
                                                                        {
                                                                            "name": "_2",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2189:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2178:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2178:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2211:9:11"
                                                                                },
                                                                                {
                                                                                    "name": "_2",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2222:2:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2207:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2207:18:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "calldataload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2194:12:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2194:32:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2171:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2171:56:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2171:56:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2236:13:11",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2246:3:11",
                                                            "type": "",
                                                            "value": "320"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_3",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2240:2:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2269:5:11"
                                                                        },
                                                                        {
                                                                            "name": "_3",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2276:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2265:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2265:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2301:9:11"
                                                                                },
                                                                                {
                                                                                    "name": "_3",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2312:2:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2297:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2297:18:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_bool",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2281:15:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2281:35:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2258:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2258:59:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2258:59:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2326:13:11",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2336:3:11",
                                                            "type": "",
                                                            "value": "352"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_4",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2330:2:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2359:5:11"
                                                                        },
                                                                        {
                                                                            "name": "_4",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2366:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2355:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2355:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2391:9:11"
                                                                                },
                                                                                {
                                                                                    "name": "_4",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2402:2:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2387:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2387:18:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_bool",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2371:15:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2371:35:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2348:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2348:59:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2348:59:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2416:13:11",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2426:3:11",
                                                            "type": "",
                                                            "value": "384"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_5",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2420:2:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2449:5:11"
                                                                        },
                                                                        {
                                                                            "name": "_5",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2456:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2445:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2445:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2484:9:11"
                                                                                },
                                                                                {
                                                                                    "name": "_5",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2495:2:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2480:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2480:18:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_address",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2461:18:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2461:38:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2438:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2438:62:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2438:62:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "2509:13:11",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "2519:3:11",
                                                            "type": "",
                                                            "value": "416"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_6",
                                                                "nodeType": "YulTypedName",
                                                                "src": "2513:2:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2542:5:11"
                                                                        },
                                                                        {
                                                                            "name": "_6",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2549:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2538:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2538:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "headStart",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2574:9:11"
                                                                                },
                                                                                {
                                                                                    "name": "_6",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "2585:2:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2570:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2570:18:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "abi_decode_bool",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2554:15:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2554:35:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2531:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2531:59:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2531:59:11"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "2599:15:11",
                                                        "value": {
                                                            "name": "value",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "2609:5:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2599:6:11"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_struct$_Info_$794_memory_ptr",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1388:9:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1399:7:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "1411:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "1331:1289:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "2668:65:11",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "pos",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2685:3:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2694:5:11"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "2705:3:11",
                                                                                    "type": "",
                                                                                    "value": "208"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "2710:14:11",
                                                                                    "type": "",
                                                                                    "value": "0xffffffffffff"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "shl",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2701:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2701:24:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2690:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2690:36:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2678:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2678:49:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2678:49:11"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_bytes6",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2652:5:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "pos",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2659:3:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "2625:108:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "2780:33:11",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "pos",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2789:3:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2798:5:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "2805:4:11",
                                                                            "type": "",
                                                                            "value": "0xff"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2794:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2794:16:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2782:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2782:29:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2782:29:11"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_uint8",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2764:5:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "pos",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2771:3:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "2738:75:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "2862:60:11",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "pos",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2879:3:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "2888:5:11"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "2903:3:11",
                                                                                            "type": "",
                                                                                            "value": "160"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "2908:1:11",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "shl",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "2899:3:11"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "2899:11:11"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "2912:1:11",
                                                                                    "type": "",
                                                                                    "value": "1"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "sub",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2895:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2895:19:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2884:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2884:31:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2872:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2872:44:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2872:44:11"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2846:5:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "pos",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2853:3:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "2818:104:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "2968:50:11",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "pos",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "2985:3:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "3004:5:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "2997:6:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "2997:13:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "iszero",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2990:6:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2990:21:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "2978:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2978:34:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "2978:34:11"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_bool",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "value",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2952:5:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "pos",
                                                    "nodeType": "YulTypedName",
                                                    "src": "2959:3:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "2927:91:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "3464:753:11",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "3474:27:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3486:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "3497:3:11",
                                                                    "type": "",
                                                                    "value": "448"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3482:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3482:19:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3474:4:11"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3517:9:11"
                                                                },
                                                                {
                                                                    "name": "value0",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3528:6:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3510:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3510:25:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3510:25:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3555:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3566:2:11",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3551:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3551:18:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value1",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3575:6:11"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3587:3:11",
                                                                                    "type": "",
                                                                                    "value": "208"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "3592:14:11",
                                                                                    "type": "",
                                                                                    "value": "0xffffffffffff"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "shl",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "3583:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "3583:24:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3571:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3571:37:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3544:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3544:65:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3544:65:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3629:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3640:2:11",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3625:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3625:18:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value2",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3649:6:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3657:4:11",
                                                                            "type": "",
                                                                            "value": "0xff"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3645:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3645:17:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3618:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3618:45:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3618:45:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value3",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3689:6:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3701:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3712:2:11",
                                                                            "type": "",
                                                                            "value": "96"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3697:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3697:18:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_uint8",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3672:16:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3672:44:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3672:44:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3736:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3747:3:11",
                                                                            "type": "",
                                                                            "value": "128"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3732:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3732:19:11"
                                                                },
                                                                {
                                                                    "name": "value4",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3753:6:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3725:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3725:35:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3725:35:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3780:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3791:3:11",
                                                                            "type": "",
                                                                            "value": "160"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3776:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3776:19:11"
                                                                },
                                                                {
                                                                    "name": "value5",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3797:6:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3769:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3769:35:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3769:35:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value6",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3832:6:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3844:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3855:3:11",
                                                                            "type": "",
                                                                            "value": "192"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3840:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3840:19:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3813:18:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3813:47:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3813:47:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3880:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3891:3:11",
                                                                            "type": "",
                                                                            "value": "224"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3876:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3876:19:11"
                                                                },
                                                                {
                                                                    "name": "value7",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3897:6:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3869:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3869:35:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3869:35:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3924:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3935:3:11",
                                                                            "type": "",
                                                                            "value": "256"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3920:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3920:19:11"
                                                                },
                                                                {
                                                                    "name": "value8",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3941:6:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3913:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3913:35:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3913:35:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "3968:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "3979:3:11",
                                                                            "type": "",
                                                                            "value": "288"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3964:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3964:19:11"
                                                                },
                                                                {
                                                                    "name": "value9",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3985:6:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3957:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3957:35:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "3957:35:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value10",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4017:7:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4030:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4041:3:11",
                                                                            "type": "",
                                                                            "value": "320"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4026:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4026:19:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4001:15:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4001:45:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4001:45:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value11",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4071:7:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4084:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4095:3:11",
                                                                            "type": "",
                                                                            "value": "352"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4080:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4080:19:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4055:15:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4055:45:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4055:45:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value12",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4128:7:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4141:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4152:3:11",
                                                                            "type": "",
                                                                            "value": "384"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4137:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4137:19:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4109:18:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4109:48:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4109:48:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value13",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4182:7:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4195:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4206:3:11",
                                                                            "type": "",
                                                                            "value": "416"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4191:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4191:19:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4166:15:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4166:45:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4166:45:11"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_bytes32_t_bytes6_t_uint8_t_uint8_t_uint256_t_uint256_t_address_t_bytes32_t_bytes32_t_bytes32_t_bool_t_bool_t_address_t_bool__to_t_bytes32_t_bytes6_t_uint8_t_uint8_t_uint256_t_uint256_t_address_t_bytes32_t_bytes32_t_bytes32_t_bool_t_bool_t_address_t_bool__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3325:9:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value13",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3336:7:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value12",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3345:7:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value11",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3354:7:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value10",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3363:7:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value9",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3372:6:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value8",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3380:6:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value7",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3388:6:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value6",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3396:6:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value5",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3404:6:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value4",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3412:6:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value3",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3420:6:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value2",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3428:6:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value1",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3436:6:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3444:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "3455:4:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "3023:1194:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "4317:92:11",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "4327:26:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4339:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4350:2:11",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4335:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4335:18:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4327:4:11"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4369:9:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "4394:6:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "4387:6:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "4387:14:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "iszero",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4380:6:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4380:22:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4362:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4362:41:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4362:41:11"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4286:9:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4297:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4308:4:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "4222:187:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "4515:102:11",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "4525:26:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4537:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4548:2:11",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4533:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4533:18:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4525:4:11"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4567:9:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4582:6:11"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "4598:3:11",
                                                                                            "type": "",
                                                                                            "value": "160"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "4603:1:11",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "shl",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "4594:3:11"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "4594:11:11"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "4607:1:11",
                                                                                    "type": "",
                                                                                    "value": "1"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "sub",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "4590:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "4590:19:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4578:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4578:32:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4560:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4560:51:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "4560:51:11"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4484:9:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4495:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4506:4:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "4414:203:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "4707:171:11",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "4753:16:11",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "4762:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "4765:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4755:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "4755:12:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "4755:12:11"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4728:7:11"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4737:9:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4724:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4724:23:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "4749:2:11",
                                                                    "type": "",
                                                                    "value": "64"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4720:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4720:32:11"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "4717:52:11"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "4778:39:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "4807:9:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4788:18:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4788:29:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4778:6:11"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "4826:46:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4857:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "4868:2:11",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4853:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4853:18:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_uint8",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4836:16:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4836:36:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value1",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4826:6:11"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_addresst_uint8",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4665:9:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4676:7:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4688:6:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value1",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4696:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "4622:256:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "4970:173:11",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "5016:16:11",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "5025:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "5028:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5018:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "5018:12:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "5018:12:11"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "4991:7:11"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5000:9:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4987:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4987:23:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "5012:2:11",
                                                                    "type": "",
                                                                    "value": "64"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4983:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "4983:32:11"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "4980:52:11"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "5041:39:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5070:9:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5051:18:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5051:29:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5041:6:11"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "5089:48:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5122:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5133:2:11",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5118:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5118:18:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_decode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5099:18:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5099:38:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value1",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5089:6:11"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_addresst_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4928:9:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4939:7:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4951:6:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value1",
                                                    "nodeType": "YulTypedName",
                                                    "src": "4959:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "4883:260:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "5291:1467:11",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "5301:27:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5313:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "5324:3:11",
                                                                    "type": "",
                                                                    "value": "448"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5309:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5309:19:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5301:4:11"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5344:9:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5361:6:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "mload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5355:5:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5355:13:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5337:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5337:32:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5337:32:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "5378:44:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5408:6:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5416:4:11",
                                                                            "type": "",
                                                                            "value": "0x20"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5404:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5404:17:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5398:5:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5398:24:11"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0",
                                                                "nodeType": "YulTypedName",
                                                                "src": "5382:12:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5449:12:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5467:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5478:4:11",
                                                                            "type": "",
                                                                            "value": "0x20"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5463:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5463:20:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bytes6",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5431:17:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5431:53:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5431:53:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "5493:46:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5525:6:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5533:4:11",
                                                                            "type": "",
                                                                            "value": "0x40"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5521:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5521:17:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5515:5:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5515:24:11"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_1",
                                                                "nodeType": "YulTypedName",
                                                                "src": "5497:14:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_1",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5565:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5585:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5596:4:11",
                                                                            "type": "",
                                                                            "value": "0x40"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5581:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5581:20:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_uint8",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5548:16:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5548:54:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5548:54:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "5611:46:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5643:6:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5651:4:11",
                                                                            "type": "",
                                                                            "value": "0x60"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5639:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5639:17:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5633:5:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5633:24:11"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_2",
                                                                "nodeType": "YulTypedName",
                                                                "src": "5615:14:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_2",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5683:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5703:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5714:4:11",
                                                                            "type": "",
                                                                            "value": "0x60"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5699:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5699:20:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_uint8",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5666:16:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5666:54:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5666:54:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5740:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5751:4:11",
                                                                            "type": "",
                                                                            "value": "0x80"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5736:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5736:20:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "5768:6:11"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "5776:4:11",
                                                                                    "type": "",
                                                                                    "value": "0x80"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "5764:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "5764:17:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "mload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5758:5:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5758:24:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5729:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5729:54:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5729:54:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5803:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5814:4:11",
                                                                            "type": "",
                                                                            "value": "0xa0"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5799:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5799:20:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "5831:6:11"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "5839:4:11",
                                                                                    "type": "",
                                                                                    "value": "0xa0"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "5827:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "5827:17:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "mload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5821:5:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5821:24:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5792:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5792:54:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5792:54:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "5855:46:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5887:6:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5895:4:11",
                                                                            "type": "",
                                                                            "value": "0xc0"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5883:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5883:17:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5877:5:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5877:24:11"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_3",
                                                                "nodeType": "YulTypedName",
                                                                "src": "5859:14:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_3",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "5929:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5949:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5960:4:11",
                                                                            "type": "",
                                                                            "value": "0xc0"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5945:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5945:20:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5910:18:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5910:56:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5910:56:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "5986:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "5997:4:11",
                                                                            "type": "",
                                                                            "value": "0xe0"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "5982:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "5982:20:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "6014:6:11"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "6022:4:11",
                                                                                    "type": "",
                                                                                    "value": "0xe0"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "6010:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "6010:17:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "mload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6004:5:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6004:24:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "5975:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "5975:54:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "5975:54:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6038:16:11",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "6048:6:11",
                                                            "type": "",
                                                            "value": "0x0100"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_1",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6042:2:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6074:9:11"
                                                                        },
                                                                        {
                                                                            "name": "_1",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6085:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6070:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6070:18:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "6100:6:11"
                                                                                },
                                                                                {
                                                                                    "name": "_1",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "6108:2:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "6096:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "6096:15:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "mload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6090:5:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6090:22:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6063:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6063:50:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6063:50:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6122:16:11",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "6132:6:11",
                                                            "type": "",
                                                            "value": "0x0120"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_2",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6126:2:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6158:9:11"
                                                                        },
                                                                        {
                                                                            "name": "_2",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6169:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6154:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6154:18:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "6184:6:11"
                                                                                },
                                                                                {
                                                                                    "name": "_2",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "6192:2:11"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "add",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "6180:3:11"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "6180:15:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "mload",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6174:5:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6174:22:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6147:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6147:50:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6147:50:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6206:16:11",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "6216:6:11",
                                                            "type": "",
                                                            "value": "0x0140"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_3",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6210:2:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6231:44:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6263:6:11"
                                                                        },
                                                                        {
                                                                            "name": "_3",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6271:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6259:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6259:15:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6253:5:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6253:22:11"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_4",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6235:14:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_4",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6300:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6320:9:11"
                                                                        },
                                                                        {
                                                                            "name": "_3",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6331:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6316:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6316:18:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6284:15:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6284:51:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6284:51:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6344:16:11",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "6354:6:11",
                                                            "type": "",
                                                            "value": "0x0160"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_4",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6348:2:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6369:44:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6401:6:11"
                                                                        },
                                                                        {
                                                                            "name": "_4",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6409:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6397:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6397:15:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6391:5:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6391:22:11"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_5",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6373:14:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_5",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6438:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6458:9:11"
                                                                        },
                                                                        {
                                                                            "name": "_4",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6469:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6454:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6454:18:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6422:15:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6422:51:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6422:51:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6482:16:11",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "6492:6:11",
                                                            "type": "",
                                                            "value": "0x0180"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_5",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6486:2:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6507:44:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6539:6:11"
                                                                        },
                                                                        {
                                                                            "name": "_5",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6547:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6535:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6535:15:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6529:5:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6529:22:11"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_6",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6511:14:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_6",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6579:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6599:9:11"
                                                                        },
                                                                        {
                                                                            "name": "_5",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6610:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6595:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6595:18:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_address",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6560:18:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6560:54:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6560:54:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6623:16:11",
                                                        "value": {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "6633:6:11",
                                                            "type": "",
                                                            "value": "0x01a0"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "_6",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6627:2:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6648:44:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6680:6:11"
                                                                        },
                                                                        {
                                                                            "name": "_6",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6688:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6676:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6676:15:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6670:5:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6670:22:11"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "memberValue0_7",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6652:14:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "memberValue0_7",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6717:14:11"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6737:9:11"
                                                                        },
                                                                        {
                                                                            "name": "_6",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6748:2:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6733:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6733:18:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "abi_encode_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6701:15:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6701:51:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6701:51:11"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_struct$_Info_$794_memory_ptr__to_t_struct$_Info_$794_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "5260:9:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "5271:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "5282:4:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "5148:1610:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "6841:167:11",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "6887:16:11",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "6896:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "6899:1:11",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6889:6:11"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "6889:12:11"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "6889:12:11"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6862:7:11"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "6871:9:11"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "6858:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6858:23:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "6883:2:11",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6854:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6854:32:11"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "6851:52:11"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "6912:29:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6931:9:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6925:5:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6925:16:11"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulTypedName",
                                                                "src": "6916:5:11",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "value",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6972:5:11"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "validator_revert_bool",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6950:21:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "6950:28:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "6950:28:11"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "6987:15:11",
                                                        "value": {
                                                            "name": "value",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "6997:5:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6987:6:11"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_bool_fromMemory",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "6807:9:11",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "6818:7:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "6830:6:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "6763:245:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "7187:172:11",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7204:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7215:2:11",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7197:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7197:21:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7197:21:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "7238:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "7249:2:11",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "7234:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7234:18:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7254:2:11",
                                                                    "type": "",
                                                                    "value": "22"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7227:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7227:30:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7227:30:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "7277:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "7288:2:11",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "7273:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7273:18:11"
                                                                },
                                                                {
                                                                    "hexValue": "796f752068617665206e6f7420746865207269676874",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7293:24:11",
                                                                    "type": "",
                                                                    "value": "you have not the right"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7266:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7266:52:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7266:52:11"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "7327:26:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7339:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7350:2:11",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7335:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7335:18:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7327:4:11"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "7164:9:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "7178:4:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "7013:346:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "7538:172:11",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7555:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7566:2:11",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7548:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7548:21:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7548:21:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "7589:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "7600:2:11",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "7585:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7585:18:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7605:2:11",
                                                                    "type": "",
                                                                    "value": "22"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7578:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7578:30:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7578:30:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "7628:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "7639:2:11",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "7624:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7624:18:11"
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e206973206e6f7420657869737473",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7644:24:11",
                                                                    "type": "",
                                                                    "value": "the coin is not exists"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7617:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7617:52:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7617:52:11"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "7678:26:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7690:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7701:2:11",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7686:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7686:18:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7678:4:11"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "7515:9:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "7529:4:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "7364:346:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "7889:179:11",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "7906:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7917:2:11",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7899:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7899:21:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7899:21:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "7940:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "7951:2:11",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "7936:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7936:18:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7956:2:11",
                                                                    "type": "",
                                                                    "value": "29"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7929:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7929:30:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7929:30:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "7979:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "7990:2:11",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "7975:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "7975:18:11"
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e2065786973747320696e20746865206d61726b6574",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "7995:31:11",
                                                                    "type": "",
                                                                    "value": "the coin exists in the market"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "7968:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "7968:59:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "7968:59:11"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "8036:26:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "8048:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8059:2:11",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8044:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8044:18:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8036:4:11"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "7866:9:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "7880:4:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "7715:353:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "8247:182:11",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "8264:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8275:2:11",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8257:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8257:21:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8257:21:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "8298:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "8309:2:11",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "8294:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "8294:18:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8314:2:11",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8287:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8287:30:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8287:30:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "8337:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "8348:2:11",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "8333:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "8333:18:11"
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e2073636f7065206973206e6f74206a757374696669656420",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8353:34:11",
                                                                    "type": "",
                                                                    "value": "the coin scope is not justified "
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8326:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8326:62:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8326:62:11"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "8397:26:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "8409:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8420:2:11",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8405:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8405:18:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8397:4:11"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_d35edcbfadff3d182421fe87d6d101d172666bcdd07b46d70b2a94d2cce5545f__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "8224:9:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "8238:4:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "8073:356:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "8608:179:11",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "8625:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8636:2:11",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8618:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8618:21:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8618:21:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "8659:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "8670:2:11",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "8655:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "8655:18:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8675:2:11",
                                                                    "type": "",
                                                                    "value": "29"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8648:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8648:30:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8648:30:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "8698:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "8709:2:11",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "8694:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "8694:18:11"
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e206973202065786973747320696e206d61726b6574",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8714:31:11",
                                                                    "type": "",
                                                                    "value": "the coin is  exists in market"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8687:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8687:59:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8687:59:11"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "8755:26:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "8767:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8778:2:11",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8763:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8763:18:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8755:4:11"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_81cb1dfb23a252b826bafd64e1a5e758717edd6cb6cf234d6b50e48a1bea516b__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "8585:9:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "8599:4:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "8434:353:11"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "8966:177:11",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "8983:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "8994:2:11",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "8976:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "8976:21:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "8976:21:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "9017:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "9028:2:11",
                                                                            "type": "",
                                                                            "value": "32"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "9013:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "9013:18:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "9033:2:11",
                                                                    "type": "",
                                                                    "value": "27"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "9006:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "9006:30:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "9006:30:11"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "9056:9:11"
                                                                        },
                                                                        {
                                                                            "kind": "number",
                                                                            "nodeType": "YulLiteral",
                                                                            "src": "9067:2:11",
                                                                            "type": "",
                                                                            "value": "64"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "add",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "9052:3:11"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "9052:18:11"
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e2065786973747320696e207468652067617465",
                                                                    "kind": "string",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "9072:29:11",
                                                                    "type": "",
                                                                    "value": "the coin exists in the gate"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "9045:6:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "9045:57:11"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "9045:57:11"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "9111:26:11",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "9123:9:11"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "9134:2:11",
                                                                    "type": "",
                                                                    "value": "96"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "9119:3:11"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "9119:18:11"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "9111:4:11"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_stringliteral_55b5ab3acaf98f73f24e340e3fce4376f33427349016b0431ff2c4efa932d18e__to_t_string_memory_ptr__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "8943:9:11",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "8957:4:11",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "8792:351:11"
                                        }
                                    ]
                                },
                                "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 448)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_bytes6(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, shl(208, 0xffffffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_bool(value)\n    }\n    function abi_decode_tuple_t_struct$_Info_$794_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 448) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, calldataload(headStart))\n        mstore(add(value, 32), abi_decode_bytes6(add(headStart, 32)))\n        mstore(add(value, 64), abi_decode_uint8(add(headStart, 64)))\n        mstore(add(value, 96), abi_decode_uint8(add(headStart, 96)))\n        mstore(add(value, 128), calldataload(add(headStart, 128)))\n        mstore(add(value, 160), calldataload(add(headStart, 160)))\n        mstore(add(value, 192), abi_decode_address(add(headStart, 192)))\n        mstore(add(value, 224), calldataload(add(headStart, 224)))\n        let _1 := 256\n        mstore(add(value, _1), calldataload(add(headStart, _1)))\n        let _2 := 288\n        mstore(add(value, _2), calldataload(add(headStart, _2)))\n        let _3 := 320\n        mstore(add(value, _3), abi_decode_bool(add(headStart, _3)))\n        let _4 := 352\n        mstore(add(value, _4), abi_decode_bool(add(headStart, _4)))\n        let _5 := 384\n        mstore(add(value, _5), abi_decode_address(add(headStart, _5)))\n        let _6 := 416\n        mstore(add(value, _6), abi_decode_bool(add(headStart, _6)))\n        value0 := value\n    }\n    function abi_encode_bytes6(value, pos)\n    {\n        mstore(pos, and(value, shl(208, 0xffffffffffff)))\n    }\n    function abi_encode_uint8(value, pos)\n    { mstore(pos, and(value, 0xff)) }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes6_t_uint8_t_uint8_t_uint256_t_uint256_t_address_t_bytes32_t_bytes32_t_bytes32_t_bool_t_bool_t_address_t_bool__to_t_bytes32_t_bytes6_t_uint8_t_uint8_t_uint256_t_uint256_t_address_t_bytes32_t_bytes32_t_bytes32_t_bool_t_bool_t_address_t_bool__fromStack_reversed(headStart, value13, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 448)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, shl(208, 0xffffffffffff)))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        abi_encode_uint8(value3, add(headStart, 96))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        abi_encode_address(value6, add(headStart, 192))\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        abi_encode_bool(value10, add(headStart, 320))\n        abi_encode_bool(value11, add(headStart, 352))\n        abi_encode_address(value12, add(headStart, 384))\n        abi_encode_bool(value13, add(headStart, 416))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_Info_$794_memory_ptr__to_t_struct$_Info_$794_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 448)\n        mstore(headStart, mload(value0))\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_bytes6(memberValue0, add(headStart, 0x20))\n        let memberValue0_1 := mload(add(value0, 0x40))\n        abi_encode_uint8(memberValue0_1, add(headStart, 0x40))\n        let memberValue0_2 := mload(add(value0, 0x60))\n        abi_encode_uint8(memberValue0_2, add(headStart, 0x60))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        let memberValue0_3 := mload(add(value0, 0xc0))\n        abi_encode_address(memberValue0_3, add(headStart, 0xc0))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n        let _1 := 0x0100\n        mstore(add(headStart, _1), mload(add(value0, _1)))\n        let _2 := 0x0120\n        mstore(add(headStart, _2), mload(add(value0, _2)))\n        let _3 := 0x0140\n        let memberValue0_4 := mload(add(value0, _3))\n        abi_encode_bool(memberValue0_4, add(headStart, _3))\n        let _4 := 0x0160\n        let memberValue0_5 := mload(add(value0, _4))\n        abi_encode_bool(memberValue0_5, add(headStart, _4))\n        let _5 := 0x0180\n        let memberValue0_6 := mload(add(value0, _5))\n        abi_encode_address(memberValue0_6, add(headStart, _5))\n        let _6 := 0x01a0\n        let memberValue0_7 := mload(add(value0, _6))\n        abi_encode_bool(memberValue0_7, add(headStart, _6))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"you have not the right\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"the coin is not exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"the coin exists in the market\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d35edcbfadff3d182421fe87d6d101d172666bcdd07b46d70b2a94d2cce5545f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"the coin scope is not justified \")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_81cb1dfb23a252b826bafd64e1a5e758717edd6cb6cf234d6b50e48a1bea516b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"the coin is  exists in market\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_55b5ab3acaf98f73f24e340e3fce4376f33427349016b0431ff2c4efa932d18e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"the coin exists in the gate\")\n        tail := add(headStart, 96)\n    }\n}",
                                "id": 11,
                                "language": "Yul",
                                "name": "#utility.yul"
                            }
                        ],
                        "immutableReferences": {
                            "24": [
                                {
                                    "length": 32,
                                    "start": 691
                                },
                                {
                                    "length": 32,
                                    "start": 1712
                                },
                                {
                                    "length": 32,
                                    "start": 1967
                                },
                                {
                                    "length": 32,
                                    "start": 3561
                                },
                                {
                                    "length": 32,
                                    "start": 5176
                                }
                            ],
                            "26": [
                                {
                                    "length": 32,
                                    "start": 730
                                },
                                {
                                    "length": 32,
                                    "start": 1002
                                },
                                {
                                    "length": 32,
                                    "start": 1180
                                },
                                {
                                    "length": 32,
                                    "start": 2209
                                },
                                {
                                    "length": 32,
                                    "start": 2409
                                },
                                {
                                    "length": 32,
                                    "start": 2643
                                },
                                {
                                    "length": 32,
                                    "start": 4191
                                },
                                {
                                    "length": 32,
                                    "start": 4366
                                },
                                {
                                    "length": 32,
                                    "start": 6269
                                }
                            ]
                        },
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5385CBF5 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCC0BF757 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCC0BF757 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xCFCDCA52 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xE8DD4655 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xE911ABEC EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xEAEC0112 EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5385CBF5 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x7C3E2F02 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x87A70938 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xA935B6AF EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xB20BE2B4 EQ PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x385E4B7A GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x385E4B7A EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x3B830305 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x441EB548 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x47D0A634 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x492B7107 EQ PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D3B8F67 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x24FD7139 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x31ECDEB8 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x328320BF EQ PUSH2 0x208 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x7 DUP8 ADD SLOAD PUSH1 0x8 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP8 PUSH1 0xD0 DUP2 SWAP1 SHL SWAP8 PUSH1 0xFF PUSH1 0x1 PUSH1 0x30 SHL DUP4 DIV DUP2 AND SWAP9 PUSH1 0x1 PUSH1 0x38 SHL SWAP1 SWAP4 DIV DUP2 AND SWAP8 SWAP7 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 SWAP5 SWAP4 DUP1 DUP4 AND SWAP3 PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH3 0x10000 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV AND DUP15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP15 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x139 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x283 PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x139 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x7AD JUMP JUMPDEST PUSH2 0x283 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x283 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST PUSH2 0x139 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x967 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x105D JUMP JUMPDEST PUSH2 0x283 PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0x110C JUMP JUMPDEST PUSH2 0x3B5 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x199F JUMP JUMPDEST PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x139 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0x187B JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x446 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD DUP2 DUP2 MSTORE PUSH2 0x160 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP11 KECCAK256 PUSH1 0x8 SWAP1 DUP2 ADD SLOAD PUSH3 0x10000 SWAP1 DUP2 SWAP1 DIV DUP7 AND PUSH2 0x180 DUP15 ADD SWAP1 DUP2 MSTORE DUP8 MLOAD DUP8 AND DUP14 MSTORE DUP6 DUP6 MSTORE SWAP12 DUP4 SWAP1 KECCAK256 DUP14 MLOAD DUP2 SSTORE SWAP4 DUP14 ADD MLOAD SWAP9 DUP5 ADD DUP1 SLOAD SWAP4 DUP15 ADD MLOAD PUSH1 0x60 DUP16 ADD MLOAD PUSH1 0xD0 SWAP12 SWAP1 SWAP12 SHR PUSH7 0xFFFFFFFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x30 SHL PUSH1 0xFF SWAP6 DUP7 AND MUL OR PUSH1 0xFF PUSH1 0x38 SHL NOT AND PUSH1 0x1 PUSH1 0x38 SHL SWAP5 SWAP1 SWAP11 AND SWAP4 SWAP1 SWAP4 MUL SWAP9 SWAP1 SWAP9 OR SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP12 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xA0 DUP11 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE SWAP3 MLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP10 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x120 SWAP1 SWAP10 ADD MLOAD PUSH1 0x7 DUP5 ADD SSTORE SWAP6 MLOAD SWAP2 SWAP1 SWAP6 ADD DUP1 SLOAD SWAP5 MLOAD SWAP7 MLOAD SWAP3 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP2 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP2 SWAP1 SWAP2 OR SWAP6 ISZERO ISZERO SWAP1 SWAP7 MUL SWAP5 SWAP1 SWAP5 OR PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP4 SWAP1 SWAP3 AND SWAP1 SWAP2 MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xB0 SHL SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x54A460F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x730 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x54A460F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82F SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x921 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x92A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x30 SHL MUL PUSH7 0xFF000000000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E9 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD3 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0xADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xD49 JUMPI CALLER DUP2 PUSH2 0x180 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x140 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x160 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH2 0x1A0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xD0 SHR MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 DUP1 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2065786973747320696E20746865206D61726B6574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77B JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x54A460F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE69 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0xE72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0xEB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D1C JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND PUSH1 0x4 EQ PUSH2 0xF10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2073636F7065206973206E6F74206A757374696669656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD DUP2 DUP2 MSTORE PUSH2 0x160 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH2 0x1A0 DUP6 ADD DUP2 DUP2 MSTORE CALLER PUSH2 0x180 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xC0 DUP8 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP10 DUP11 SWAP1 KECCAK256 DUP12 MLOAD DUP2 SSTORE SWAP1 DUP12 ADD MLOAD SWAP7 DUP2 ADD DUP1 SLOAD SWAP11 DUP13 ADD MLOAD PUSH1 0x60 DUP14 ADD MLOAD PUSH1 0xD0 SWAP10 SWAP1 SWAP10 SHR PUSH7 0xFFFFFFFFFFFFFF NOT SWAP1 SWAP13 AND SWAP12 SWAP1 SWAP12 OR PUSH1 0x1 PUSH1 0x30 SHL PUSH1 0xFF SWAP13 DUP14 AND MUL OR PUSH1 0xFF PUSH1 0x38 SHL NOT AND PUSH1 0x1 PUSH1 0x38 SHL SWAP12 SWAP1 SWAP9 AND SWAP11 SWAP1 SWAP11 MUL SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP9 SSTORE PUSH1 0x80 DUP10 ADD MLOAD SWAP8 DUP6 ADD SWAP8 SWAP1 SWAP8 SSTORE PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE MLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH2 0x100 DUP1 DUP9 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x120 SWAP1 SWAP8 ADD MLOAD PUSH1 0x7 DUP5 ADD SSTORE SWAP4 MLOAD PUSH1 0x8 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP4 MLOAD SWAP5 MLOAD SWAP2 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP3 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP3 SWAP1 SWAP3 OR SWAP4 ISZERO ISZERO SWAP1 SWAP6 MUL SWAP3 SWAP1 SWAP3 OR PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND PUSH3 0x10000 SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xB0 SHL SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10DF SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x116A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118E SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND PUSH2 0x11DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x1243 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E206973202065786973747320696E206D61726B6574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP5 AND DUP4 MSTORE DUP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 DUP5 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP4 SSTORE SWAP3 SWAP1 SWAP3 MSTORE DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1C0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1A0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D4C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x1C0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT PUSH1 0xD0 DUP3 SWAP1 SHL AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x30 SHL DUP5 DIV DUP2 AND SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x38 SHL SWAP1 SWAP3 DIV DUP5 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP5 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH2 0x100 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x8 SWAP1 SWAP3 ADD SLOAD DUP1 DUP5 AND ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE SWAP2 DUP3 DIV DUP4 AND ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE PUSH3 0x10000 DUP3 DIV SWAP1 SWAP4 AND PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV AND ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x54A460F6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1494 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B8 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x14C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1752 JUMPI CALLER DUP2 PUSH2 0x180 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x140 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH2 0x160 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH2 0x1A0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xD0 SHR MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x17BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2065786973747320696E20746865206D61726B6574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND ISZERO PUSH2 0x1837 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74686520636F696E2065786973747320696E2074686520676174650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77B JUMP JUMPDEST PUSH1 0xC0 ADD DUP1 MLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD87D2BA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18FD SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH2 0x1906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x194B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19BA DUP3 PUSH2 0x1983 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x19F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x199A DUP2 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A56 PUSH2 0x19C1 JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE PUSH2 0x1A66 PUSH1 0x20 DUP5 ADD PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1A77 PUSH1 0x40 DUP5 ADD PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1A88 PUSH1 0x60 DUP5 ADD PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x1AAD PUSH1 0xC0 DUP5 ADD PUSH2 0x1983 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x1AE0 DUP2 DUP6 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0x1AF2 DUP5 DUP3 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x180 PUSH2 0x1B04 DUP5 DUP3 ADD PUSH2 0x1983 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 PUSH2 0x1B16 DUP5 DUP3 ADD PUSH2 0x1A30 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP15 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT DUP15 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xFF DUP14 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP13 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C0 DUP2 ADD DUP12 PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1B6B PUSH1 0xC0 DUP4 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST DUP9 PUSH1 0xE0 DUP4 ADD MSTORE DUP8 PUSH2 0x100 DUP4 ADD MSTORE DUP7 PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x1B8E PUSH2 0x140 DUP4 ADD DUP8 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH2 0x180 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x1A0 SWAP1 SWAP2 ADD MSTORE SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BDD DUP4 PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEB PUSH1 0x20 DUP5 ADD PUSH2 0x1A11 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C10 DUP4 PUSH2 0x1983 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEB PUSH1 0x20 DUP5 ADD PUSH2 0x1983 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH2 0x1C0 DUP4 ADD SWAP2 PUSH2 0x1C43 SWAP1 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1C58 PUSH1 0x40 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1C6D PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x1C9C PUSH1 0xC0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 DUP2 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x140 DUP1 DUP5 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x160 DUP1 DUP5 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x180 DUP1 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH2 0x1A0 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19BA DUP2 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x1E5BDD481A185D99481B9BDD081D1A19481C9A59DA1D PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x74686520636F696E206973206E6F7420657869737473 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xB9 CALLER 0x4D 0xB9 0xC1 0x24 0xC1 0xB5 DIV PUSH16 0x2BDD27D54DD0A39A2B379402EBDA0AC9 0x5D SIGNEXTEND 0xDA 0x26 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
                        "sourceMap": "249:7052:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2934:169;;;;;;:::i;:::-;;:::i;:::-;;3109:419;;;;;;:::i;:::-;;:::i;720:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;720:46:0;;;;;-1:-1:-1;;;720:46:0;;;;;;;;-1:-1:-1;;;;;720:46:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;720:46:0;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;7170:129;;;;;;:::i;:::-;-1:-1:-1;;;;;7257:22:0;7234:4;7257:22;;;:8;:22;;;;;:35;;;;;;7170:129;;;;4387:14:11;;4380:22;4362:41;;4350:2;4335:18;7170:129:0;4222:187:11;5807:288:0;;;;;;:::i;:::-;;:::i;392:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;392:49:0;;;;;;-1:-1:-1;;;;;4578:32:11;;;4560:51;;4548:2;4533:18;392:49:0;4414:203:11;6101:267:0;;;;;;:::i;:::-;;:::i;773:45::-;;;;;824:48;;;;;2569:185;;;;;;:::i;:::-;;:::i;4115:256::-;;;;;;:::i;:::-;;:::i;1784:779::-;;;;;;:::i;:::-;;:::i;6374:497::-;;;;;;:::i;:::-;;:::i;2760:168::-;;;;;;:::i;:::-;;:::i;561:67::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;561:67:0;;;3534:575;;;;;;:::i;:::-;;:::i;6877:287::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4843:958::-;;;;;;:::i;:::-;;:::i;4377:328::-;;;;;;:::i;:::-;;:::i;2934:169::-;1476:23;-1:-1:-1;;;;;1459:57:0;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1451:68;;;;;;-1:-1:-1;;;;;3046:30:0::1;;::::0;;;:8:::1;:30;::::0;;;;:43:::1;;:50:::0;;-1:-1:-1;;3046:50:0::1;3092:4;3046:50;::::0;;2934:169::o;3109:419::-;1476:23;-1:-1:-1;;;;;1459:57:0;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1451:68;;;;;;3243:25:::1;::::0;::::1;::::0;-1:-1:-1;;;;;3228:41:0;;::::1;3281:1;3228:41:::0;;;::::1;::::0;;;;;;;::::1;3220:64;;;::::0;::::1;;3319:5;3294:22;::::0;::::1;:30:::0;;;3334:16:::1;::::0;::::1;:24:::0;;;3294:30;3368:16:::1;::::0;::::1;:23:::0;;;3430:25:::1;::::0;::::1;::::0;;-1:-1:-1;;;;;3421:35:0;;::::1;::::0;;:8:::1;:35;::::0;;;;;;;:43:::1;::::0;;::::1;::::0;;;;;::::1;::::0;::::1;3401:17;::::0;::::1;:63:::0;;;3483:25;;3474:35;::::1;::::0;;;;;;;;;:47;;;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;-1:-1:-1::0;;3474:47:0;;;;;;;-1:-1:-1;;;3474:47:0::1;::::0;;::::1;;;-1:-1:-1::0;;;;3474:47:0::1;-1:-1:-1::0;;;3474:47:0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;3474:47:0::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;3421:43:::1;3474:47:::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;;;;;;;-1:-1:-1;;3474:47:0;;;;::::1;;-1:-1:-1::0;;3474:47:0;;;;;;::::1;;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;;3474:47:0;;;;::::1;::::0;;::::1;-1:-1:-1::0;;;;3474:47:0;;;;;-1:-1:-1;;;3474:47:0;::::1;;::::0;;;::::1;;::::0;;3109:419::o;5807:288::-;1356:20;-1:-1:-1;;;;;1342:48:0;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1334:59;;;;;;-1:-1:-1;;;;;5934:30:0;;::::1;;::::0;;;:8:::1;:30;::::0;;;;:38:::1;;::::0;;;::::1;;5976:10;5934:52;5913:121;;;;-1:-1:-1::0;;;5913:121:0::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;6044:30:0::1;;::::0;;;:8:::1;:30;::::0;;;;:37:::1;;:44:::0;;-1:-1:-1;;6044:44:0::1;;;::::0;;5807:288::o;6101:267::-;1356:20;-1:-1:-1;;;;;1342:48:0;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1334:59;;;;;;-1:-1:-1;;;;;6206:30:0;;::::1;;::::0;;;:8:::1;:30;::::0;;;;:38:::1;;::::0;;;::::1;;6248:10;6206:52;6185:121;;;;-1:-1:-1::0;;;6185:121:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6316:30:0::1;6356:5;6316:30:::0;;;:8:::1;:30;::::0;;;;:37:::1;;:45:::0;;-1:-1:-1;;6316:45:0::1;::::0;;6101:267::o;2569:185::-;1476:23;-1:-1:-1;;;;;1459:57:0;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1451:68;;;;;;-1:-1:-1;;;;;2702:30:0;;::::1;;::::0;;;:8:::1;:30;::::0;;;;:36:::1;;:45:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;2702:45:0::1;-1:-1:-1::0;;2702:45:0;;::::1;::::0;;;::::1;::::0;;2569:185::o;4115:256::-;1476:23;-1:-1:-1;;;;;1459:57:0;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1451:68;;;;;;-1:-1:-1;;;;;4221:32:0;;::::1;4265:1;4221:32:::0;;;::::1;::::0;;;;;;;::::1;:46:::0;4200:115:::1;;;;-1:-1:-1::0;;;4200:115:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4332:32:0::1;:14;:32:::0;;;::::1;::::0;;;;;;4325:39;;-1:-1:-1;;;;;;4325:39:0::1;::::0;;4115:256::o;1784:779::-;1476:23;-1:-1:-1;;;;;1459:57:0;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1451:68;;;;;;1905:25:::1;::::0;::::1;::::0;-1:-1:-1;;;;;1896:35:0::1;;::::0;;;:8:::1;:35;::::0;;;;:42:::1;;::::0;-1:-1:-1;;;1896:42:0;::::1;;;:50;;1942:4;1896:50;1892:665;;1982:10;1962:9;:17;;:30;-1:-1:-1::0;;;;;1962:30:0::1;;;-1:-1:-1::0;;;;;1962:30:0::1;;;::::0;::::1;2031:5;2006:9;:22;;:30;;;;;;;;;::::0;::::1;2069:5;2050:9;:16;;:24;;;;;;;;;::::0;::::1;2107:4;2088:9;:16;;:23;;;;;;;;;::::0;::::1;2163:9;2125:8;:35;2134:9;:25;;;-1:-1:-1::0;;;;;2125:35:0::1;-1:-1:-1::0;;;;;2125:35:0::1;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;2125:47:0::1;;;;;-1:-1:-1::0;;;;;2125:47:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;2125:47:0::1;;;;;-1:-1:-1::0;;;;;2125:47:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2230:9;:42;;;2186:14;:41:::0;2201:9:::1;:25;;;-1:-1:-1::0;;;;;2186:41:0::1;-1:-1:-1::0;;;;;2186:41:0::1;;;;;;;;;;;;;:86;;;;;-1:-1:-1::0;;;;;2186:86:0::1;;;;;-1:-1:-1::0;;;;;2186:86:0::1;;;;;;1784:779:::0;:::o;1892:665::-:1;2343:25;::::0;::::1;::::0;-1:-1:-1;;;;;2328:41:0;;::::1;2381:1;2328:41:::0;;;::::1;::::0;;;;;;;::::1;:55:::0;2303:143:::1;;;::::0;-1:-1:-1;;;2303:143:0;;7917:2:11;2303:143:0::1;::::0;::::1;7899:21:11::0;7956:2;7936:18;;;7929:30;7995:31;7975:18;;;7968:59;8044:18;;2303:143:0::1;7715:353:11::0;2303:143:0::1;2504:42;::::0;::::1;::::0;-1:-1:-1;;;;;2460:41:0::1;:14;:41:::0;;;::::1;::::0;;;;;;:86;;-1:-1:-1;;;;;;2460:86:0::1;::::0;;::::1;::::0;;1892:665:::1;1784:779:::0;:::o;6374:497::-;1356:20;-1:-1:-1;;;;;1342:48:0;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1334:59;;;;;;6489:25:::1;::::0;::::1;::::0;-1:-1:-1;;;;;6480:35:0;;::::1;;::::0;;;:8:::1;:35;::::0;;;;:43:::1;;::::0;;;::::1;;6527:10;6480:57;6459:126;;;;-1:-1:-1::0;;;6459:126:0::1;;;;;;;:::i;:::-;6603:9;:15;;;:20;;6622:1;6603:20;6595:65;;;::::0;-1:-1:-1;;;6595:65:0;;8275:2:11;6595:65:0::1;::::0;::::1;8257:21:11::0;;;8294:18;;;8287:30;8353:34;8333:18;;;8326:62;8405:18;;6595:65:0::1;8073:356:11::0;6595:65:0::1;6695:5;6670:22;::::0;::::1;:30:::0;;;6710:16:::1;::::0;::::1;:24:::0;;;6670:30;6744:16:::1;::::0;::::1;:23:::0;;;6797:10:::1;6777:17;::::0;::::1;:30:::0;;;6826:25:::1;::::0;::::1;::::0;;-1:-1:-1;;;;;6817:35:0;;::::1;::::0;;:8:::1;-1:-1:-1::0;6817:35:0;;;;;;;;:47;;;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;-1:-1:-1::0;;6817:47:0;;;;;;;-1:-1:-1;;;6817:47:0::1;::::0;;::::1;;;-1:-1:-1::0;;;;6817:47:0::1;-1:-1:-1::0;;;6817:47:0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;6817:47:0::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;6817:47:0;;;;::::1;;-1:-1:-1::0;;6817:47:0;;;;;;::::1;;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;;6817:47:0;;;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;6817:47:0;;;;;-1:-1:-1;;;6817:47:0;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;6374:497::o;2760:168::-;1476:23;-1:-1:-1;;;;;1459:57:0;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1451:68;;;;;;-1:-1:-1;;;;;2870:30:0::1;2916:5;2870:30:::0;;;:8:::1;:30;::::0;;;;:43:::1;;:51:::0;;-1:-1:-1;;2870:51:0::1;::::0;;2760:168::o;3534:575::-;1476:23;-1:-1:-1;;;;;1459:57:0;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1451:68;;;;;;-1:-1:-1;;;;;3691:26:0;;::::1;3747:1;3691:26:::0;;;:12:::1;:26;::::0;;;;;;;:44;;::::1;::::0;;;;;;;;::::1;3670:127;;;;-1:-1:-1::0;;;3670:127:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3828:32:0;;::::1;3872:1;3828:32:::0;;;::::1;::::0;;;;;;;::::1;:46:::0;3807:122:::1;;;::::0;-1:-1:-1;;;3807:122:0;;8636:2:11;3807:122:0::1;::::0;::::1;8618:21:11::0;8675:2;8655:18;;;8648:30;8714:31;8694:18;;;8687:59;8763:18;;3807:122:0::1;8434:353:11::0;3807:122:0::1;-1:-1:-1::0;;;;;3974:26:0;;::::1;;::::0;;;:12:::1;:26;::::0;;;;;;;:66;;::::1;::::0;;;;;;;;;;3939:32;;;;;;;:101;;3974:66;;;::::1;-1:-1:-1::0;;;;;;3939:101:0;;::::1;;::::0;;;4058:44;;;;4051:51;;::::1;::::0;;3534:575::o;6877:287::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7025:26:0;;;;;;:8;:26;;;;;:33;;;-1:-1:-1;;;7025:33:0;;;;:41;;7062:4;7025:41;7004:110;;;;-1:-1:-1;;;7004:110:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;;7131:26:0;;;;;;;:8;:26;;;;;;;;;7124:33;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7124:33:0;;;;;;;;;;;;;-1:-1:-1;;;7124:33:0;;;;;;;;;;;-1:-1:-1;;;7124:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7124:33:0;;;;;;;;;;6877:287::o;4843:958::-;1356:20;-1:-1:-1;;;;;1342:48:0;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1334:59;;;;;;4938:25:::1;::::0;::::1;::::0;-1:-1:-1;;;;;4929:35:0::1;;::::0;;;:8:::1;:35;::::0;;;;:42:::1;;::::0;-1:-1:-1;;;4929:42:0;::::1;;;:50;;4975:4;4929:50;4925:870;;5015:10;4995:9;:17;;:30;-1:-1:-1::0;;;;;4995:30:0::1;;;-1:-1:-1::0;;;;;4995:30:0::1;;;::::0;::::1;5064:5;5039:9;:22;;:30;;;;;;;;;::::0;::::1;5102:5;5083:9;:16;;:24;;;;;;;;;::::0;::::1;5140:4;5121:9;:16;;:23;;;;;;;;;::::0;::::1;5196:9;5158:8;:35;5167:9;:25;;;-1:-1:-1::0;;;;;5158:35:0::1;-1:-1:-1::0;;;;;5158:35:0::1;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;5158:47:0::1;;;;;-1:-1:-1::0;;;;;5158:47:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;5158:47:0::1;;;;;-1:-1:-1::0;;;;;5158:47:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5273:9;:42;;;5219:12;:24;5232:10;-1:-1:-1::0;;;;;5219:24:0::1;-1:-1:-1::0;;;;;5219:24:0::1;;;;;;;;;;;;:51;5244:9;:25;;;-1:-1:-1::0;;;;;5219:51:0::1;-1:-1:-1::0;;;;;5219:51:0::1;;;;;;;;;;;;;:96;;;;;-1:-1:-1::0;;;;;5219:96:0::1;;;;;-1:-1:-1::0;;;;;5219:96:0::1;;;;;;1784:779:::0;:::o;4925:870::-:1;5386:25;::::0;::::1;::::0;-1:-1:-1;;;;;5371:41:0;;::::1;5424:1;5371:41:::0;;;::::1;::::0;;;;;;;::::1;:55:::0;5346:143:::1;;;::::0;-1:-1:-1;;;5346:143:0;;7917:2:11;5346:143:0::1;::::0;::::1;7899:21:11::0;7956:2;7936:18;;;7929:30;7995:31;7975:18;;;7968:59;8044:18;;5346:143:0::1;7715:353:11::0;5346:143:0::1;5541:10;5611:1;5528:24:::0;;;:12:::1;:24;::::0;;;;;;;5553:25:::1;::::0;::::1;::::0;-1:-1:-1;;;;;5528:51:0;;::::1;::::0;;;;;;;;::::1;:85:::0;5503:171:::1;;;::::0;-1:-1:-1;;;5503:171:0;;8994:2:11;5503:171:0::1;::::0;::::1;8976:21:11::0;9033:2;9013:18;;;9006:30;9072:29;9052:18;;;9045:57;9119:18;;5503:171:0::1;8792:351:11::0;5503:171:0::1;5742:42;;::::0;;5701:10:::1;5688:24;::::0;;;:12:::1;:24;::::0;;;;;;;5713:25;;-1:-1:-1;;;;;5688:51:0;;::::1;::::0;;;;;;;;:96;;-1:-1:-1;;;;;;5688:96:0::1;::::0;;;::::1;::::0;;;::::1;::::0;;4843:958::o;4377:328::-;1476:23;-1:-1:-1;;;;;1459:57:0;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1451:68;;;;;;-1:-1:-1;;;;;4531:26:0;;::::1;4587:1;4531:26:::0;;;:12:::1;:26;::::0;;;;;;;:44;;::::1;::::0;;;;;;;;::::1;:58:::0;4510:127:::1;;;;-1:-1:-1::0;;;4510:127:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4654:26:0;;::::1;;::::0;;;:12:::1;:26;::::0;;;;;;;:44;;;::::1;::::0;;;;;;;;4647:51;;-1:-1:-1;;;;;;4647:51:0::1;::::0;;4377:328::o;14:173:11:-;82:20;;-1:-1:-1;;;;;131:31:11;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:11:o;383:344::-;450:2;444:9;492:3;480:16;;526:18;511:34;;547:22;;;508:62;505:185;;;612:10;607:3;603:20;600:1;593:31;647:4;644:1;637:15;675:4;672:1;665:15;505:185;706:2;699:22;383:344;:::o;732:177::-;799:20;;-1:-1:-1;;;;;;848:36:11;;838:47;;828:75;;899:1;896;889:12;914:156;980:20;;1040:4;1029:16;;1019:27;;1009:55;;1060:1;1057;1050:12;1075:118;1161:5;1154:13;1147:21;1140:5;1137:32;1127:60;;1183:1;1180;1173:12;1198:128;1263:20;;1292:28;1263:20;1292:28;:::i;1331:1289::-;1411:6;1464:3;1452:9;1443:7;1439:23;1435:33;1432:53;;;1481:1;1478;1471:12;1432:53;1507:17;;:::i;:::-;1560:9;1547:23;1540:5;1533:38;1603:37;1636:2;1625:9;1621:18;1603:37;:::i;:::-;1598:2;1591:5;1587:14;1580:61;1673:36;1705:2;1694:9;1690:18;1673:36;:::i;:::-;1668:2;1661:5;1657:14;1650:60;1742:36;1774:2;1763:9;1759:18;1742:36;:::i;:::-;1737:2;1730:5;1726:14;1719:60;1840:3;1829:9;1825:19;1812:33;1806:3;1799:5;1795:15;1788:58;1907:3;1896:9;1892:19;1879:33;1873:3;1866:5;1862:15;1855:58;1946:39;1980:3;1969:9;1965:19;1946:39;:::i;:::-;1940:3;1929:15;;1922:64;2047:3;2032:19;;;2019:33;2002:15;;;1995:58;2072:3;2120:18;;;2107:32;2091:14;;;2084:56;2159:3;2207:18;;;2194:32;2178:14;;;2171:56;2246:3;2281:35;2297:18;;;2281:35;:::i;:::-;2265:14;;;2258:59;2336:3;2371:35;2387:18;;;2371:35;:::i;:::-;2355:14;;;2348:59;2426:3;2461:38;2480:18;;;2461:38;:::i;:::-;2445:14;;;2438:62;2519:3;2554:35;2570:18;;;2554:35;:::i;:::-;2538:14;;;2531:59;2542:5;1331:1289;-1:-1:-1;;;1331:1289:11:o;3023:1194::-;3510:25;;;-1:-1:-1;;;;;;3571:37:11;;3566:2;3551:18;;3544:65;3657:4;3645:17;;;3640:2;3625:18;;3618:45;2794:16;;3712:2;3697:18;;2782:29;3497:3;3482:19;;3753:6;3747:3;3736:9;3732:19;3725:35;3797:6;3791:3;3780:9;3776:19;3769:35;3813:47;3855:3;3844:9;3840:19;3832:6;-1:-1:-1;;;;;2884:31:11;2872:44;;2818:104;3813:47;3897:6;3891:3;3880:9;3876:19;3869:35;3941:6;3935:3;3924:9;3920:19;3913:35;3985:6;3979:3;3968:9;3964:19;3957:35;4001:45;4041:3;4030:9;4026:19;4017:7;2997:13;2990:21;2978:34;;2927:91;4001:45;2997:13;;2990:21;4095:3;4080:19;;2978:34;-1:-1:-1;;;;;2884:31:11;;;;4152:3;4137:19;;2872:44;2997:13;2990:21;4206:3;4191:19;;;2978:34;3023:1194;;-1:-1:-1;;;;;;;;;;;3023:1194:11:o;4622:256::-;4688:6;4696;4749:2;4737:9;4728:7;4724:23;4720:32;4717:52;;;4765:1;4762;4755:12;4717:52;4788:29;4807:9;4788:29;:::i;:::-;4778:39;;4836:36;4868:2;4857:9;4853:18;4836:36;:::i;:::-;4826:46;;4622:256;;;;;:::o;4883:260::-;4951:6;4959;5012:2;5000:9;4991:7;4987:23;4983:32;4980:52;;;5028:1;5025;5018:12;4980:52;5051:29;5070:9;5051:29;:::i;:::-;5041:39;;5099:38;5133:2;5122:9;5118:18;5099:38;:::i;5148:1610::-;5355:13;;5337:32;;5416:4;5404:17;;;5398:24;5324:3;5309:19;;;5431:53;;5463:20;;5398:24;-1:-1:-1;;;;;;2690:36:11;2678:49;;2625:108;5431:53;;5533:4;5525:6;5521:17;5515:24;5548:54;5596:4;5585:9;5581:20;5565:14;2805:4;2794:16;2782:29;;2738:75;5548:54;;5651:4;5643:6;5639:17;5633:24;5666:54;5714:4;5703:9;5699:20;5683:14;2805:4;2794:16;2782:29;;2738:75;5666:54;;5776:4;5768:6;5764:17;5758:24;5751:4;5740:9;5736:20;5729:54;5839:4;5831:6;5827:17;5821:24;5814:4;5803:9;5799:20;5792:54;5895:4;5887:6;5883:17;5877:24;5910:56;5960:4;5949:9;5945:20;5929:14;-1:-1:-1;;;;;2884:31:11;2872:44;;2818:104;5910:56;-1:-1:-1;6022:4:11;6010:17;;;6004:24;5982:20;;;5975:54;6048:6;6096:15;;;6090:22;6070:18;;;6063:50;6132:6;6180:15;;;6174:22;6154:18;;;6147:50;6216:6;6259:15;;;6253:22;2997:13;2990:21;6316:18;;;2978:34;6354:6;6397:15;;;6391:22;2997:13;2990:21;6454:18;;;2978:34;6492:6;6535:15;;;6529:22;-1:-1:-1;;;;;2884:31:11;6595:18;;;2872:44;6633:6;6676:15;;;6670:22;2997:13;2990:21;6733:18;;;;2978:34;;;;5148:1610;:::o;6763:245::-;6830:6;6883:2;6871:9;6862:7;6858:23;6854:32;6851:52;;;6899:1;6896;6889:12;6851:52;6931:9;6925:16;6950:28;6972:5;6950:28;:::i;7013:346::-;7215:2;7197:21;;;7254:2;7234:18;;;7227:30;-1:-1:-1;;;7288:2:11;7273:18;;7266:52;7350:2;7335:18;;7013:346::o;7364:::-;7566:2;7548:21;;;7605:2;7585:18;;;7578:30;-1:-1:-1;;;7639:2:11;7624:18;;7617:52;7701:2;7686:18;;7364:346::o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "1520400",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "addCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "infinite",
                            "addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "infinite",
                            "changeCoinScopebyMarketor(address,uint8)": "infinite",
                            "coinList(address)": "20106",
                            "delCoinbyMarketor(address)": "infinite",
                            "delGateCoinbyMarketor(address,address)": "infinite",
                            "gateCoinList(address,address)": "infinite",
                            "gatorContractAddress()": "infinite",
                            "getCoinInfo(address)": "23091",
                            "impoveGateCoinbyMarketor(address,address)": "infinite",
                            "isValidCoin(address)": "2645",
                            "lockCoinbyGator(address)": "infinite",
                            "lockCoinbyMarketor(address)": "infinite",
                            "marketCoinList(address)": "2606",
                            "marketorContractAddress()": "infinite",
                            "unlockCoinbyGator(address)": "infinite",
                            "unlockCoinbyMarketor(address)": "infinite",
                            "updateCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "infinite",
                            "updateCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "addCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "e911abec",
                        "addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "87a70938",
                        "changeCoinScopebyMarketor(address,uint8)": "5385cbf5",
                        "coinList(address)": "31ecdeb8",
                        "delCoinbyMarketor(address)": "7c3e2f02",
                        "delGateCoinbyMarketor(address,address)": "eaec0112",
                        "gateCoinList(address,address)": "cc0bf757",
                        "gatorContractAddress()": "47d0a634",
                        "getCoinInfo(address)": "e8dd4655",
                        "impoveGateCoinbyMarketor(address,address)": "cfcdca52",
                        "isValidCoin(address)": "328320bf",
                        "lockCoinbyGator(address)": "441eb548",
                        "lockCoinbyMarketor(address)": "b20be2b4",
                        "marketCoinList(address)": "3b830305",
                        "marketorContractAddress()": "492b7107",
                        "unlockCoinbyGator(address)": "385e4b7a",
                        "unlockCoinbyMarketor(address)": "1d3b8f67",
                        "updateCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "a935b6af",
                        "updateCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "24fd7139"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gatorContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketorContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_scope\",\"type\":\"uint8\"}],\"name\":\"changeCoinScopebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"coinList\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"delCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"delGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gateCoinList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gatorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"getCoinInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"impoveGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coinAddress\",\"type\":\"address\"}],\"name\":\"isValidCoin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketCoinList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))\":{\"details\":\"Explain to a developer any extra details\"}},\"stateVariables\":{\"gatorContractAddress\":{\"return\":\"The contract address\",\"returns\":{\"_0\":\"The contract address\"}},\"marketorContractAddress\":{\"return\":\"The contract address\",\"returns\":{\"_0\":\"The contract address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))\":{\"notice\":\"Explain to an end user what this does\"},\"gatorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"marketorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol\":\"TTSwapV1Coin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol\":{\"keccak256\":\"0x8280ec8149d22dd5c1e9e89c8629f298b01c50c4277e27904519d73865c8e724\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6400d956d001164b17781084e8410dc8ef70c2b5544c7837a3e65f701a786400\",\"dweb:/ipfs/QmWymbPsGZQRRgHbbq5RgxaVy5DGqCBKPXmBxVYQCRFBji\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol\":{\"keccak256\":\"0x1c2a7d25c4df3bd615df013c217ed7a3dab1a1d78bb8f1390dfc88b277fefa57\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ce74856dbf250051fba0f7cf56e6e58102fce98333c2f639c7a1199202eaf9a6\",\"dweb:/ipfs/QmYEhmrsfzyUizcUATMUt2uU7HpqBgVksjf8ToDb559vbh\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GatorActions.sol\":{\"keccak256\":\"0x8c16f579285d606e862ce180ca24d79ca086fb01b9268af1c39b4c8fbf2d96a1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7c064bf49ffeee517f08ef4e94d53f18894c2355a8f42962e30a050662b55c6a\",\"dweb:/ipfs/Qma8rG2d4z7LrJEGVhwgEqvUs3bmVxq1CAphBjAe34wBhp\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol\":{\"keccak256\":\"0x7ccf6639d1c5082ef3a932bc7c45b99ee88a63ad233d997942a19333d1c06d8b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e1a449d8f0a94697115b7457cadc9f7dcf23ca8a114b35e266a9ef9833c073c2\",\"dweb:/ipfs/QmeFnQhJkHhBDdskEEhYUMA2pL7RcYSKTiWc3nHwjeQkeb\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol\":{\"keccak256\":\"0xe009186e1b5ce6f8f883b2d5b6a58b9f7427376fe7d2afd8571dec1fb95ce68b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e2007d95aa5767105375f3046cec93cf51a3a4818c4ebc9513cd7b882de9d95\",\"dweb:/ipfs/QmdLCEF3yhhBkGhHdGaM8WVy2LfBHGLW6T3tRWfqiwPtKy\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol\":{\"keccak256\":\"0xd03715fc3391f5aeb00ca1620a86cd85efc9b3a99a9c283e182f739e427f95b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3b2e2174ee6495d8a354c8825b33f25bd514becf93aca020162d80a256e7291c\",\"dweb:/ipfs/QmaqFMfBz5dELTaFLazLgjXUsJWT6hVga2s3xdYc2hAjF1\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol\":{\"keccak256\":\"0xe3c37b988423c5989fce2b078a598788c052dc23403dff95509d57464bb1c12f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5c3766825c2fa5442d265a5524ae150626d18e235be99d1b485182ebbc9c0e1e\",\"dweb:/ipfs/Qme7hkgr2K3vEUst6YPBaq55dycpXBaffWLKXDSPX3QnvK\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Coin.sol\":{\"keccak256\":\"0x2b7565414d045d12859626e9027d9e69508edca12ea84104065b653aef808807\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4a0b4105fa3a11aac2ee96e04561e4dce084a7e9a0869fbb3c183d37273a15a5\",\"dweb:/ipfs/QmTC3ByoPkYyRLZ5hnec2hA4VA2CWnxXWCNQrky7iKoJpJ\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol\":{\"keccak256\":\"0xaad87d4ddb4502c8908f30707db6628834d3df7bef3d68d6d50179d0db672ee7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://905d7e65de99ddf8edc93aac5a9e6139e7813ac472abefa987b4ea85c73e4803\",\"dweb:/ipfs/QmNbEzweLBYEuiTbURiPuoyyqgmx59XtA5Ugo7uEvQXRCS\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":{\"keccak256\":\"0x6acb4a762f349ab39bd48ff34c150b55f55aabc4826379838391749136f3aee9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58552a104e1a046883cf116fe6748600caf7c8ebe341f82a38aa6fbfb09355cb\",\"dweb:/ipfs/QmQxUAK9fzefN6afoJ2CGyRWtETz1TEcZoJhDFCYJ3WY4V\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 11,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                            "label": "marketCoinList",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_mapping(t_address,t_address)"
                        },
                        {
                            "astId": 17,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                            "label": "gateCoinList",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_mapping(t_address,t_mapping(t_address,t_address))"
                        },
                        {
                            "astId": 22,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                            "label": "coinList",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_mapping(t_address,t_struct(Info)794_storage)"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_bool": {
                            "encoding": "inplace",
                            "label": "bool",
                            "numberOfBytes": "1"
                        },
                        "t_bytes32": {
                            "encoding": "inplace",
                            "label": "bytes32",
                            "numberOfBytes": "32"
                        },
                        "t_bytes6": {
                            "encoding": "inplace",
                            "label": "bytes6",
                            "numberOfBytes": "6"
                        },
                        "t_mapping(t_address,t_address)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => address)",
                            "numberOfBytes": "32",
                            "value": "t_address"
                        },
                        "t_mapping(t_address,t_mapping(t_address,t_address))": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => mapping(address => address))",
                            "numberOfBytes": "32",
                            "value": "t_mapping(t_address,t_address)"
                        },
                        "t_mapping(t_address,t_struct(Info)794_storage)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => struct LCoin.Info)",
                            "numberOfBytes": "32",
                            "value": "t_struct(Info)794_storage"
                        },
                        "t_struct(Info)794_storage": {
                            "encoding": "inplace",
                            "label": "struct LCoin.Info",
                            "members": [
                                {
                                    "astId": 767,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "coinFullName",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_bytes32"
                                },
                                {
                                    "astId": 769,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "symbol",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_bytes6"
                                },
                                {
                                    "astId": 771,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "scope",
                                    "offset": 6,
                                    "slot": "1",
                                    "type": "t_uint8"
                                },
                                {
                                    "astId": 773,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "decimals",
                                    "offset": 7,
                                    "slot": "1",
                                    "type": "t_uint8"
                                },
                                {
                                    "astId": 775,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "maxSupply",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 777,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "totalSupply",
                                    "offset": 0,
                                    "slot": "3",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 779,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "contractAddress",
                                    "offset": 0,
                                    "slot": "4",
                                    "type": "t_address"
                                },
                                {
                                    "astId": 781,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "WhitePaperUrl",
                                    "offset": 0,
                                    "slot": "5",
                                    "type": "t_bytes32"
                                },
                                {
                                    "astId": 783,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "OfficalWebsite",
                                    "offset": 0,
                                    "slot": "6",
                                    "type": "t_bytes32"
                                },
                                {
                                    "astId": 785,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "blockExplorerUrl",
                                    "offset": 0,
                                    "slot": "7",
                                    "type": "t_bytes32"
                                },
                                {
                                    "astId": 787,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "marketunlock",
                                    "offset": 0,
                                    "slot": "8",
                                    "type": "t_bool"
                                },
                                {
                                    "astId": 789,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "unlock",
                                    "offset": 1,
                                    "slot": "8",
                                    "type": "t_bool"
                                },
                                {
                                    "astId": 791,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "creator",
                                    "offset": 2,
                                    "slot": "8",
                                    "type": "t_address"
                                },
                                {
                                    "astId": 793,
                                    "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol:TTSwapV1Coin",
                                    "label": "isUsed",
                                    "offset": 22,
                                    "slot": "8",
                                    "type": "t_bool"
                                }
                            ],
                            "numberOfBytes": "288"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        },
                        "t_uint8": {
                            "encoding": "inplace",
                            "label": "uint8",
                            "numberOfBytes": "1"
                        }
                    }
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": {
                            "notice": "Explain to an end user what this does"
                        },
                        "gatorContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        },
                        "marketorContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        }
                    },
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol": {
            "ICoinV1Events": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Events emitted by a pool",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol\":\"ICoinV1Events\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol\":{\"keccak256\":\"0x1c2a7d25c4df3bd615df013c217ed7a3dab1a1d78bb8f1390dfc88b277fefa57\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ce74856dbf250051fba0f7cf56e6e58102fce98333c2f639c7a1199202eaf9a6\",\"dweb:/ipfs/QmYEhmrsfzyUizcUATMUt2uU7HpqBgVksjf8ToDb559vbh\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Contains all events emitted by the pool",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GatorActions.sol": {
            "ICoinV1GatorActions": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "addCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Permissioned pool actions",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "addCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "e911abec",
                        "lockCoinbyGator(address)": "441eb548",
                        "unlockCoinbyGator(address)": "385e4b7a",
                        "updateCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "a935b6af"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GatorActions.sol\":\"ICoinV1GatorActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GatorActions.sol\":{\"keccak256\":\"0x8c16f579285d606e862ce180ca24d79ca086fb01b9268af1c39b4c8fbf2d96a1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7c064bf49ffeee517f08ef4e94d53f18894c2355a8f42962e30a050662b55c6a\",\"dweb:/ipfs/Qma8rG2d4z7LrJEGVhwgEqvUs3bmVxq1CAphBjAe34wBhp\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Contains pool methods that may only be called by the factory owner",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol": {
            "ICoinV1Immutables": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "gatorContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketorContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "gatorContractAddress()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        },
                        "marketorContractAddress()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "title": "Pool state that never changes",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "gatorContractAddress()": "47d0a634",
                        "marketorContractAddress()": "492b7107"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"gatorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"gatorContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}},\"marketorContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"gatorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"marketorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol\":\"ICoinV1Immutables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol\":{\"keccak256\":\"0x7ccf6639d1c5082ef3a932bc7c45b99ee88a63ad233d997942a19333d1c06d8b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e1a449d8f0a94697115b7457cadc9f7dcf23ca8a114b35e266a9ef9833c073c2\",\"dweb:/ipfs/QmeFnQhJkHhBDdskEEhYUMA2pL7RcYSKTiWc3nHwjeQkeb\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "gatorContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        },
                        "marketorContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        }
                    },
                    "notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol": {
            "ICoinV1MarketorActions": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "addCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            },
                            {
                                "internalType": "uint8",
                                "name": "_scope",
                                "type": "uint8"
                            }
                        ],
                        "name": "changeCoinScopebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            }
                        ],
                        "name": "delCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_gateaddress",
                                "type": "address"
                            }
                        ],
                        "name": "delGateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_gateaddress",
                                "type": "address"
                            }
                        ],
                        "name": "impoveGateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Permissioned pool actions",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "87a70938",
                        "changeCoinScopebyMarketor(address,uint8)": "5385cbf5",
                        "delCoinbyMarketor(address)": "7c3e2f02",
                        "delGateCoinbyMarketor(address,address)": "eaec0112",
                        "impoveGateCoinbyMarketor(address,address)": "cfcdca52",
                        "lockCoinbyMarketor(address)": "b20be2b4",
                        "unlockCoinbyMarketor(address)": "1d3b8f67",
                        "updateCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "24fd7139"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_scope\",\"type\":\"uint8\"}],\"name\":\"changeCoinScopebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"delCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"delGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"impoveGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol\":\"ICoinV1MarketorActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol\":{\"keccak256\":\"0xe009186e1b5ce6f8f883b2d5b6a58b9f7427376fe7d2afd8571dec1fb95ce68b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e2007d95aa5767105375f3046cec93cf51a3a4818c4ebc9513cd7b882de9d95\",\"dweb:/ipfs/QmdLCEF3yhhBkGhHdGaM8WVy2LfBHGLW6T3tRWfqiwPtKy\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Contains pool methods that may only be called by the factory owner",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol": {
            "ICoinV1State": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            }
                        ],
                        "name": "getCoinInfo",
                        "outputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "",
                                "type": "tuple"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Pool state that can change",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "getCoinInfo(address)": "e8dd4655"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"getCoinInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol\":\"ICoinV1State\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol\":{\"keccak256\":\"0xd03715fc3391f5aeb00ca1620a86cd85efc9b3a99a9c283e182f739e427f95b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3b2e2174ee6495d8a354c8825b33f25bd514becf93aca020162d80a256e7291c\",\"dweb:/ipfs/QmaqFMfBz5dELTaFLazLgjXUsJWT6hVga2s3xdYc2hAjF1\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol": {
            "IGatorV1State": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "isValidGator",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Pool state that can change",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "isValidGator()": "54a460f6"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"isValidGator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol\":\"IGatorV1State\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol\":{\"keccak256\":\"0xe3c37b988423c5989fce2b078a598788c052dc23403dff95509d57464bb1c12f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5c3766825c2fa5442d265a5524ae150626d18e235be99d1b485182ebbc9c0e1e\",\"dweb:/ipfs/Qme7hkgr2K3vEUst6YPBaq55dycpXBaffWLKXDSPX3QnvK\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":{\"keccak256\":\"0x6acb4a762f349ab39bd48ff34c150b55f55aabc4826379838391749136f3aee9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58552a104e1a046883cf116fe6748600caf7c8ebe341f82a38aa6fbfb09355cb\",\"dweb:/ipfs/QmQxUAK9fzefN6afoJ2CGyRWtETz1TEcZoJhDFCYJ3WY4V\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Coin.sol": {
            "ITTSwapV1Coin": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "addCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "addCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            },
                            {
                                "internalType": "uint8",
                                "name": "_scope",
                                "type": "uint8"
                            }
                        ],
                        "name": "changeCoinScopebyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            }
                        ],
                        "name": "delCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_gateaddress",
                                "type": "address"
                            }
                        ],
                        "name": "delGateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "gatorContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            }
                        ],
                        "name": "getCoinInfo",
                        "outputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "",
                                "type": "tuple"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_contractaddress",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_gateaddress",
                                "type": "address"
                            }
                        ],
                        "name": "impoveGateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "lockCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketorContractAddress",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_internalCoinAddress",
                                "type": "address"
                            }
                        ],
                        "name": "unlockCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateCoinbyGator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "components": [
                                    {
                                        "internalType": "bytes32",
                                        "name": "coinFullName",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes6",
                                        "name": "symbol",
                                        "type": "bytes6"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "scope",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint8",
                                        "name": "decimals",
                                        "type": "uint8"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "maxSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "uint256",
                                        "name": "totalSupply",
                                        "type": "uint256"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "contractAddress",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "WhitePaperUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "OfficalWebsite",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bytes32",
                                        "name": "blockExplorerUrl",
                                        "type": "bytes32"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "marketunlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "unlock",
                                        "type": "bool"
                                    },
                                    {
                                        "internalType": "address",
                                        "name": "creator",
                                        "type": "address"
                                    },
                                    {
                                        "internalType": "bool",
                                        "name": "isUsed",
                                        "type": "bool"
                                    }
                                ],
                                "internalType": "struct LCoin.Info",
                                "name": "_coinInfo",
                                "type": "tuple"
                            }
                        ],
                        "name": "updateCoinbyMarketor",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "details": "The pool interface is broken up into many smaller pieces",
                    "kind": "dev",
                    "methods": {
                        "gatorContractAddress()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        },
                        "marketorContractAddress()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "title": "The interface for a Uniswap V3 Pool",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "addCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "e911abec",
                        "addCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "87a70938",
                        "changeCoinScopebyMarketor(address,uint8)": "5385cbf5",
                        "delCoinbyMarketor(address)": "7c3e2f02",
                        "delGateCoinbyMarketor(address,address)": "eaec0112",
                        "gatorContractAddress()": "47d0a634",
                        "getCoinInfo(address)": "e8dd4655",
                        "impoveGateCoinbyMarketor(address,address)": "cfcdca52",
                        "lockCoinbyGator(address)": "441eb548",
                        "lockCoinbyMarketor(address)": "b20be2b4",
                        "marketorContractAddress()": "492b7107",
                        "unlockCoinbyGator(address)": "385e4b7a",
                        "unlockCoinbyMarketor(address)": "1d3b8f67",
                        "updateCoinbyGator((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "a935b6af",
                        "updateCoinbyMarketor((bytes32,bytes6,uint8,uint8,uint256,uint256,address,bytes32,bytes32,bytes32,bool,bool,address,bool))": "24fd7139"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_scope\",\"type\":\"uint8\"}],\"name\":\"changeCoinScopebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"delCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"delGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gatorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"getCoinInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"impoveGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"coinFullName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes6\",\"name\":\"symbol\",\"type\":\"bytes6\"},{\"internalType\":\"uint8\",\"name\":\"scope\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"WhitePaperUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockExplorerUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"unlock\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"gatorContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}},\"marketorContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"gatorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"marketorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Coin.sol\":\"ITTSwapV1Coin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol\":{\"keccak256\":\"0x1c2a7d25c4df3bd615df013c217ed7a3dab1a1d78bb8f1390dfc88b277fefa57\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ce74856dbf250051fba0f7cf56e6e58102fce98333c2f639c7a1199202eaf9a6\",\"dweb:/ipfs/QmYEhmrsfzyUizcUATMUt2uU7HpqBgVksjf8ToDb559vbh\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GatorActions.sol\":{\"keccak256\":\"0x8c16f579285d606e862ce180ca24d79ca086fb01b9268af1c39b4c8fbf2d96a1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7c064bf49ffeee517f08ef4e94d53f18894c2355a8f42962e30a050662b55c6a\",\"dweb:/ipfs/Qma8rG2d4z7LrJEGVhwgEqvUs3bmVxq1CAphBjAe34wBhp\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol\":{\"keccak256\":\"0x7ccf6639d1c5082ef3a932bc7c45b99ee88a63ad233d997942a19333d1c06d8b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e1a449d8f0a94697115b7457cadc9f7dcf23ca8a114b35e266a9ef9833c073c2\",\"dweb:/ipfs/QmeFnQhJkHhBDdskEEhYUMA2pL7RcYSKTiWc3nHwjeQkeb\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol\":{\"keccak256\":\"0xe009186e1b5ce6f8f883b2d5b6a58b9f7427376fe7d2afd8571dec1fb95ce68b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e2007d95aa5767105375f3046cec93cf51a3a4818c4ebc9513cd7b882de9d95\",\"dweb:/ipfs/QmdLCEF3yhhBkGhHdGaM8WVy2LfBHGLW6T3tRWfqiwPtKy\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol\":{\"keccak256\":\"0xd03715fc3391f5aeb00ca1620a86cd85efc9b3a99a9c283e182f739e427f95b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3b2e2174ee6495d8a354c8825b33f25bd514becf93aca020162d80a256e7291c\",\"dweb:/ipfs/QmaqFMfBz5dELTaFLazLgjXUsJWT6hVga2s3xdYc2hAjF1\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Coin.sol\":{\"keccak256\":\"0x2b7565414d045d12859626e9027d9e69508edca12ea84104065b653aef808807\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4a0b4105fa3a11aac2ee96e04561e4dce084a7e9a0869fbb3c183d37273a15a5\",\"dweb:/ipfs/QmTC3ByoPkYyRLZ5hnec2hA4VA2CWnxXWCNQrky7iKoJpJ\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "gatorContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        },
                        "marketorContractAddress()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        }
                    },
                    "notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol": {
            "IMarketorV1State": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "isValidMarketor",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Pool state that can change",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "isValidMarketor()": "ad87d2ba"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol\":\"IMarketorV1State\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol\":{\"keccak256\":\"0xaad87d4ddb4502c8908f30707db6628834d3df7bef3d68d6d50179d0db672ee7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://905d7e65de99ddf8edc93aac5a9e6139e7813ac472abefa987b4ea85c73e4803\",\"dweb:/ipfs/QmNbEzweLBYEuiTbURiPuoyyqgmx59XtA5Ugo7uEvQXRCS\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol": {
            "LCoin": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064c9ad16183605c046c5b0d42e52f1738623f27157e8c61d9cf463b77655cb7864736f6c634300080f0033",
                        "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xC9AD161836 SDIV 0xC0 CHAINID 0xC5 0xB0 0xD4 0x2E MSTORE CALL PUSH20 0x8623F27157E8C61D9CF463B77655CB7864736F6C PUSH4 0x4300080F STOP CALLER ",
                        "sourceMap": "70:671:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;70:671:9;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064c9ad16183605c046c5b0d42e52f1738623f27157e8c61d9cf463b77655cb7864736f6c634300080f0033",
                        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xC9AD161836 SDIV 0xC0 CHAINID 0xC5 0xB0 0xD4 0x2E MSTORE CALL PUSH20 0x8623F27157E8C61D9CF463B77655CB7864736F6C PUSH4 0x4300080F STOP CALLER ",
                        "sourceMap": "70:671:9:-:0;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "17200",
                            "executionCost": "103",
                            "totalCost": "17303"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":\"LCoin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe97a3af5ff5d7ca8e86da5f9b1690c76775df561bea92b889d950f0697eb100c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29f3a8bac8770d1e1491a4bf4b3906b49952b6a682b7d488a3bccdf994263380\",\"dweb:/ipfs/QmRU8LtZmEM2Rbt2CbW3wcRSSn9z3bvNKnKWW8VtHfWe99\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol": {
            "LCustomer": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208604bc6434f4003f527ebdca05addb404cd4ddc5709077507b21bd6a7178cda864736f6c634300080f0033",
                        "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DIV 0xBC PUSH5 0x34F4003F52 PUSH31 0xBDCA05ADDB404CD4DDC5709077507B21BD6A7178CDA864736F6C634300080F STOP CALLER ",
                        "sourceMap": "70:677:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;70:677:10;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208604bc6434f4003f527ebdca05addb404cd4ddc5709077507b21bd6a7178cda864736f6c634300080f0033",
                        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DIV 0xBC PUSH5 0x34F4003F52 PUSH31 0xBDCA05ADDB404CD4DDC5709077507B21BD6A7178CDA864736F6C634300080F STOP CALLER ",
                        "sourceMap": "70:677:10:-:0;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "17200",
                            "executionCost": "103",
                            "totalCost": "17303"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":\"LCustomer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol\":{\"keccak256\":\"0x6acb4a762f349ab39bd48ff34c150b55f55aabc4826379838391749136f3aee9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58552a104e1a046883cf116fe6748600caf7c8ebe341f82a38aa6fbfb09355cb\",\"dweb:/ipfs/QmQxUAK9fzefN6afoJ2CGyRWtETz1TEcZoJhDFCYJ3WY4V\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        }
    },
    "sources": {
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Coin.sol",
                "exportedSymbols": {
                    "ICoinV1Events": [
                        616
                    ],
                    "ICoinV1GatorActions": [
                        643
                    ],
                    "ICoinV1Immutables": [
                        659
                    ],
                    "ICoinV1MarketorActions": [
                        712
                    ],
                    "ICoinV1State": [
                        725
                    ],
                    "IGatorV1State": [
                        735
                    ],
                    "IMarketorV1State": [
                        763
                    ],
                    "ITTSwapV1Coin": [
                        754
                    ],
                    "LCoin": [
                        795
                    ],
                    "LCustomer": [
                        817
                    ],
                    "TTSwapV1Coin": [
                        612
                    ]
                },
                "id": 613,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:0"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol",
                        "file": "./libraries/base/LCoin.sol",
                        "id": 2,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 613,
                        "sourceUnit": 796,
                        "src": "70:36:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Coin.sol",
                        "file": "./interfaces/ITTSwapV1Coin.sol",
                        "id": 3,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 613,
                        "sourceUnit": 755,
                        "src": "107:40:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol",
                        "file": "./interfaces/Marketor/IMarketorV1State.sol",
                        "id": 4,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 613,
                        "sourceUnit": 764,
                        "src": "148:52:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol",
                        "file": "./interfaces/Gator/IGatorV1State.sol",
                        "id": 5,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 613,
                        "sourceUnit": 736,
                        "src": "201:46:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 6,
                                    "name": "ITTSwapV1Coin",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 754,
                                    "src": "274:13:0"
                                },
                                "id": 7,
                                "nodeType": "InheritanceSpecifier",
                                "src": "274:13:0"
                            }
                        ],
                        "canonicalName": "TTSwapV1Coin",
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 612,
                        "linearizedBaseContracts": [
                            612,
                            754,
                            725,
                            712,
                            659,
                            643,
                            616
                        ],
                        "name": "TTSwapV1Coin",
                        "nameLocation": "258:12:0",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "functionSelector": "3b830305",
                                "id": 11,
                                "mutability": "mutable",
                                "name": "marketCoinList",
                                "nameLocation": "427:14:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 612,
                                "src": "392:49:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                },
                                "typeName": {
                                    "id": 10,
                                    "keyType": {
                                        "id": 8,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "400:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "392:27:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                        "typeString": "mapping(address => address)"
                                    },
                                    "valueType": {
                                        "id": 9,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "411:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "cc0bf757",
                                "id": 17,
                                "mutability": "mutable",
                                "name": "gateCoinList",
                                "nameLocation": "616:12:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 612,
                                "src": "561:67:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                    "typeString": "mapping(address => mapping(address => address))"
                                },
                                "typeName": {
                                    "id": 16,
                                    "keyType": {
                                        "id": 12,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "569:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "561:47:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                        "typeString": "mapping(address => mapping(address => address))"
                                    },
                                    "valueType": {
                                        "id": 15,
                                        "keyType": {
                                            "id": 13,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "588:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Mapping",
                                        "src": "580:27:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                            "typeString": "mapping(address => address)"
                                        },
                                        "valueType": {
                                            "id": 14,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "599:7:0",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        }
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "31ecdeb8",
                                "id": 22,
                                "mutability": "mutable",
                                "name": "coinList",
                                "nameLocation": "758:8:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 612,
                                "src": "720:46:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                    "typeString": "mapping(address => struct LCoin.Info)"
                                },
                                "typeName": {
                                    "id": 21,
                                    "keyType": {
                                        "id": 18,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "728:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "720:30:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                        "typeString": "mapping(address => struct LCoin.Info)"
                                    },
                                    "valueType": {
                                        "id": 20,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 19,
                                            "name": "LCoin.Info",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 794,
                                            "src": "739:10:0"
                                        },
                                        "referencedDeclaration": 794,
                                        "src": "739:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Info_$794_storage_ptr",
                                            "typeString": "struct LCoin.Info"
                                        }
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    652
                                ],
                                "constant": false,
                                "functionSelector": "47d0a634",
                                "id": 24,
                                "mutability": "immutable",
                                "name": "gatorContractAddress",
                                "nameLocation": "798:20:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 612,
                                "src": "773:45:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 23,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "773:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    658
                                ],
                                "constant": false,
                                "functionSelector": "492b7107",
                                "id": 26,
                                "mutability": "immutable",
                                "name": "marketorContractAddress",
                                "nameLocation": "849:23:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 612,
                                "src": "824:48:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 25,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "824:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 41,
                                    "nodeType": "Block",
                                    "src": "960:121:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 35,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 33,
                                                    "name": "gatorContractAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 24,
                                                    "src": "970:20:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 34,
                                                    "name": "_gatorContractAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 28,
                                                    "src": "993:21:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "970:44:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 36,
                                            "nodeType": "ExpressionStatement",
                                            "src": "970:44:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 39,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 37,
                                                    "name": "marketorContractAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 26,
                                                    "src": "1024:23:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 38,
                                                    "name": "_marketorContractAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 30,
                                                    "src": "1050:24:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1024:50:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 40,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1024:50:0"
                                        }
                                    ]
                                },
                                "id": 42,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nameLocation": "-1:-1:-1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 31,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 28,
                                            "mutability": "mutable",
                                            "name": "_gatorContractAddress",
                                            "nameLocation": "899:21:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 42,
                                            "src": "891:29:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 27,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "891:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 30,
                                            "mutability": "mutable",
                                            "name": "_marketorContractAddress",
                                            "nameLocation": "930:24:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 42,
                                            "src": "922:32:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 29,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "922:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "890:65:0"
                                },
                                "returnParameters": {
                                    "id": 32,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "960:0:0"
                                },
                                "scope": 612,
                                "src": "879:202:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 54,
                                    "nodeType": "Block",
                                    "src": "1324:87:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "expression": {
                                                                "arguments": [
                                                                    {
                                                                        "id": 47,
                                                                        "name": "gatorContractAddress",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 24,
                                                                        "src": "1356:20:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    ],
                                                                    "id": 46,
                                                                    "name": "IGatorV1State",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 735,
                                                                    "src": "1342:13:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_contract$_IGatorV1State_$735_$",
                                                                        "typeString": "type(contract IGatorV1State)"
                                                                    }
                                                                },
                                                                "id": 48,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "1342:35:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IGatorV1State_$735",
                                                                    "typeString": "contract IGatorV1State"
                                                                }
                                                            },
                                                            "id": 49,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isValidGator",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 734,
                                                            "src": "1342:48:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                                                "typeString": "function () view external returns (bool)"
                                                            }
                                                        },
                                                        "id": 50,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1342:50:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 45,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "1334:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 51,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1334:59:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 52,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1334:59:0"
                                        },
                                        {
                                            "id": 53,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "1403:1:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 43,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1087:211:0",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details\n @notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "id": 55,
                                "name": "onlyGator",
                                "nameLocation": "1312:9:0",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 44,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1321:2:0"
                                },
                                "src": "1303:108:0",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 66,
                                    "nodeType": "Block",
                                    "src": "1441:96:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "expression": {
                                                                "arguments": [
                                                                    {
                                                                        "id": 59,
                                                                        "name": "marketorContractAddress",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 26,
                                                                        "src": "1476:23:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    ],
                                                                    "id": 58,
                                                                    "name": "IMarketorV1State",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 763,
                                                                    "src": "1459:16:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_contract$_IMarketorV1State_$763_$",
                                                                        "typeString": "type(contract IMarketorV1State)"
                                                                    }
                                                                },
                                                                "id": 60,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "1459:41:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IMarketorV1State_$763",
                                                                    "typeString": "contract IMarketorV1State"
                                                                }
                                                            },
                                                            "id": 61,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isValidMarketor",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 762,
                                                            "src": "1459:57:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                                                "typeString": "function () view external returns (bool)"
                                                            }
                                                        },
                                                        "id": 62,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1459:59:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 57,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "1451:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 63,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1451:68:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 64,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1451:68:0"
                                        },
                                        {
                                            "id": 65,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "1529:1:0"
                                        }
                                    ]
                                },
                                "id": 67,
                                "name": "onlyMarketor",
                                "nameLocation": "1426:12:0",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 56,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1438:2:0"
                                },
                                "src": "1417:120:0",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "baseFunctions": [
                                    669
                                ],
                                "body": {
                                    "id": 147,
                                    "nodeType": "Block",
                                    "src": "1882:681:0",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 82,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 76,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "1896:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 79,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 77,
                                                                "name": "_coinInfo",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 71,
                                                                "src": "1905:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                    "typeString": "struct LCoin.Info memory"
                                                                }
                                                            },
                                                            "id": 78,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "contractAddress",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 779,
                                                            "src": "1905:25:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "1896:35:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 80,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "isUsed",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 793,
                                                    "src": "1896:42:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "hexValue": "74727565",
                                                    "id": 81,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1942:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "1896:50:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "id": 145,
                                                "nodeType": "Block",
                                                "src": "2289:268:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    "id": 133,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "baseExpression": {
                                                                            "id": 125,
                                                                            "name": "marketCoinList",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 11,
                                                                            "src": "2328:14:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                                "typeString": "mapping(address => address)"
                                                                            }
                                                                        },
                                                                        "id": 128,
                                                                        "indexExpression": {
                                                                            "expression": {
                                                                                "id": 126,
                                                                                "name": "_coinInfo",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 71,
                                                                                "src": "2343:9:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                                    "typeString": "struct LCoin.Info memory"
                                                                                }
                                                                            },
                                                                            "id": 127,
                                                                            "isConstant": false,
                                                                            "isLValue": true,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "contractAddress",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 779,
                                                                            "src": "2343:25:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        },
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "IndexAccess",
                                                                        "src": "2328:41:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "rightExpression": {
                                                                        "arguments": [
                                                                            {
                                                                                "hexValue": "30",
                                                                                "id": 131,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "2381:1:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                                    "typeString": "int_const 0"
                                                                                },
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                                    "typeString": "int_const 0"
                                                                                }
                                                                            ],
                                                                            "id": 130,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "2373:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                                "typeString": "type(address)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 129,
                                                                                "name": "address",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "2373:7:0",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        },
                                                                        "id": 132,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "typeConversion",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "2373:10:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "src": "2328:55:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e2065786973747320696e20746865206d61726b6574",
                                                                    "id": 134,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "2401:31:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2",
                                                                        "typeString": "literal_string \"the coin exists in the market\""
                                                                    },
                                                                    "value": "the coin exists in the market"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2",
                                                                        "typeString": "literal_string \"the coin exists in the market\""
                                                                    }
                                                                ],
                                                                "id": 124,
                                                                "name": "require",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                    4294967278,
                                                                    4294967278
                                                                ],
                                                                "referencedDeclaration": 4294967278,
                                                                "src": "2303:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (bool,string memory) pure"
                                                                }
                                                            },
                                                            "id": 135,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "2303:143:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 136,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2303:143:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 143,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "baseExpression": {
                                                                    "id": 137,
                                                                    "name": "marketCoinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 11,
                                                                    "src": "2460:14:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                        "typeString": "mapping(address => address)"
                                                                    }
                                                                },
                                                                "id": 140,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 138,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 71,
                                                                        "src": "2475:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 139,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 779,
                                                                    "src": "2475:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "nodeType": "IndexAccess",
                                                                "src": "2460:41:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "expression": {
                                                                    "id": 141,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 71,
                                                                    "src": "2504:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 142,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "contractAddress",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 779,
                                                                "src": "2504:42:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "2460:86:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 144,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2460:86:0"
                                                    }
                                                ]
                                            },
                                            "id": 146,
                                            "nodeType": "IfStatement",
                                            "src": "1892:665:0",
                                            "trueBody": {
                                                "id": 123,
                                                "nodeType": "Block",
                                                "src": "1948:335:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "id": 88,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 83,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 71,
                                                                    "src": "1962:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 85,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "creator",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 791,
                                                                "src": "1962:17:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "expression": {
                                                                    "id": 86,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967281,
                                                                    "src": "1982:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 87,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "src": "1982:10:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "1962:30:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 89,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "1962:30:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 94,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 90,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 71,
                                                                    "src": "2006:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 92,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "marketunlock",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 787,
                                                                "src": "2006:22:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "66616c7365",
                                                                "id": 93,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2031:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "false"
                                                            },
                                                            "src": "2006:30:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "id": 95,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2006:30:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 100,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 96,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 71,
                                                                    "src": "2050:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 98,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "unlock",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 789,
                                                                "src": "2050:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "66616c7365",
                                                                "id": 99,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2069:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "false"
                                                            },
                                                            "src": "2050:24:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "id": 101,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2050:24:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 106,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 102,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 71,
                                                                    "src": "2088:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 104,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "isUsed",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 793,
                                                                "src": "2088:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "74727565",
                                                                "id": 105,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2107:4:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "true"
                                                            },
                                                            "src": "2088:23:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "id": 107,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2088:23:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 113,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "baseExpression": {
                                                                    "id": 108,
                                                                    "name": "coinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 22,
                                                                    "src": "2125:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 111,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 109,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 71,
                                                                        "src": "2134:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 110,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 779,
                                                                    "src": "2134:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "nodeType": "IndexAccess",
                                                                "src": "2125:35:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$794_storage",
                                                                    "typeString": "struct LCoin.Info storage ref"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "id": 112,
                                                                "name": "_coinInfo",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 71,
                                                                "src": "2163:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                    "typeString": "struct LCoin.Info memory"
                                                                }
                                                            },
                                                            "src": "2125:47:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Info_$794_storage",
                                                                "typeString": "struct LCoin.Info storage ref"
                                                            }
                                                        },
                                                        "id": 114,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2125:47:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 121,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "baseExpression": {
                                                                    "id": 115,
                                                                    "name": "marketCoinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 11,
                                                                    "src": "2186:14:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                        "typeString": "mapping(address => address)"
                                                                    }
                                                                },
                                                                "id": 118,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 116,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 71,
                                                                        "src": "2201:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 117,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 779,
                                                                    "src": "2201:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "nodeType": "IndexAccess",
                                                                "src": "2186:41:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "expression": {
                                                                    "id": 119,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 71,
                                                                    "src": "2230:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 120,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "contractAddress",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 779,
                                                                "src": "2230:42:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "2186:86:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 122,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2186:86:0"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 68,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1676:103:0",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "functionSelector": "87a70938",
                                "id": 148,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 74,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 73,
                                            "name": "onlyMarketor",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "1865:12:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1865:12:0"
                                    }
                                ],
                                "name": "addCoinbyMarketor",
                                "nameLocation": "1793:17:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 72,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 71,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "1829:9:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 148,
                                            "src": "1811:27:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 70,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 69,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 794,
                                                    "src": "1811:10:0"
                                                },
                                                "referencedDeclaration": 794,
                                                "src": "1811:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$794_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1810:29:0"
                                },
                                "returnParameters": {
                                    "id": 75,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1882:0:0"
                                },
                                "scope": 612,
                                "src": "1784:779:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    676
                                ],
                                "body": {
                                    "id": 164,
                                    "nodeType": "Block",
                                    "src": "2692:62:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 162,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 157,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "2702:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 159,
                                                        "indexExpression": {
                                                            "id": 158,
                                                            "name": "_internalCoinAddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 150,
                                                            "src": "2711:20:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2702:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 160,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "scope",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 771,
                                                    "src": "2702:36:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 161,
                                                    "name": "_scope",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 152,
                                                    "src": "2741:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "src": "2702:45:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "id": 163,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2702:45:0"
                                        }
                                    ]
                                },
                                "functionSelector": "5385cbf5",
                                "id": 165,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 155,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 154,
                                            "name": "onlyMarketor",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "2679:12:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2679:12:0"
                                    }
                                ],
                                "name": "changeCoinScopebyMarketor",
                                "nameLocation": "2578:25:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 153,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 150,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "2621:20:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 165,
                                            "src": "2613:28:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 149,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2613:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 152,
                                            "mutability": "mutable",
                                            "name": "_scope",
                                            "nameLocation": "2657:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 165,
                                            "src": "2651:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            },
                                            "typeName": {
                                                "id": 151,
                                                "name": "uint8",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2651:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2603:66:0"
                                },
                                "returnParameters": {
                                    "id": 156,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2692:0:0"
                                },
                                "scope": 612,
                                "src": "2569:185:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    681
                                ],
                                "body": {
                                    "id": 179,
                                    "nodeType": "Block",
                                    "src": "2860:68:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 177,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 172,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "2870:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 174,
                                                        "indexExpression": {
                                                            "id": 173,
                                                            "name": "_internalCoinAddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 167,
                                                            "src": "2879:20:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2870:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 175,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 787,
                                                    "src": "2870:43:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 176,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2916:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "2870:51:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 178,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2870:51:0"
                                        }
                                    ]
                                },
                                "functionSelector": "b20be2b4",
                                "id": 180,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 170,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 169,
                                            "name": "onlyMarketor",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "2843:12:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2843:12:0"
                                    }
                                ],
                                "name": "lockCoinbyMarketor",
                                "nameLocation": "2769:18:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 168,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 167,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "2796:20:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 180,
                                            "src": "2788:28:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 166,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2788:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2787:30:0"
                                },
                                "returnParameters": {
                                    "id": 171,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2860:0:0"
                                },
                                "scope": 612,
                                "src": "2760:168:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    686
                                ],
                                "body": {
                                    "id": 194,
                                    "nodeType": "Block",
                                    "src": "3036:67:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 192,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 187,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "3046:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 189,
                                                        "indexExpression": {
                                                            "id": 188,
                                                            "name": "_internalCoinAddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 182,
                                                            "src": "3055:20:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "3046:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 190,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 787,
                                                    "src": "3046:43:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 191,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3092:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "3046:50:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 193,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3046:50:0"
                                        }
                                    ]
                                },
                                "functionSelector": "1d3b8f67",
                                "id": 195,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 185,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 184,
                                            "name": "onlyMarketor",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "3019:12:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3019:12:0"
                                    }
                                ],
                                "name": "unlockCoinbyMarketor",
                                "nameLocation": "2943:20:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 183,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 182,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "2972:20:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 195,
                                            "src": "2964:28:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 181,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2964:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2963:30:0"
                                },
                                "returnParameters": {
                                    "id": 186,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3036:0:0"
                                },
                                "scope": 612,
                                "src": "2934:169:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    692
                                ],
                                "body": {
                                    "id": 250,
                                    "nodeType": "Block",
                                    "src": "3210:318:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 212,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "baseExpression": {
                                                                "id": 204,
                                                                "name": "marketCoinList",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 11,
                                                                "src": "3228:14:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                    "typeString": "mapping(address => address)"
                                                                }
                                                            },
                                                            "id": 207,
                                                            "indexExpression": {
                                                                "expression": {
                                                                    "id": 205,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 198,
                                                                    "src": "3243:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 206,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "contractAddress",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 779,
                                                                "src": "3243:25:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "3228:41:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 210,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "3281:1:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 209,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "3273:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 208,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "3273:7:0",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 211,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3273:10:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "3228:55:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 203,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "3220:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 213,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3220:64:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 214,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3220:64:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 219,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 215,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 198,
                                                        "src": "3294:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 217,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 787,
                                                    "src": "3294:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 218,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3319:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "3294:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 220,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3294:30:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 225,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 221,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 198,
                                                        "src": "3334:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 223,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 789,
                                                    "src": "3334:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 224,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3353:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "3334:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 226,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3334:24:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 231,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 227,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 198,
                                                        "src": "3368:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 229,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "isUsed",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 793,
                                                    "src": "3368:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 230,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3387:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "3368:23:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 232,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3368:23:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 241,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 233,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 198,
                                                        "src": "3401:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 235,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "creator",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 791,
                                                    "src": "3401:17:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 236,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "3421:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 239,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 237,
                                                                "name": "_coinInfo",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 198,
                                                                "src": "3430:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                    "typeString": "struct LCoin.Info memory"
                                                                }
                                                            },
                                                            "id": 238,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "contractAddress",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 779,
                                                            "src": "3430:25:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "3421:35:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 240,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "creator",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 791,
                                                    "src": "3421:43:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "3401:63:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 242,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3401:63:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 248,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 243,
                                                        "name": "coinList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 22,
                                                        "src": "3474:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                            "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                        }
                                                    },
                                                    "id": 246,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 244,
                                                            "name": "_coinInfo",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 198,
                                                            "src": "3483:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                "typeString": "struct LCoin.Info memory"
                                                            }
                                                        },
                                                        "id": 245,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "contractAddress",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 779,
                                                        "src": "3483:25:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "3474:35:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$794_storage",
                                                        "typeString": "struct LCoin.Info storage ref"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 247,
                                                    "name": "_coinInfo",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 198,
                                                    "src": "3512:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                        "typeString": "struct LCoin.Info memory"
                                                    }
                                                },
                                                "src": "3474:47:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$794_storage",
                                                    "typeString": "struct LCoin.Info storage ref"
                                                }
                                            },
                                            "id": 249,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3474:47:0"
                                        }
                                    ]
                                },
                                "functionSelector": "24fd7139",
                                "id": 251,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 201,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 200,
                                            "name": "onlyMarketor",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "3193:12:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3193:12:0"
                                    }
                                ],
                                "name": "updateCoinbyMarketor",
                                "nameLocation": "3118:20:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 199,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 198,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "3157:9:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 251,
                                            "src": "3139:27:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 197,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 196,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 794,
                                                    "src": "3139:10:0"
                                                },
                                                "referencedDeclaration": 794,
                                                "src": "3139:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$794_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3138:29:0"
                                },
                                "returnParameters": {
                                    "id": 202,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3210:0:0"
                                },
                                "scope": 612,
                                "src": "3109:419:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    699
                                ],
                                "body": {
                                    "id": 303,
                                    "nodeType": "Block",
                                    "src": "3660:449:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 270,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "baseExpression": {
                                                                "baseExpression": {
                                                                    "id": 261,
                                                                    "name": "gateCoinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 17,
                                                                    "src": "3691:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                        "typeString": "mapping(address => mapping(address => address))"
                                                                    }
                                                                },
                                                                "id": 263,
                                                                "indexExpression": {
                                                                    "id": 262,
                                                                    "name": "_gateaddress",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 255,
                                                                    "src": "3704:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "3691:26:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                    "typeString": "mapping(address => address)"
                                                                }
                                                            },
                                                            "id": 265,
                                                            "indexExpression": {
                                                                "id": 264,
                                                                "name": "_contractaddress",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 253,
                                                                "src": "3718:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "3691:44:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 268,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "3747:1:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 267,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "3739:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 266,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "3739:7:0",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 269,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3739:10:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "3691:58:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520636f696e206973206e6f7420657869737473",
                                                        "id": 271,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3763:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        },
                                                        "value": "the coin is not exists"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        }
                                                    ],
                                                    "id": 260,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "3670:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 272,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3670:127:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 273,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3670:127:0"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 282,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "baseExpression": {
                                                                "id": 275,
                                                                "name": "marketCoinList",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 11,
                                                                "src": "3828:14:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                    "typeString": "mapping(address => address)"
                                                                }
                                                            },
                                                            "id": 277,
                                                            "indexExpression": {
                                                                "id": 276,
                                                                "name": "_contractaddress",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 253,
                                                                "src": "3843:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "3828:32:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 280,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "3872:1:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 279,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "3864:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 278,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "3864:7:0",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 281,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3864:10:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "3828:46:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520636f696e206973202065786973747320696e206d61726b6574",
                                                        "id": 283,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3888:31:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_81cb1dfb23a252b826bafd64e1a5e758717edd6cb6cf234d6b50e48a1bea516b",
                                                            "typeString": "literal_string \"the coin is  exists in market\""
                                                        },
                                                        "value": "the coin is  exists in market"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_81cb1dfb23a252b826bafd64e1a5e758717edd6cb6cf234d6b50e48a1bea516b",
                                                            "typeString": "literal_string \"the coin is  exists in market\""
                                                        }
                                                    ],
                                                    "id": 274,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "3807:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 284,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3807:122:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 285,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3807:122:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 294,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 286,
                                                        "name": "marketCoinList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 11,
                                                        "src": "3939:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                            "typeString": "mapping(address => address)"
                                                        }
                                                    },
                                                    "id": 288,
                                                    "indexExpression": {
                                                        "id": 287,
                                                        "name": "_contractaddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 253,
                                                        "src": "3954:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "3939:32:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "baseExpression": {
                                                        "baseExpression": {
                                                            "id": 289,
                                                            "name": "gateCoinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 17,
                                                            "src": "3974:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                "typeString": "mapping(address => mapping(address => address))"
                                                            }
                                                        },
                                                        "id": 291,
                                                        "indexExpression": {
                                                            "id": 290,
                                                            "name": "_gateaddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 255,
                                                            "src": "3987:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "3974:26:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                            "typeString": "mapping(address => address)"
                                                        }
                                                    },
                                                    "id": 293,
                                                    "indexExpression": {
                                                        "id": 292,
                                                        "name": "_contractaddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 253,
                                                        "src": "4014:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "3974:66:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "3939:101:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 295,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3939:101:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 301,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "delete",
                                                "prefix": true,
                                                "src": "4051:51:0",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "baseExpression": {
                                                            "id": 296,
                                                            "name": "gateCoinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 17,
                                                            "src": "4058:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                "typeString": "mapping(address => mapping(address => address))"
                                                            }
                                                        },
                                                        "id": 298,
                                                        "indexExpression": {
                                                            "id": 297,
                                                            "name": "_gateaddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 255,
                                                            "src": "4071:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "4058:26:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                            "typeString": "mapping(address => address)"
                                                        }
                                                    },
                                                    "id": 300,
                                                    "indexExpression": {
                                                        "id": 299,
                                                        "name": "_contractaddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 253,
                                                        "src": "4085:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "4058:44:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 302,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4051:51:0"
                                        }
                                    ]
                                },
                                "functionSelector": "cfcdca52",
                                "id": 304,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 258,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 257,
                                            "name": "onlyMarketor",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "3647:12:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "3647:12:0"
                                    }
                                ],
                                "name": "impoveGateCoinbyMarketor",
                                "nameLocation": "3543:24:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 256,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 253,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "3585:16:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 304,
                                            "src": "3577:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 252,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3577:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 255,
                                            "mutability": "mutable",
                                            "name": "_gateaddress",
                                            "nameLocation": "3619:12:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 304,
                                            "src": "3611:20:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 254,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3611:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "3567:70:0"
                                },
                                "returnParameters": {
                                    "id": 259,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "3660:0:0"
                                },
                                "scope": 612,
                                "src": "3534:575:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    704
                                ],
                                "body": {
                                    "id": 328,
                                    "nodeType": "Block",
                                    "src": "4190:181:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 319,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "baseExpression": {
                                                                "id": 312,
                                                                "name": "marketCoinList",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 11,
                                                                "src": "4221:14:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                    "typeString": "mapping(address => address)"
                                                                }
                                                            },
                                                            "id": 314,
                                                            "indexExpression": {
                                                                "id": 313,
                                                                "name": "_contractaddress",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 306,
                                                                "src": "4236:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "4221:32:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 317,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "4265:1:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 316,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "4257:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 315,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "4257:7:0",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 318,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4257:10:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "4221:46:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520636f696e206973206e6f7420657869737473",
                                                        "id": 320,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "4281:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        },
                                                        "value": "the coin is not exists"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        }
                                                    ],
                                                    "id": 311,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "4200:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 321,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4200:115:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 322,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4200:115:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 326,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "delete",
                                                "prefix": true,
                                                "src": "4325:39:0",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "id": 323,
                                                        "name": "marketCoinList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 11,
                                                        "src": "4332:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                            "typeString": "mapping(address => address)"
                                                        }
                                                    },
                                                    "id": 325,
                                                    "indexExpression": {
                                                        "id": 324,
                                                        "name": "_contractaddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 306,
                                                        "src": "4347:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "4332:32:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 327,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4325:39:0"
                                        }
                                    ]
                                },
                                "functionSelector": "7c3e2f02",
                                "id": 329,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 309,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 308,
                                            "name": "onlyMarketor",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "4177:12:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "4177:12:0"
                                    }
                                ],
                                "name": "delCoinbyMarketor",
                                "nameLocation": "4124:17:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 307,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 306,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "4150:16:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 329,
                                            "src": "4142:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 305,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4142:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4141:26:0"
                                },
                                "returnParameters": {
                                    "id": 310,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4190:0:0"
                                },
                                "scope": 612,
                                "src": "4115:256:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    711
                                ],
                                "body": {
                                    "id": 359,
                                    "nodeType": "Block",
                                    "src": "4500:205:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 348,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "baseExpression": {
                                                                "baseExpression": {
                                                                    "id": 339,
                                                                    "name": "gateCoinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 17,
                                                                    "src": "4531:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                        "typeString": "mapping(address => mapping(address => address))"
                                                                    }
                                                                },
                                                                "id": 341,
                                                                "indexExpression": {
                                                                    "id": 340,
                                                                    "name": "_gateaddress",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 333,
                                                                    "src": "4544:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "4531:26:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                    "typeString": "mapping(address => address)"
                                                                }
                                                            },
                                                            "id": 343,
                                                            "indexExpression": {
                                                                "id": 342,
                                                                "name": "_contractaddress",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 331,
                                                                "src": "4558:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "4531:44:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30",
                                                                    "id": 346,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "4587:1:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 345,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "4579:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 344,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "4579:7:0",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 347,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "4579:10:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "4531:58:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520636f696e206973206e6f7420657869737473",
                                                        "id": 349,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "4603:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        },
                                                        "value": "the coin is not exists"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        }
                                                    ],
                                                    "id": 338,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "4510:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 350,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4510:127:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 351,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4510:127:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 357,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "delete",
                                                "prefix": true,
                                                "src": "4647:51:0",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "baseExpression": {
                                                            "id": 352,
                                                            "name": "gateCoinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 17,
                                                            "src": "4654:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                "typeString": "mapping(address => mapping(address => address))"
                                                            }
                                                        },
                                                        "id": 354,
                                                        "indexExpression": {
                                                            "id": 353,
                                                            "name": "_gateaddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 333,
                                                            "src": "4667:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "4654:26:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                            "typeString": "mapping(address => address)"
                                                        }
                                                    },
                                                    "id": 356,
                                                    "indexExpression": {
                                                        "id": 355,
                                                        "name": "_contractaddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 331,
                                                        "src": "4681:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "4654:44:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 358,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4647:51:0"
                                        }
                                    ]
                                },
                                "functionSelector": "eaec0112",
                                "id": 360,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 336,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 335,
                                            "name": "onlyMarketor",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "4487:12:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "4487:12:0"
                                    }
                                ],
                                "name": "delGateCoinbyMarketor",
                                "nameLocation": "4386:21:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 334,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 331,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "4425:16:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 360,
                                            "src": "4417:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 330,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4417:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 333,
                                            "mutability": "mutable",
                                            "name": "_gateaddress",
                                            "nameLocation": "4459:12:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 360,
                                            "src": "4451:20:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 332,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4451:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4407:70:0"
                                },
                                "returnParameters": {
                                    "id": 337,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4500:0:0"
                                },
                                "scope": 612,
                                "src": "4377:328:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    626
                                ],
                                "body": {
                                    "id": 461,
                                    "nodeType": "Block",
                                    "src": "4915:886:0",
                                    "statements": [
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 374,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 368,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "4929:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 371,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 369,
                                                                "name": "_coinInfo",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 363,
                                                                "src": "4938:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                    "typeString": "struct LCoin.Info memory"
                                                                }
                                                            },
                                                            "id": 370,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "contractAddress",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 779,
                                                            "src": "4938:25:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "4929:35:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 372,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "isUsed",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 793,
                                                    "src": "4929:42:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "hexValue": "74727565",
                                                    "id": 373,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "4975:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "4929:50:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "id": 459,
                                                "nodeType": "Block",
                                                "src": "5332:463:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    "id": 428,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "baseExpression": {
                                                                            "id": 420,
                                                                            "name": "marketCoinList",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 11,
                                                                            "src": "5371:14:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                                "typeString": "mapping(address => address)"
                                                                            }
                                                                        },
                                                                        "id": 423,
                                                                        "indexExpression": {
                                                                            "expression": {
                                                                                "id": 421,
                                                                                "name": "_coinInfo",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 363,
                                                                                "src": "5386:9:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                                    "typeString": "struct LCoin.Info memory"
                                                                                }
                                                                            },
                                                                            "id": 422,
                                                                            "isConstant": false,
                                                                            "isLValue": true,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "contractAddress",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 779,
                                                                            "src": "5386:25:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        },
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "IndexAccess",
                                                                        "src": "5371:41:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "rightExpression": {
                                                                        "arguments": [
                                                                            {
                                                                                "hexValue": "30",
                                                                                "id": 426,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "5424:1:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                                    "typeString": "int_const 0"
                                                                                },
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                                    "typeString": "int_const 0"
                                                                                }
                                                                            ],
                                                                            "id": 425,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "5416:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                                "typeString": "type(address)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 424,
                                                                                "name": "address",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "5416:7:0",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        },
                                                                        "id": 427,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "typeConversion",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "5416:10:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "src": "5371:55:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e2065786973747320696e20746865206d61726b6574",
                                                                    "id": 429,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "5444:31:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2",
                                                                        "typeString": "literal_string \"the coin exists in the market\""
                                                                    },
                                                                    "value": "the coin exists in the market"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_776b4da91601819a642f17550c4bd2c702a06797470e295a8f69f3d69cf4d0e2",
                                                                        "typeString": "literal_string \"the coin exists in the market\""
                                                                    }
                                                                ],
                                                                "id": 419,
                                                                "name": "require",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                    4294967278,
                                                                    4294967278
                                                                ],
                                                                "referencedDeclaration": 4294967278,
                                                                "src": "5346:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (bool,string memory) pure"
                                                                }
                                                            },
                                                            "id": 430,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "5346:143:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 431,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5346:143:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    },
                                                                    "id": 444,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "baseExpression": {
                                                                            "baseExpression": {
                                                                                "id": 433,
                                                                                "name": "gateCoinList",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 17,
                                                                                "src": "5528:12:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                                    "typeString": "mapping(address => mapping(address => address))"
                                                                                }
                                                                            },
                                                                            "id": 436,
                                                                            "indexExpression": {
                                                                                "expression": {
                                                                                    "id": 434,
                                                                                    "name": "msg",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 4294967281,
                                                                                    "src": "5541:3:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_magic_message",
                                                                                        "typeString": "msg"
                                                                                    }
                                                                                },
                                                                                "id": 435,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "memberName": "sender",
                                                                                "nodeType": "MemberAccess",
                                                                                "src": "5541:10:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_address",
                                                                                    "typeString": "address"
                                                                                }
                                                                            },
                                                                            "isConstant": false,
                                                                            "isLValue": true,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "IndexAccess",
                                                                            "src": "5528:24:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                                "typeString": "mapping(address => address)"
                                                                            }
                                                                        },
                                                                        "id": 439,
                                                                        "indexExpression": {
                                                                            "expression": {
                                                                                "id": 437,
                                                                                "name": "_coinInfo",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 363,
                                                                                "src": "5553:9:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                                    "typeString": "struct LCoin.Info memory"
                                                                                }
                                                                            },
                                                                            "id": 438,
                                                                            "isConstant": false,
                                                                            "isLValue": true,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberName": "contractAddress",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 779,
                                                                            "src": "5553:25:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        },
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "IndexAccess",
                                                                        "src": "5528:51:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "rightExpression": {
                                                                        "arguments": [
                                                                            {
                                                                                "hexValue": "30",
                                                                                "id": 442,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "5611:1:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                                    "typeString": "int_const 0"
                                                                                },
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                                    "typeString": "int_const 0"
                                                                                }
                                                                            ],
                                                                            "id": 441,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "5603:7:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                                "typeString": "type(address)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 440,
                                                                                "name": "address",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "5603:7:0",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        },
                                                                        "id": 443,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "typeConversion",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "5603:10:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "src": "5528:85:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "74686520636f696e2065786973747320696e207468652067617465",
                                                                    "id": 445,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "5631:29:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_55b5ab3acaf98f73f24e340e3fce4376f33427349016b0431ff2c4efa932d18e",
                                                                        "typeString": "literal_string \"the coin exists in the gate\""
                                                                    },
                                                                    "value": "the coin exists in the gate"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_55b5ab3acaf98f73f24e340e3fce4376f33427349016b0431ff2c4efa932d18e",
                                                                        "typeString": "literal_string \"the coin exists in the gate\""
                                                                    }
                                                                ],
                                                                "id": 432,
                                                                "name": "require",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                    4294967278,
                                                                    4294967278
                                                                ],
                                                                "referencedDeclaration": 4294967278,
                                                                "src": "5503:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (bool,string memory) pure"
                                                                }
                                                            },
                                                            "id": 446,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "5503:171:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 447,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5503:171:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 457,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "baseExpression": {
                                                                    "baseExpression": {
                                                                        "id": 448,
                                                                        "name": "gateCoinList",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 17,
                                                                        "src": "5688:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                            "typeString": "mapping(address => mapping(address => address))"
                                                                        }
                                                                    },
                                                                    "id": 453,
                                                                    "indexExpression": {
                                                                        "expression": {
                                                                            "id": 449,
                                                                            "name": "msg",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 4294967281,
                                                                            "src": "5701:3:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_magic_message",
                                                                                "typeString": "msg"
                                                                            }
                                                                        },
                                                                        "id": 450,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "sender",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "5701:10:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "5688:24:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                        "typeString": "mapping(address => address)"
                                                                    }
                                                                },
                                                                "id": 454,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 451,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 363,
                                                                        "src": "5713:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 452,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 779,
                                                                    "src": "5713:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "nodeType": "IndexAccess",
                                                                "src": "5688:51:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "expression": {
                                                                    "id": 455,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 363,
                                                                    "src": "5742:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 456,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "contractAddress",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 779,
                                                                "src": "5742:42:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "5688:96:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 458,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5688:96:0"
                                                    }
                                                ]
                                            },
                                            "id": 460,
                                            "nodeType": "IfStatement",
                                            "src": "4925:870:0",
                                            "trueBody": {
                                                "id": 418,
                                                "nodeType": "Block",
                                                "src": "4981:345:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "id": 380,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 375,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 363,
                                                                    "src": "4995:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 377,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "creator",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 791,
                                                                "src": "4995:17:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "expression": {
                                                                    "id": 378,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967281,
                                                                    "src": "5015:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 379,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "src": "5015:10:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "4995:30:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 381,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "4995:30:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 386,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 382,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 363,
                                                                    "src": "5039:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 384,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "marketunlock",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 787,
                                                                "src": "5039:22:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "66616c7365",
                                                                "id": 385,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "5064:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "false"
                                                            },
                                                            "src": "5039:30:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "id": 387,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5039:30:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 392,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 388,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 363,
                                                                    "src": "5083:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 390,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "unlock",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 789,
                                                                "src": "5083:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "66616c7365",
                                                                "id": 391,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "5102:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "false"
                                                            },
                                                            "src": "5083:24:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "id": 393,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5083:24:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 398,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "expression": {
                                                                    "id": 394,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 363,
                                                                    "src": "5121:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 396,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "memberName": "isUsed",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 793,
                                                                "src": "5121:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "hexValue": "74727565",
                                                                "id": 397,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "5140:4:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "true"
                                                            },
                                                            "src": "5121:23:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "id": 399,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5121:23:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 405,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "baseExpression": {
                                                                    "id": 400,
                                                                    "name": "coinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 22,
                                                                    "src": "5158:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 403,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 401,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 363,
                                                                        "src": "5167:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 402,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 779,
                                                                    "src": "5167:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "nodeType": "IndexAccess",
                                                                "src": "5158:35:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$794_storage",
                                                                    "typeString": "struct LCoin.Info storage ref"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "id": 404,
                                                                "name": "_coinInfo",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 363,
                                                                "src": "5196:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                    "typeString": "struct LCoin.Info memory"
                                                                }
                                                            },
                                                            "src": "5158:47:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Info_$794_storage",
                                                                "typeString": "struct LCoin.Info storage ref"
                                                            }
                                                        },
                                                        "id": 406,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5158:47:0"
                                                    },
                                                    {
                                                        "expression": {
                                                            "id": 416,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "baseExpression": {
                                                                    "baseExpression": {
                                                                        "id": 407,
                                                                        "name": "gateCoinList",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 17,
                                                                        "src": "5219:12:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                                                            "typeString": "mapping(address => mapping(address => address))"
                                                                        }
                                                                    },
                                                                    "id": 412,
                                                                    "indexExpression": {
                                                                        "expression": {
                                                                            "id": 408,
                                                                            "name": "msg",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 4294967281,
                                                                            "src": "5232:3:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_magic_message",
                                                                                "typeString": "msg"
                                                                            }
                                                                        },
                                                                        "id": 409,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "sender",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "5232:10:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "5219:24:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                                        "typeString": "mapping(address => address)"
                                                                    }
                                                                },
                                                                "id": 413,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 410,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 363,
                                                                        "src": "5244:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 411,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 779,
                                                                    "src": "5244:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": true,
                                                                "nodeType": "IndexAccess",
                                                                "src": "5219:51:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "expression": {
                                                                    "id": 414,
                                                                    "name": "_coinInfo",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 363,
                                                                    "src": "5273:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                        "typeString": "struct LCoin.Info memory"
                                                                    }
                                                                },
                                                                "id": 415,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "contractAddress",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 779,
                                                                "src": "5273:42:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "src": "5219:96:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 417,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "5219:96:0"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "functionSelector": "e911abec",
                                "id": 462,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 366,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 365,
                                            "name": "onlyGator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 55,
                                            "src": "4905:9:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "4905:9:0"
                                    }
                                ],
                                "name": "addCoinbyGator",
                                "nameLocation": "4852:14:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 364,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 363,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "4885:9:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 462,
                                            "src": "4867:27:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 362,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 361,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 794,
                                                    "src": "4867:10:0"
                                                },
                                                "referencedDeclaration": 794,
                                                "src": "4867:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$794_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "4866:29:0"
                                },
                                "returnParameters": {
                                    "id": 367,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "4915:0:0"
                                },
                                "scope": 612,
                                "src": "4843:958:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    631
                                ],
                                "body": {
                                    "id": 487,
                                    "nodeType": "Block",
                                    "src": "5903:192:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 476,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 470,
                                                                    "name": "coinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 22,
                                                                    "src": "5934:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 472,
                                                                "indexExpression": {
                                                                    "id": 471,
                                                                    "name": "_internalCoinAddress",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 464,
                                                                    "src": "5943:20:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "5934:30:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$794_storage",
                                                                    "typeString": "struct LCoin.Info storage ref"
                                                                }
                                                            },
                                                            "id": 473,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "creator",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 791,
                                                            "src": "5934:38:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 474,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "5976:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 475,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "5976:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "5934:52:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "796f752068617665206e6f7420746865207269676874",
                                                        "id": 477,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6000:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed",
                                                            "typeString": "literal_string \"you have not the right\""
                                                        },
                                                        "value": "you have not the right"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed",
                                                            "typeString": "literal_string \"you have not the right\""
                                                        }
                                                    ],
                                                    "id": 469,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "5913:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 478,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5913:121:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 479,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5913:121:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 485,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 480,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "6044:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 482,
                                                        "indexExpression": {
                                                            "id": 481,
                                                            "name": "_internalCoinAddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 464,
                                                            "src": "6053:20:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "6044:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 483,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 789,
                                                    "src": "6044:37:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 484,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6084:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "6044:44:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 486,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6044:44:0"
                                        }
                                    ]
                                },
                                "functionSelector": "385e4b7a",
                                "id": 488,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 467,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 466,
                                            "name": "onlyGator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 55,
                                            "src": "5889:9:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "5889:9:0"
                                    }
                                ],
                                "name": "unlockCoinbyGator",
                                "nameLocation": "5816:17:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 465,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 464,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "5842:20:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 488,
                                            "src": "5834:28:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 463,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5834:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "5833:30:0"
                                },
                                "returnParameters": {
                                    "id": 468,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "5903:0:0"
                                },
                                "scope": 612,
                                "src": "5807:288:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    636
                                ],
                                "body": {
                                    "id": 513,
                                    "nodeType": "Block",
                                    "src": "6175:193:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 502,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 496,
                                                                    "name": "coinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 22,
                                                                    "src": "6206:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 498,
                                                                "indexExpression": {
                                                                    "id": 497,
                                                                    "name": "_internalCoinAddress",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 490,
                                                                    "src": "6215:20:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "6206:30:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$794_storage",
                                                                    "typeString": "struct LCoin.Info storage ref"
                                                                }
                                                            },
                                                            "id": 499,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "creator",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 791,
                                                            "src": "6206:38:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 500,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "6248:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 501,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "6248:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "6206:52:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "796f752068617665206e6f7420746865207269676874",
                                                        "id": 503,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6272:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed",
                                                            "typeString": "literal_string \"you have not the right\""
                                                        },
                                                        "value": "you have not the right"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed",
                                                            "typeString": "literal_string \"you have not the right\""
                                                        }
                                                    ],
                                                    "id": 495,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "6185:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 504,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6185:121:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 505,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6185:121:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 511,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 506,
                                                            "name": "coinList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 22,
                                                            "src": "6316:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                            }
                                                        },
                                                        "id": 508,
                                                        "indexExpression": {
                                                            "id": 507,
                                                            "name": "_internalCoinAddress",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 490,
                                                            "src": "6325:20:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "6316:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_storage",
                                                            "typeString": "struct LCoin.Info storage ref"
                                                        }
                                                    },
                                                    "id": 509,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 789,
                                                    "src": "6316:37:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 510,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6356:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "6316:45:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 512,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6316:45:0"
                                        }
                                    ]
                                },
                                "functionSelector": "441eb548",
                                "id": 514,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 493,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 492,
                                            "name": "onlyGator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 55,
                                            "src": "6165:9:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "6165:9:0"
                                    }
                                ],
                                "name": "lockCoinbyGator",
                                "nameLocation": "6110:15:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 491,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 490,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "6134:20:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 514,
                                            "src": "6126:28:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 489,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6126:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6125:30:0"
                                },
                                "returnParameters": {
                                    "id": 494,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "6175:0:0"
                                },
                                "scope": 612,
                                "src": "6101:267:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    642
                                ],
                                "body": {
                                    "id": 574,
                                    "nodeType": "Block",
                                    "src": "6449:422:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 530,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 523,
                                                                    "name": "coinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 22,
                                                                    "src": "6480:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 526,
                                                                "indexExpression": {
                                                                    "expression": {
                                                                        "id": 524,
                                                                        "name": "_coinInfo",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 517,
                                                                        "src": "6489:9:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                            "typeString": "struct LCoin.Info memory"
                                                                        }
                                                                    },
                                                                    "id": 525,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "contractAddress",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 779,
                                                                    "src": "6489:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "6480:35:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$794_storage",
                                                                    "typeString": "struct LCoin.Info storage ref"
                                                                }
                                                            },
                                                            "id": 527,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "creator",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 791,
                                                            "src": "6480:43:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 528,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "6527:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 529,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "6527:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "6480:57:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "796f752068617665206e6f7420746865207269676874",
                                                        "id": 531,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6551:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed",
                                                            "typeString": "literal_string \"you have not the right\""
                                                        },
                                                        "value": "you have not the right"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_c1f1ad19ee972f617338b04296563e54a3b8630651eb9cb4ffda0c17ea76d7ed",
                                                            "typeString": "literal_string \"you have not the right\""
                                                        }
                                                    ],
                                                    "id": 522,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "6459:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 532,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6459:126:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 533,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6459:126:0"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        },
                                                        "id": 538,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 535,
                                                                "name": "_coinInfo",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 517,
                                                                "src": "6603:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                    "typeString": "struct LCoin.Info memory"
                                                                }
                                                            },
                                                            "id": 536,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "scope",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 771,
                                                            "src": "6603:15:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "34",
                                                            "id": 537,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "6622:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_4_by_1",
                                                                "typeString": "int_const 4"
                                                            },
                                                            "value": "4"
                                                        },
                                                        "src": "6603:20:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520636f696e2073636f7065206973206e6f74206a757374696669656420",
                                                        "id": 539,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6625:34:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_d35edcbfadff3d182421fe87d6d101d172666bcdd07b46d70b2a94d2cce5545f",
                                                            "typeString": "literal_string \"the coin scope is not justified \""
                                                        },
                                                        "value": "the coin scope is not justified "
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_d35edcbfadff3d182421fe87d6d101d172666bcdd07b46d70b2a94d2cce5545f",
                                                            "typeString": "literal_string \"the coin scope is not justified \""
                                                        }
                                                    ],
                                                    "id": 534,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "6595:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 540,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "6595:65:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 541,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6595:65:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 546,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 542,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 517,
                                                        "src": "6670:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 544,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "marketunlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 787,
                                                    "src": "6670:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 545,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6695:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "6670:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 547,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6670:30:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 552,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 548,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 517,
                                                        "src": "6710:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 550,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "unlock",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 789,
                                                    "src": "6710:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "66616c7365",
                                                    "id": 551,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6729:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "6710:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 553,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6710:24:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 558,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 554,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 517,
                                                        "src": "6744:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 556,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "isUsed",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 793,
                                                    "src": "6744:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 557,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6763:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "6744:23:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 559,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6744:23:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 565,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "expression": {
                                                        "id": 560,
                                                        "name": "_coinInfo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 517,
                                                        "src": "6777:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                            "typeString": "struct LCoin.Info memory"
                                                        }
                                                    },
                                                    "id": 562,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "creator",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 791,
                                                    "src": "6777:17:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "expression": {
                                                        "id": 563,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "6797:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 564,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "6797:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "6777:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 566,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6777:30:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 572,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 567,
                                                        "name": "coinList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 22,
                                                        "src": "6817:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                            "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                        }
                                                    },
                                                    "id": 570,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 568,
                                                            "name": "_coinInfo",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 517,
                                                            "src": "6826:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                                "typeString": "struct LCoin.Info memory"
                                                            }
                                                        },
                                                        "id": 569,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "contractAddress",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 779,
                                                        "src": "6826:25:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "6817:35:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$794_storage",
                                                        "typeString": "struct LCoin.Info storage ref"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 571,
                                                    "name": "_coinInfo",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 517,
                                                    "src": "6855:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                        "typeString": "struct LCoin.Info memory"
                                                    }
                                                },
                                                "src": "6817:47:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$794_storage",
                                                    "typeString": "struct LCoin.Info storage ref"
                                                }
                                            },
                                            "id": 573,
                                            "nodeType": "ExpressionStatement",
                                            "src": "6817:47:0"
                                        }
                                    ]
                                },
                                "functionSelector": "a935b6af",
                                "id": 575,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 520,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 519,
                                            "name": "onlyGator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 55,
                                            "src": "6439:9:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "6439:9:0"
                                    }
                                ],
                                "name": "updateCoinbyGator",
                                "nameLocation": "6383:17:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 518,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 517,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "6419:9:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 575,
                                            "src": "6401:27:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 516,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 515,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 794,
                                                    "src": "6401:10:0"
                                                },
                                                "referencedDeclaration": 794,
                                                "src": "6401:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$794_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6400:29:0"
                                },
                                "returnParameters": {
                                    "id": 521,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "6449:0:0"
                                },
                                "scope": 612,
                                "src": "6374:497:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    724
                                ],
                                "body": {
                                    "id": 597,
                                    "nodeType": "Block",
                                    "src": "6994:170:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 589,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 584,
                                                                    "name": "coinList",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 22,
                                                                    "src": "7025:8:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                                    }
                                                                },
                                                                "id": 586,
                                                                "indexExpression": {
                                                                    "id": 585,
                                                                    "name": "_contractaddress",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 577,
                                                                    "src": "7034:16:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "7025:26:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Info_$794_storage",
                                                                    "typeString": "struct LCoin.Info storage ref"
                                                                }
                                                            },
                                                            "id": 587,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isUsed",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 793,
                                                            "src": "7025:33:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "74727565",
                                                            "id": 588,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "7062:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "src": "7025:41:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "74686520636f696e206973206e6f7420657869737473",
                                                        "id": 590,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "7080:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        },
                                                        "value": "the coin is not exists"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_0975cc9a2005ea9c09f2ef1f925b8edc004095ec43e2acae0f2e4a97de0cb38d",
                                                            "typeString": "literal_string \"the coin is not exists\""
                                                        }
                                                    ],
                                                    "id": 583,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "7004:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 591,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7004:110:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 592,
                                            "nodeType": "ExpressionStatement",
                                            "src": "7004:110:0"
                                        },
                                        {
                                            "expression": {
                                                "baseExpression": {
                                                    "id": 593,
                                                    "name": "coinList",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 22,
                                                    "src": "7131:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                        "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                    }
                                                },
                                                "id": 595,
                                                "indexExpression": {
                                                    "id": 594,
                                                    "name": "_contractaddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 577,
                                                    "src": "7140:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "7131:26:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$794_storage",
                                                    "typeString": "struct LCoin.Info storage ref"
                                                }
                                            },
                                            "functionReturnParameters": 582,
                                            "id": 596,
                                            "nodeType": "Return",
                                            "src": "7124:33:0"
                                        }
                                    ]
                                },
                                "functionSelector": "e8dd4655",
                                "id": 598,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getCoinInfo",
                                "nameLocation": "6886:11:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 578,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 577,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "6906:16:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 598,
                                            "src": "6898:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 576,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "6898:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6897:26:0"
                                },
                                "returnParameters": {
                                    "id": 582,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 581,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 598,
                                            "src": "6971:17:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 580,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 579,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 794,
                                                    "src": "6971:10:0"
                                                },
                                                "referencedDeclaration": 794,
                                                "src": "6971:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$794_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "6970:19:0"
                                },
                                "scope": 612,
                                "src": "6877:287:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 610,
                                    "nodeType": "Block",
                                    "src": "7240:59:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "expression": {
                                                    "baseExpression": {
                                                        "id": 605,
                                                        "name": "coinList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 22,
                                                        "src": "7257:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$794_storage_$",
                                                            "typeString": "mapping(address => struct LCoin.Info storage ref)"
                                                        }
                                                    },
                                                    "id": 607,
                                                    "indexExpression": {
                                                        "id": 606,
                                                        "name": "_coinAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 600,
                                                        "src": "7266:12:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "7257:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Info_$794_storage",
                                                        "typeString": "struct LCoin.Info storage ref"
                                                    }
                                                },
                                                "id": 608,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "marketunlock",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 787,
                                                "src": "7257:35:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 604,
                                            "id": 609,
                                            "nodeType": "Return",
                                            "src": "7250:42:0"
                                        }
                                    ]
                                },
                                "functionSelector": "328320bf",
                                "id": 611,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isValidCoin",
                                "nameLocation": "7179:11:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 601,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 600,
                                            "mutability": "mutable",
                                            "name": "_coinAddress",
                                            "nameLocation": "7199:12:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 611,
                                            "src": "7191:20:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 599,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7191:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "7190:22:0"
                                },
                                "returnParameters": {
                                    "id": 604,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 603,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 611,
                                            "src": "7234:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 602,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7234:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "7233:6:0"
                                },
                                "scope": 612,
                                "src": "7170:129:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            }
                        ],
                        "scope": 613,
                        "src": "249:7052:0",
                        "usedErrors": []
                    }
                ],
                "src": "45:7257:0"
            },
            "id": 0
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol",
                "exportedSymbols": {
                    "ICoinV1Events": [
                        616
                    ]
                },
                "id": 617,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 614,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:1"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "ICoinV1Events",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 615,
                            "nodeType": "StructuredDocumentation",
                            "src": "70:88:1",
                            "text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
                        },
                        "fullyImplemented": true,
                        "id": 616,
                        "linearizedBaseContracts": [
                            616
                        ],
                        "name": "ICoinV1Events",
                        "nameLocation": "168:13:1",
                        "nodeType": "ContractDefinition",
                        "nodes": [],
                        "scope": 617,
                        "src": "158:28:1",
                        "usedErrors": []
                    }
                ],
                "src": "45:142:1"
            },
            "id": 1
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GatorActions.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GatorActions.sol",
                "exportedSymbols": {
                    "ICoinV1GatorActions": [
                        643
                    ],
                    "LCoin": [
                        795
                    ]
                },
                "id": 644,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 618,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:2"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol",
                        "file": "../../libraries/base/LCoin.sol",
                        "id": 619,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 644,
                        "sourceUnit": 796,
                        "src": "70:40:2",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "ICoinV1GatorActions",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 620,
                            "nodeType": "StructuredDocumentation",
                            "src": "112:116:2",
                            "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
                        },
                        "fullyImplemented": false,
                        "id": 643,
                        "linearizedBaseContracts": [
                            643
                        ],
                        "name": "ICoinV1GatorActions",
                        "nameLocation": "238:19:2",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "e911abec",
                                "id": 626,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "addCoinbyGator",
                                "nameLocation": "311:14:2",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 624,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 623,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "344:9:2",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 626,
                                            "src": "326:27:2",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 622,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 621,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 794,
                                                    "src": "326:10:2"
                                                },
                                                "referencedDeclaration": 794,
                                                "src": "326:10:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$794_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "325:29:2"
                                },
                                "returnParameters": {
                                    "id": 625,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "363:0:2"
                                },
                                "scope": 643,
                                "src": "302:62:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "385e4b7a",
                                "id": 631,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "unlockCoinbyGator",
                                "nameLocation": "379:17:2",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 629,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 628,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "405:20:2",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 631,
                                            "src": "397:28:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 627,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "397:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "396:30:2"
                                },
                                "returnParameters": {
                                    "id": 630,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "435:0:2"
                                },
                                "scope": 643,
                                "src": "370:66:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "441eb548",
                                "id": 636,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "lockCoinbyGator",
                                "nameLocation": "451:15:2",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 634,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 633,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "475:20:2",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 636,
                                            "src": "467:28:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 632,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "467:7:2",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "466:30:2"
                                },
                                "returnParameters": {
                                    "id": 635,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "505:0:2"
                                },
                                "scope": 643,
                                "src": "442:64:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "a935b6af",
                                "id": 642,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "updateCoinbyGator",
                                "nameLocation": "521:17:2",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 640,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 639,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "557:9:2",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 642,
                                            "src": "539:27:2",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 638,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 637,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 794,
                                                    "src": "539:10:2"
                                                },
                                                "referencedDeclaration": 794,
                                                "src": "539:10:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$794_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "538:29:2"
                                },
                                "returnParameters": {
                                    "id": 641,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "576:0:2"
                                },
                                "scope": 643,
                                "src": "512:65:2",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 644,
                        "src": "228:351:2",
                        "usedErrors": []
                    }
                ],
                "src": "45:535:2"
            },
            "id": 2
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol",
                "exportedSymbols": {
                    "ICoinV1Immutables": [
                        659
                    ]
                },
                "id": 660,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 645,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:3"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "ICoinV1Immutables",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 646,
                            "nodeType": "StructuredDocumentation",
                            "src": "70:153:3",
                            "text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
                        },
                        "fullyImplemented": false,
                        "id": 659,
                        "linearizedBaseContracts": [
                            659
                        ],
                        "name": "ICoinV1Immutables",
                        "nameLocation": "233:17:3",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "documentation": {
                                    "id": 647,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "257:138:3",
                                    "text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
                                },
                                "functionSelector": "47d0a634",
                                "id": 652,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "gatorContractAddress",
                                "nameLocation": "409:20:3",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 648,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "429:2:3"
                                },
                                "returnParameters": {
                                    "id": 651,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 650,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 652,
                                            "src": "455:7:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 649,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "455:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "454:9:3"
                                },
                                "scope": 659,
                                "src": "400:64:3",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 653,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "470:138:3",
                                    "text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
                                },
                                "functionSelector": "492b7107",
                                "id": 658,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "marketorContractAddress",
                                "nameLocation": "622:23:3",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 654,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "645:2:3"
                                },
                                "returnParameters": {
                                    "id": 657,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 656,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 658,
                                            "src": "671:7:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 655,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "671:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "670:9:3"
                                },
                                "scope": 659,
                                "src": "613:67:3",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 660,
                        "src": "223:459:3",
                        "usedErrors": []
                    }
                ],
                "src": "45:638:3"
            },
            "id": 3
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol",
                "exportedSymbols": {
                    "ICoinV1MarketorActions": [
                        712
                    ],
                    "LCoin": [
                        795
                    ]
                },
                "id": 713,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 661,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:4"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol",
                        "file": "../../libraries/base/LCoin.sol",
                        "id": 662,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 713,
                        "sourceUnit": 796,
                        "src": "70:40:4",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "ICoinV1MarketorActions",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 663,
                            "nodeType": "StructuredDocumentation",
                            "src": "112:116:4",
                            "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
                        },
                        "fullyImplemented": false,
                        "id": 712,
                        "linearizedBaseContracts": [
                            712
                        ],
                        "name": "ICoinV1MarketorActions",
                        "nameLocation": "238:22:4",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "87a70938",
                                "id": 669,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "addCoinbyMarketor",
                                "nameLocation": "314:17:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 667,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 666,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "350:9:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 669,
                                            "src": "332:27:4",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 665,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 664,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 794,
                                                    "src": "332:10:4"
                                                },
                                                "referencedDeclaration": 794,
                                                "src": "332:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$794_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "331:29:4"
                                },
                                "returnParameters": {
                                    "id": 668,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "369:0:4"
                                },
                                "scope": 712,
                                "src": "305:65:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "5385cbf5",
                                "id": 676,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "changeCoinScopebyMarketor",
                                "nameLocation": "385:25:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 674,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 671,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "428:20:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 676,
                                            "src": "420:28:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 670,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "420:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 673,
                                            "mutability": "mutable",
                                            "name": "_scope",
                                            "nameLocation": "464:6:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 676,
                                            "src": "458:12:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            },
                                            "typeName": {
                                                "id": 672,
                                                "name": "uint8",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "458:5:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "410:66:4"
                                },
                                "returnParameters": {
                                    "id": 675,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "485:0:4"
                                },
                                "scope": 712,
                                "src": "376:110:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "b20be2b4",
                                "id": 681,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "lockCoinbyMarketor",
                                "nameLocation": "501:18:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 679,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 678,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "528:20:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 681,
                                            "src": "520:28:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 677,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "520:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "519:30:4"
                                },
                                "returnParameters": {
                                    "id": 680,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "558:0:4"
                                },
                                "scope": 712,
                                "src": "492:67:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "1d3b8f67",
                                "id": 686,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "unlockCoinbyMarketor",
                                "nameLocation": "574:20:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 684,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 683,
                                            "mutability": "mutable",
                                            "name": "_internalCoinAddress",
                                            "nameLocation": "603:20:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 686,
                                            "src": "595:28:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 682,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "595:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "594:30:4"
                                },
                                "returnParameters": {
                                    "id": 685,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "633:0:4"
                                },
                                "scope": 712,
                                "src": "565:69:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "24fd7139",
                                "id": 692,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "updateCoinbyMarketor",
                                "nameLocation": "649:20:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 690,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 689,
                                            "mutability": "mutable",
                                            "name": "_coinInfo",
                                            "nameLocation": "688:9:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 692,
                                            "src": "670:27:4",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 688,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 687,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 794,
                                                    "src": "670:10:4"
                                                },
                                                "referencedDeclaration": 794,
                                                "src": "670:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$794_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "669:29:4"
                                },
                                "returnParameters": {
                                    "id": 691,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "707:0:4"
                                },
                                "scope": 712,
                                "src": "640:68:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "cfcdca52",
                                "id": 699,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "impoveGateCoinbyMarketor",
                                "nameLocation": "723:24:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 697,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 694,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "765:16:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 699,
                                            "src": "757:24:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 693,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "757:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 696,
                                            "mutability": "mutable",
                                            "name": "_gateaddress",
                                            "nameLocation": "799:12:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 699,
                                            "src": "791:20:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 695,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "791:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "747:70:4"
                                },
                                "returnParameters": {
                                    "id": 698,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "826:0:4"
                                },
                                "scope": 712,
                                "src": "714:113:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "7c3e2f02",
                                "id": 704,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "delCoinbyMarketor",
                                "nameLocation": "842:17:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 702,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 701,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "868:16:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 704,
                                            "src": "860:24:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 700,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "860:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "859:26:4"
                                },
                                "returnParameters": {
                                    "id": 703,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "894:0:4"
                                },
                                "scope": 712,
                                "src": "833:62:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "eaec0112",
                                "id": 711,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "delGateCoinbyMarketor",
                                "nameLocation": "910:21:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 709,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 706,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "949:16:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 711,
                                            "src": "941:24:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 705,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "941:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 708,
                                            "mutability": "mutable",
                                            "name": "_gateaddress",
                                            "nameLocation": "983:12:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 711,
                                            "src": "975:20:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 707,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "975:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "931:70:4"
                                },
                                "returnParameters": {
                                    "id": 710,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1010:0:4"
                                },
                                "scope": 712,
                                "src": "901:110:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 713,
                        "src": "228:785:4",
                        "usedErrors": []
                    }
                ],
                "src": "45:969:4"
            },
            "id": 4
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol",
                "exportedSymbols": {
                    "ICoinV1State": [
                        725
                    ],
                    "LCoin": [
                        795
                    ]
                },
                "id": 726,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 714,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:5"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol",
                        "file": "../../libraries/base/LCoin.sol",
                        "id": 715,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 726,
                        "sourceUnit": 796,
                        "src": "70:40:5",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "ICoinV1State",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 716,
                            "nodeType": "StructuredDocumentation",
                            "src": "112:169:5",
                            "text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
                        },
                        "fullyImplemented": false,
                        "id": 725,
                        "linearizedBaseContracts": [
                            725
                        ],
                        "name": "ICoinV1State",
                        "nameLocation": "291:12:5",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "e8dd4655",
                                "id": 724,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getCoinInfo",
                                "nameLocation": "319:11:5",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 719,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 718,
                                            "mutability": "mutable",
                                            "name": "_contractaddress",
                                            "nameLocation": "339:16:5",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 724,
                                            "src": "331:24:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 717,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "331:7:5",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "330:26:5"
                                },
                                "returnParameters": {
                                    "id": 723,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 722,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 724,
                                            "src": "404:17:5",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Info_$794_memory_ptr",
                                                "typeString": "struct LCoin.Info"
                                            },
                                            "typeName": {
                                                "id": 721,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 720,
                                                    "name": "LCoin.Info",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 794,
                                                    "src": "404:10:5"
                                                },
                                                "referencedDeclaration": 794,
                                                "src": "404:10:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Info_$794_storage_ptr",
                                                    "typeString": "struct LCoin.Info"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "403:19:5"
                                },
                                "scope": 725,
                                "src": "310:113:5",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 726,
                        "src": "281:144:5",
                        "usedErrors": []
                    }
                ],
                "src": "45:381:5"
            },
            "id": 5
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Gator/IGatorV1State.sol",
                "exportedSymbols": {
                    "IGatorV1State": [
                        735
                    ],
                    "LCustomer": [
                        817
                    ]
                },
                "id": 736,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 727,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:6"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol",
                        "file": "../../libraries/base/LCustomer.sol",
                        "id": 728,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 736,
                        "sourceUnit": 818,
                        "src": "70:44:6",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IGatorV1State",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 729,
                            "nodeType": "StructuredDocumentation",
                            "src": "116:169:6",
                            "text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
                        },
                        "fullyImplemented": false,
                        "id": 735,
                        "linearizedBaseContracts": [
                            735
                        ],
                        "name": "IGatorV1State",
                        "nameLocation": "295:13:6",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "54a460f6",
                                "id": 734,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isValidGator",
                                "nameLocation": "324:12:6",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 730,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "336:2:6"
                                },
                                "returnParameters": {
                                    "id": 733,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 732,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 734,
                                            "src": "362:4:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 731,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "362:4:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "361:6:6"
                                },
                                "scope": 735,
                                "src": "315:53:6",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 736,
                        "src": "285:85:6",
                        "usedErrors": []
                    }
                ],
                "src": "45:326:6"
            },
            "id": 6
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Coin.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Coin.sol",
                "exportedSymbols": {
                    "ICoinV1Events": [
                        616
                    ],
                    "ICoinV1GatorActions": [
                        643
                    ],
                    "ICoinV1Immutables": [
                        659
                    ],
                    "ICoinV1MarketorActions": [
                        712
                    ],
                    "ICoinV1State": [
                        725
                    ],
                    "ITTSwapV1Coin": [
                        754
                    ],
                    "LCoin": [
                        795
                    ]
                },
                "id": 755,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 737,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:7"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Events.sol",
                        "file": "./Coin/ICoinV1Events.sol",
                        "id": 738,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 755,
                        "sourceUnit": 617,
                        "src": "70:34:7",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1GatorActions.sol",
                        "file": "./Coin/ICoinV1GatorActions.sol",
                        "id": 739,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 755,
                        "sourceUnit": 644,
                        "src": "105:40:7",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1Immutables.sol",
                        "file": "./Coin/ICoinV1Immutables.sol",
                        "id": 740,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 755,
                        "sourceUnit": 660,
                        "src": "146:38:7",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1MarketorActions.sol",
                        "file": "./Coin/ICoinV1MarketorActions.sol",
                        "id": 741,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 755,
                        "sourceUnit": 713,
                        "src": "185:43:7",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Coin/ICoinV1State.sol",
                        "file": "./Coin/ICoinV1State.sol",
                        "id": 742,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 755,
                        "sourceUnit": 726,
                        "src": "229:33:7",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 744,
                                    "name": "ICoinV1Events",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 616,
                                    "src": "560:13:7"
                                },
                                "id": 745,
                                "nodeType": "InheritanceSpecifier",
                                "src": "560:13:7"
                            },
                            {
                                "baseName": {
                                    "id": 746,
                                    "name": "ICoinV1GatorActions",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 643,
                                    "src": "579:19:7"
                                },
                                "id": 747,
                                "nodeType": "InheritanceSpecifier",
                                "src": "579:19:7"
                            },
                            {
                                "baseName": {
                                    "id": 748,
                                    "name": "ICoinV1Immutables",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 659,
                                    "src": "604:17:7"
                                },
                                "id": 749,
                                "nodeType": "InheritanceSpecifier",
                                "src": "604:17:7"
                            },
                            {
                                "baseName": {
                                    "id": 750,
                                    "name": "ICoinV1MarketorActions",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 712,
                                    "src": "627:22:7"
                                },
                                "id": 751,
                                "nodeType": "InheritanceSpecifier",
                                "src": "627:22:7"
                            },
                            {
                                "baseName": {
                                    "id": 752,
                                    "name": "ICoinV1State",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 725,
                                    "src": "655:12:7"
                                },
                                "id": 753,
                                "nodeType": "InheritanceSpecifier",
                                "src": "655:12:7"
                            }
                        ],
                        "canonicalName": "ITTSwapV1Coin",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 743,
                            "nodeType": "StructuredDocumentation",
                            "src": "264:265:7",
                            "text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
                        },
                        "fullyImplemented": false,
                        "id": 754,
                        "linearizedBaseContracts": [
                            754,
                            725,
                            712,
                            659,
                            643,
                            616
                        ],
                        "name": "ITTSwapV1Coin",
                        "nameLocation": "539:13:7",
                        "nodeType": "ContractDefinition",
                        "nodes": [],
                        "scope": 755,
                        "src": "529:143:7",
                        "usedErrors": []
                    }
                ],
                "src": "45:628:7"
            },
            "id": 7
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol",
                "exportedSymbols": {
                    "IMarketorV1State": [
                        763
                    ]
                },
                "id": 764,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 756,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:8"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IMarketorV1State",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 757,
                            "nodeType": "StructuredDocumentation",
                            "src": "70:169:8",
                            "text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
                        },
                        "fullyImplemented": false,
                        "id": 763,
                        "linearizedBaseContracts": [
                            763
                        ],
                        "name": "IMarketorV1State",
                        "nameLocation": "249:16:8",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "ad87d2ba",
                                "id": 762,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isValidMarketor",
                                "nameLocation": "281:15:8",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 758,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "296:2:8"
                                },
                                "returnParameters": {
                                    "id": 761,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 760,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 762,
                                            "src": "322:4:8",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 759,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "322:4:8",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "321:6:8"
                                },
                                "scope": 763,
                                "src": "272:56:8",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 764,
                        "src": "239:91:8",
                        "usedErrors": []
                    }
                ],
                "src": "45:286:8"
            },
            "id": 8
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCoin.sol",
                "exportedSymbols": {
                    "LCoin": [
                        795
                    ]
                },
                "id": 796,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 765,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:9"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "LCoin",
                        "contractDependencies": [],
                        "contractKind": "library",
                        "fullyImplemented": true,
                        "id": 795,
                        "linearizedBaseContracts": [
                            795
                        ],
                        "name": "LCoin",
                        "nameLocation": "78:5:9",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "canonicalName": "LCoin.Info",
                                "id": 794,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 767,
                                        "mutability": "mutable",
                                        "name": "coinFullName",
                                        "nameLocation": "120:12:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "112:20:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 766,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "112:7:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 769,
                                        "mutability": "mutable",
                                        "name": "symbol",
                                        "nameLocation": "164:6:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "157:13:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes6",
                                            "typeString": "bytes6"
                                        },
                                        "typeName": {
                                            "id": 768,
                                            "name": "bytes6",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "157:6:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes6",
                                                "typeString": "bytes6"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 771,
                                        "mutability": "mutable",
                                        "name": "scope",
                                        "nameLocation": "201:5:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "195:11:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        },
                                        "typeName": {
                                            "id": 770,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "195:5:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 773,
                                        "mutability": "mutable",
                                        "name": "decimals",
                                        "nameLocation": "318:8:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "312:14:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        },
                                        "typeName": {
                                            "id": 772,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "312:5:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 775,
                                        "mutability": "mutable",
                                        "name": "maxSupply",
                                        "nameLocation": "353:9:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "345:17:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "typeName": {
                                            "id": 774,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "345:7:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 777,
                                        "mutability": "mutable",
                                        "name": "totalSupply",
                                        "nameLocation": "392:11:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "384:19:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "typeName": {
                                            "id": 776,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "384:7:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 779,
                                        "mutability": "mutable",
                                        "name": "contractAddress",
                                        "nameLocation": "433:15:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "425:23:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 778,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "425:7:9",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 781,
                                        "mutability": "mutable",
                                        "name": "WhitePaperUrl",
                                        "nameLocation": "481:13:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "473:21:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 780,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "473:7:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 783,
                                        "mutability": "mutable",
                                        "name": "OfficalWebsite",
                                        "nameLocation": "530:14:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "522:22:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 782,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "522:7:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 785,
                                        "mutability": "mutable",
                                        "name": "blockExplorerUrl",
                                        "nameLocation": "571:16:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "563:24:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 784,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "563:7:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 787,
                                        "mutability": "mutable",
                                        "name": "marketunlock",
                                        "nameLocation": "617:12:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "612:17:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 786,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "612:4:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 789,
                                        "mutability": "mutable",
                                        "name": "unlock",
                                        "nameLocation": "656:6:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "651:11:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 788,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "651:4:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 791,
                                        "mutability": "mutable",
                                        "name": "creator",
                                        "nameLocation": "692:7:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "684:15:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 790,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "684:7:9",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 793,
                                        "mutability": "mutable",
                                        "name": "isUsed",
                                        "nameLocation": "726:6:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 794,
                                        "src": "721:11:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 792,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "721:4:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "Info",
                                "nameLocation": "97:4:9",
                                "nodeType": "StructDefinition",
                                "scope": 795,
                                "src": "90:649:9",
                                "visibility": "public"
                            }
                        ],
                        "scope": 796,
                        "src": "70:671:9",
                        "usedErrors": []
                    }
                ],
                "src": "45:697:9"
            },
            "id": 9
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/libraries/base/LCustomer.sol",
                "exportedSymbols": {
                    "LCustomer": [
                        817
                    ]
                },
                "id": 818,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 797,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:10"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "LCustomer",
                        "contractDependencies": [],
                        "contractKind": "library",
                        "fullyImplemented": true,
                        "id": 817,
                        "linearizedBaseContracts": [
                            817
                        ],
                        "name": "LCustomer",
                        "nameLocation": "78:9:10",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "canonicalName": "LCustomer.Info",
                                "id": 816,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 799,
                                        "mutability": "mutable",
                                        "name": "neckname",
                                        "nameLocation": "246:8:10",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 816,
                                        "src": "238:16:10",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        },
                                        "typeName": {
                                            "id": 798,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "238:7:10",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 801,
                                        "mutability": "mutable",
                                        "name": "createtimestamp",
                                        "nameLocation": "359:15:10",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 816,
                                        "src": "352:22:10",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                        },
                                        "typeName": {
                                            "id": 800,
                                            "name": "uint32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "352:6:10",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 803,
                                        "mutability": "mutable",
                                        "name": "recommender",
                                        "nameLocation": "480:11:10",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 816,
                                        "src": "472:19:10",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 802,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "472:7:10",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 805,
                                        "mutability": "mutable",
                                        "name": "customerKey",
                                        "nameLocation": "544:11:10",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 816,
                                        "src": "537:18:10",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint40",
                                            "typeString": "uint40"
                                        },
                                        "typeName": {
                                            "id": 804,
                                            "name": "uint40",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "537:6:10",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint40",
                                                "typeString": "uint40"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 807,
                                        "mutability": "mutable",
                                        "name": "Gater",
                                        "nameLocation": "609:5:10",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 816,
                                        "src": "601:13:10",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 806,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "601:7:10",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 809,
                                        "mutability": "mutable",
                                        "name": "GaterKey",
                                        "nameLocation": "631:8:10",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 816,
                                        "src": "624:15:10",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                        },
                                        "typeName": {
                                            "id": 808,
                                            "name": "uint32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "624:6:10",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint32",
                                                "typeString": "uint32"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 811,
                                        "mutability": "mutable",
                                        "name": "contractAddress",
                                        "nameLocation": "681:15:10",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 816,
                                        "src": "673:23:10",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 810,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "673:7:10",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 813,
                                        "mutability": "mutable",
                                        "name": "isUsed",
                                        "nameLocation": "711:6:10",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 816,
                                        "src": "706:11:10",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 812,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "706:4:10",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 815,
                                        "mutability": "mutable",
                                        "name": "unlock",
                                        "nameLocation": "732:6:10",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 816,
                                        "src": "727:11:10",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 814,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "727:4:10",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "Info",
                                "nameLocation": "101:4:10",
                                "nodeType": "StructDefinition",
                                "scope": 817,
                                "src": "94:651:10",
                                "visibility": "public"
                            }
                        ],
                        "scope": 818,
                        "src": "70:677:10",
                        "usedErrors": []
                    }
                ],
                "src": "45:703:10"
            },
            "id": 10
        }
    }
}