{
    "contracts": {
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Marketor.sol": {
            "TTSwapV1Marketor": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_marketCreator",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "Marketors",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "delMarketorByMarketCreator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "isValidMarketor",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketCreator",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "setMarketorByMarketCreator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "delMarketorByMarketCreator(address)": {
                            "details": "Explain to a developer any extra details"
                        },
                        "isValidMarketor()": {
                            "details": "Explain to a developer any extra details"
                        },
                        "setMarketorByMarketCreator(address)": {
                            "details": "Explain to a developer any extra details"
                        }
                    },
                    "stateVariables": {
                        "marketCreator": {
                            "return": "The contract address",
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {
                            "@_20": {
                                "entryPoint": null,
                                "id": 20,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "abi_decode_tuple_t_address_fromMemory": {
                                "entryPoint": 84,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            }
                        },
                        "generatedSources": [
                            {
                                "ast": {
                                    "nodeType": "YulBlock",
                                    "src": "0:306:6",
                                    "statements": [
                                        {
                                            "nodeType": "YulBlock",
                                            "src": "6:3:6",
                                            "statements": []
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "95:209:6",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "141:16:6",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "150:1:6",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "153:1:6",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "143:6:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "143:12:6"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "143:12:6"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "116:7:6"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "125:9:6"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "112:3:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "112:23:6"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "137:2:6",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "108:3:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "108:32:6"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "105:52:6"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "166:29:6",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "185:9:6"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "179:5:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "179:16:6"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulTypedName",
                                                                "src": "170:5:6",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "258:16:6",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "267:1:6",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "270:1:6",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "260:6:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "260:12:6"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "260:12:6"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "217:5:6"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "228:5:6"
                                                                                },
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "243:3:6",
                                                                                                    "type": "",
                                                                                                    "value": "160"
                                                                                                },
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "248:1:6",
                                                                                                    "type": "",
                                                                                                    "value": "1"
                                                                                                }
                                                                                            ],
                                                                                            "functionName": {
                                                                                                "name": "shl",
                                                                                                "nodeType": "YulIdentifier",
                                                                                                "src": "239:3:6"
                                                                                            },
                                                                                            "nodeType": "YulFunctionCall",
                                                                                            "src": "239:11:6"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "252:1:6",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "sub",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "235:3:6"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "235:19:6"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "224:3:6"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "224:31:6"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "214:2:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "214:42:6"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "207:6:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "207:50:6"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "204:70:6"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "283:15:6",
                                                        "value": {
                                                            "name": "value",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "293:5:6"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "283:6:6"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_address_fromMemory",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "61:9:6",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "72:7:6",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "84:6:6",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "14:290:6"
                                        }
                                    ]
                                },
                                "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
                                "id": 6,
                                "language": "Yul",
                                "name": "#utility.yul"
                            }
                        ],
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b5060405161026b38038061026b83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6101d8806100936000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806327cbaabe1461005c5780633855cc651461008c5780635bffec62146100bf578063ad87d2ba146100d4578063b4f3824d146100ec575b600080fd5b60015461006f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100af61009a366004610172565b60006020819052908152604090205460ff1681565b6040519015158152602001610083565b6100d26100cd366004610172565b6100ff565b005b3360009081526020819052604090205460ff166100af565b6100d26100fa366004610172565b61013a565b6001546001600160a01b0316331461011657600080fd5b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b6001546001600160a01b0316331461015157600080fd5b6001600160a01b03166000908152602081905260409020805460ff19169055565b60006020828403121561018457600080fd5b81356001600160a01b038116811461019b57600080fd5b939250505056fea2646970667358221220fe20c2cc2093ab311a64947ae138872b526bdce812fb90118d202c4c0844ef3b64736f6c634300080f0033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x26B CODESIZE SUB DUP1 PUSH2 0x26B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1D8 DUP1 PUSH2 0x93 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27CBAABE EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3855CC65 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x5BFFEC62 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xAD87D2BA EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xB4F3824D EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x6F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH2 0xD2 PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x172 JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAF JUMP JUMPDEST PUSH2 0xD2 PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x172 JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID KECCAK256 0xC2 0xCC KECCAK256 SWAP4 0xAB BALANCE BYTE PUSH5 0x947AE13887 0x2B MSTORE PUSH12 0xDCE812FB90118D202C4C0844 0xEF EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
                        "sourceMap": "116:1130:0:-:0;;;296:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;342:13;:30;;-1:-1:-1;;;;;;342:30:0;-1:-1:-1;;;;;342:30:0;;;;;;;;;;116:1130;;14:290:6;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;:::-;116:1130:0;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {
                            "@Marketors_8": {
                                "entryPoint": null,
                                "id": 8,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@delMarketorByMarketCreator_62": {
                                "entryPoint": 314,
                                "id": 62,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "@isValidMarketor_75": {
                                "entryPoint": null,
                                "id": 75,
                                "parameterSlots": 0,
                                "returnSlots": 1
                            },
                            "@marketCreator_10": {
                                "entryPoint": null,
                                "id": 10,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@setMarketorByMarketCreator_47": {
                                "entryPoint": 255,
                                "id": 47,
                                "parameterSlots": 1,
                                "returnSlots": 0
                            },
                            "abi_decode_tuple_t_address": {
                                "entryPoint": 370,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            }
                        },
                        "generatedSources": [
                            {
                                "ast": {
                                    "nodeType": "YulBlock",
                                    "src": "0:702:6",
                                    "statements": [
                                        {
                                            "nodeType": "YulBlock",
                                            "src": "6:3:6",
                                            "statements": []
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "115:102:6",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "125:26:6",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "137:9:6"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "148:2:6",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "133:3:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "133:18:6"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "125:4:6"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "167:9:6"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "182:6:6"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "198:3:6",
                                                                                            "type": "",
                                                                                            "value": "160"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "203:1:6",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "shl",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "194:3:6"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "194:11:6"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "207:1:6",
                                                                                    "type": "",
                                                                                    "value": "1"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "sub",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "190:3:6"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "190:19:6"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "178:3:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "178:32:6"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "160:6:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "160:51:6"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "160:51:6"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "84:9:6",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "95:6:6",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "106:4:6",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "14:203:6"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "292:216:6",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "338:16:6",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "347:1:6",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "350:1:6",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "340:6:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "340:12:6"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "340:12:6"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "313:7:6"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "322:9:6"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "309:3:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "309:23:6"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "334:2:6",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "305:3:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "305:32:6"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "302:52:6"
                                                    },
                                                    {
                                                        "nodeType": "YulVariableDeclaration",
                                                        "src": "363:36:6",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "389:9:6"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "376:12:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "376:23:6"
                                                        },
                                                        "variables": [
                                                            {
                                                                "name": "value",
                                                                "nodeType": "YulTypedName",
                                                                "src": "367:5:6",
                                                                "type": ""
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "462:16:6",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "471:1:6",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "474:1:6",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "464:6:6"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "464:12:6"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "464:12:6"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "421:5:6"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "432:5:6"
                                                                                },
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "447:3:6",
                                                                                                    "type": "",
                                                                                                    "value": "160"
                                                                                                },
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "452:1:6",
                                                                                                    "type": "",
                                                                                                    "value": "1"
                                                                                                }
                                                                                            ],
                                                                                            "functionName": {
                                                                                                "name": "shl",
                                                                                                "nodeType": "YulIdentifier",
                                                                                                "src": "443:3:6"
                                                                                            },
                                                                                            "nodeType": "YulFunctionCall",
                                                                                            "src": "443:11:6"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "456:1:6",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "sub",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "439:3:6"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "439:19:6"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "and",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "428:3:6"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "428:31:6"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "eq",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "418:2:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "418:42:6"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "iszero",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "411:6:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "411:50:6"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "408:70:6"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "487:15:6",
                                                        "value": {
                                                            "name": "value",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "497:5:6"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "487:6:6"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_address",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "258:9:6",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "269:7:6",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "281:6:6",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "222:286:6"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "608:92:6",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "618:26:6",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "630:9:6"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "641:2:6",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "626:3:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "626:18:6"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "618:4:6"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "660:9:6"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "name": "value0",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "685:6:6"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "iszero",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "678:6:6"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "678:14:6"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "iszero",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "671:6:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "671:22:6"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "653:6:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "653:41:6"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "653:41:6"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "577:9:6",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "588:6:6",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "599:4:6",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "513:187:6"
                                        }
                                    ]
                                },
                                "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
                                "id": 6,
                                "language": "Yul",
                                "name": "#utility.yul"
                            }
                        ],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806327cbaabe1461005c5780633855cc651461008c5780635bffec62146100bf578063ad87d2ba146100d4578063b4f3824d146100ec575b600080fd5b60015461006f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100af61009a366004610172565b60006020819052908152604090205460ff1681565b6040519015158152602001610083565b6100d26100cd366004610172565b6100ff565b005b3360009081526020819052604090205460ff166100af565b6100d26100fa366004610172565b61013a565b6001546001600160a01b0316331461011657600080fd5b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b6001546001600160a01b0316331461015157600080fd5b6001600160a01b03166000908152602081905260409020805460ff19169055565b60006020828403121561018457600080fd5b81356001600160a01b038116811461019b57600080fd5b939250505056fea2646970667358221220fe20c2cc2093ab311a64947ae138872b526bdce812fb90118d202c4c0844ef3b64736f6c634300080f0033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27CBAABE EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3855CC65 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x5BFFEC62 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xAD87D2BA EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xB4F3824D EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x6F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH2 0xD2 PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x172 JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAF JUMP JUMPDEST PUSH2 0xD2 PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x172 JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID KECCAK256 0xC2 0xCC KECCAK256 SWAP4 0xAB BALANCE BYTE PUSH5 0x947AE13887 0x2B MSTORE PUSH12 0xDCE812FB90118D202C4C0844 0xEF EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
                        "sourceMap": "116:1130:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;261:28;;;;;-1:-1:-1;;;;;261:28:0;;;;;;-1:-1:-1;;;;;178:32:6;;;160:51;;148:2;133:18;261:28:0;;;;;;;;213:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;678:14:6;;671:22;653:41;;641:2;626:18;213:41:0;513:187:6;592:157:0;;;;;;:::i;:::-;;:::i;:::-;;1134:110;1226:10;1193:4;1216:21;;;;;;;;;;;;;1134:110;;863:157;;;;;;:::i;:::-;;:::i;592:::-;446:13;;-1:-1:-1;;;;;446:13:0;432:10;:27;424:36;;;;;;-1:-1:-1;;;;;718:17:0::1;:9;:17:::0;;;::::1;::::0;;;;;;:24;;-1:-1:-1;;718:24:0::1;738:4;718:24;::::0;;592:157::o;863:::-;446:13;;-1:-1:-1;;;;;446:13:0;432:10;:27;424:36;;;;;;-1:-1:-1;;;;;996:17:0::1;:9;:17:::0;;;::::1;::::0;;;;;;989:24;;-1:-1:-1;;989:24:0::1;::::0;;863:157::o;222:286:6:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:6;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:6:o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "94400",
                            "executionCost": "infinite",
                            "totalCost": "infinite"
                        },
                        "external": {
                            "Marketors(address)": "2499",
                            "delMarketorByMarketCreator(address)": "26778",
                            "isValidMarketor()": "2419",
                            "marketCreator()": "2304",
                            "setMarketorByMarketCreator(address)": "26740"
                        }
                    },
                    "methodIdentifiers": {
                        "Marketors(address)": "3855cc65",
                        "delMarketorByMarketCreator(address)": "b4f3824d",
                        "isValidMarketor()": "ad87d2ba",
                        "marketCreator()": "27cbaabe",
                        "setMarketorByMarketCreator(address)": "5bffec62"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketCreator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Marketors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"details\":\"Explain to a developer any extra details\"},\"isValidMarketor()\":{\"details\":\"Explain to a developer any extra details\"},\"setMarketorByMarketCreator(address)\":{\"details\":\"Explain to a developer any extra details\"}},\"stateVariables\":{\"marketCreator\":{\"return\":\"The contract address\",\"returns\":{\"_0\":\"The contract address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"notice\":\"Explain to an end user what this does\"},\"isValidMarketor()\":{\"notice\":\"Explain to an end user what this does\"},\"marketCreator()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"setMarketorByMarketCreator(address)\":{\"notice\":\"Explain to an end user what this does\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Marketor.sol\":\"TTSwapV1Marketor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Marketor.sol\":{\"keccak256\":\"0x57129b68012b22ba3f1cf375ced0b8f98fbe7ebd31c8959733ca3cb750e9d361\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2aa8b27a0c3841496c7f39f744da75b0bd7e303a2d329f97b4f5a8a4a61b4fc5\",\"dweb:/ipfs/QmbvTGeDbPaYT27M399A7cADbXT5zWb2CQktVBySvG98JT\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Marketor.sol\":{\"keccak256\":\"0xcec6819c6010fada016d2adffd3ae7973365e768c6144df626506c5a00873565\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://59feb2895b8fda46ab09fd4b63605aef2bd315169102ef43898501dcdb92b3da\",\"dweb:/ipfs/QmWxs1ftk6xYceq2dRKZ3m5zwrvNYHdLt1xPo1Ntauii9g\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Events.sol\":{\"keccak256\":\"0x1019146e8e3c5f553f93a5f1f7d31c0a7227b25ce87d8d76124fbdaae200615f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://11113d24362e6a66e5e897ad597992660a06e8641cb5bdaebe74823504b0e225\",\"dweb:/ipfs/QmZY3dqUFb6DkxHUveC3BpyxsyrTHujoSg7q9mWUnwNYzc\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\":{\"keccak256\":\"0xc6fe9db9aafa196283670e6f83a876df0e6fe84074b06012865db8efd0581aa3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://be174ba35045eeee018680400cd4cc238125664b0c23bc28f68ef27b1f8f5201\",\"dweb:/ipfs/QmXGdMa25gG1A4FEctyXn7vkB7VUnJaqY5NHpTgzbHZbbi\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\":{\"keccak256\":\"0x85fe030c431f4ce0818038e673a58d35b30ac6fdb6760b24c105afbd0b94cc15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://08d50a6cd32a067e30d45964d7d018fbec1b0b34b00529548815b6a98d4e9ee5\",\"dweb:/ipfs/QmaRBpH3M7vt628KB1UqonAoUD1UcqNXSEsPdeyThZ55VC\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol\":{\"keccak256\":\"0xaad87d4ddb4502c8908f30707db6628834d3df7bef3d68d6d50179d0db672ee7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://905d7e65de99ddf8edc93aac5a9e6139e7813ac472abefa987b4ea85c73e4803\",\"dweb:/ipfs/QmNbEzweLBYEuiTbURiPuoyyqgmx59XtA5Ugo7uEvQXRCS\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 8,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Marketor.sol:TTSwapV1Marketor",
                            "label": "Marketors",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_mapping(t_address,t_bool)"
                        },
                        {
                            "astId": 10,
                            "contract": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Marketor.sol:TTSwapV1Marketor",
                            "label": "marketCreator",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_address"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_bool": {
                            "encoding": "inplace",
                            "label": "bool",
                            "numberOfBytes": "1"
                        },
                        "t_mapping(t_address,t_bool)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => bool)",
                            "numberOfBytes": "32",
                            "value": "t_bool"
                        }
                    }
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "delMarketorByMarketCreator(address)": {
                            "notice": "Explain to an end user what this does"
                        },
                        "isValidMarketor()": {
                            "notice": "Explain to an end user what this does"
                        },
                        "marketCreator()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        },
                        "setMarketorByMarketCreator(address)": {
                            "notice": "Explain to an end user what this does"
                        }
                    },
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Marketor.sol": {
            "ITTSwapV1Marketor": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "delMarketorByMarketCreator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "isValidMarketor",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "marketCreator",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "setMarketorByMarketCreator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "details": "The pool interface is broken up into many smaller pieces",
                    "kind": "dev",
                    "methods": {
                        "delMarketorByMarketCreator(address)": {
                            "details": "Explain to a developer any extra details"
                        },
                        "marketCreator()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "title": "The interface for a Uniswap V3 Pool",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "delMarketorByMarketCreator(address)": "b4f3824d",
                        "isValidMarketor()": "ad87d2ba",
                        "marketCreator()": "27cbaabe",
                        "setMarketorByMarketCreator(address)": "5bffec62"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"details\":\"Explain to a developer any extra details\"},\"marketCreator()\":{\"returns\":{\"_0\":\"The contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"notice\":\"Explain to an end user what this does\"},\"marketCreator()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Marketor.sol\":\"ITTSwapV1Marketor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Marketor.sol\":{\"keccak256\":\"0xcec6819c6010fada016d2adffd3ae7973365e768c6144df626506c5a00873565\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://59feb2895b8fda46ab09fd4b63605aef2bd315169102ef43898501dcdb92b3da\",\"dweb:/ipfs/QmWxs1ftk6xYceq2dRKZ3m5zwrvNYHdLt1xPo1Ntauii9g\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Events.sol\":{\"keccak256\":\"0x1019146e8e3c5f553f93a5f1f7d31c0a7227b25ce87d8d76124fbdaae200615f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://11113d24362e6a66e5e897ad597992660a06e8641cb5bdaebe74823504b0e225\",\"dweb:/ipfs/QmZY3dqUFb6DkxHUveC3BpyxsyrTHujoSg7q9mWUnwNYzc\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\":{\"keccak256\":\"0xc6fe9db9aafa196283670e6f83a876df0e6fe84074b06012865db8efd0581aa3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://be174ba35045eeee018680400cd4cc238125664b0c23bc28f68ef27b1f8f5201\",\"dweb:/ipfs/QmXGdMa25gG1A4FEctyXn7vkB7VUnJaqY5NHpTgzbHZbbi\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\":{\"keccak256\":\"0x85fe030c431f4ce0818038e673a58d35b30ac6fdb6760b24c105afbd0b94cc15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://08d50a6cd32a067e30d45964d7d018fbec1b0b34b00529548815b6a98d4e9ee5\",\"dweb:/ipfs/QmaRBpH3M7vt628KB1UqonAoUD1UcqNXSEsPdeyThZ55VC\"]},\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol\":{\"keccak256\":\"0xaad87d4ddb4502c8908f30707db6628834d3df7bef3d68d6d50179d0db672ee7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://905d7e65de99ddf8edc93aac5a9e6139e7813ac472abefa987b4ea85c73e4803\",\"dweb:/ipfs/QmNbEzweLBYEuiTbURiPuoyyqgmx59XtA5Ugo7uEvQXRCS\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "delMarketorByMarketCreator(address)": {
                            "notice": "Explain to an end user what this does"
                        },
                        "marketCreator()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        }
                    },
                    "notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Events.sol": {
            "IMarketorV1Events": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Events emitted by a pool",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Events.sol\":\"IMarketorV1Events\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Events.sol\":{\"keccak256\":\"0x1019146e8e3c5f553f93a5f1f7d31c0a7227b25ce87d8d76124fbdaae200615f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://11113d24362e6a66e5e897ad597992660a06e8641cb5bdaebe74823504b0e225\",\"dweb:/ipfs/QmZY3dqUFb6DkxHUveC3BpyxsyrTHujoSg7q9mWUnwNYzc\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Contains all events emitted by the pool",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Immutables.sol": {
            "IMarketorV1Immutables": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "marketCreator",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "marketCreator()": {
                            "returns": {
                                "_0": "The contract address"
                            }
                        }
                    },
                    "title": "Pool state that never changes",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "marketCreator()": "27cbaabe"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"marketCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"marketCreator()\":{\"returns\":{\"_0\":\"The contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"marketCreator()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\":\"IMarketorV1Immutables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\":{\"keccak256\":\"0xc6fe9db9aafa196283670e6f83a876df0e6fe84074b06012865db8efd0581aa3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://be174ba35045eeee018680400cd4cc238125664b0c23bc28f68ef27b1f8f5201\",\"dweb:/ipfs/QmXGdMa25gG1A4FEctyXn7vkB7VUnJaqY5NHpTgzbHZbbi\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "marketCreator()": {
                            "notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
                        }
                    },
                    "notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol": {
            "IMarketorV1MarketCreatorActions": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "delMarketorByMarketCreator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            }
                        ],
                        "name": "setMarketorByMarketCreator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {
                        "delMarketorByMarketCreator(address)": {
                            "details": "Explain to a developer any extra details"
                        }
                    },
                    "title": "Permissioned pool actions",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "delMarketorByMarketCreator(address)": "b4f3824d",
                        "setMarketorByMarketCreator(address)": "5bffec62"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"details\":\"Explain to a developer any extra details\"}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"notice\":\"Explain to an end user what this does\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\":\"IMarketorV1MarketCreatorActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\":{\"keccak256\":\"0x85fe030c431f4ce0818038e673a58d35b30ac6fdb6760b24c105afbd0b94cc15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://08d50a6cd32a067e30d45964d7d018fbec1b0b34b00529548815b6a98d4e9ee5\",\"dweb:/ipfs/QmaRBpH3M7vt628KB1UqonAoUD1UcqNXSEsPdeyThZ55VC\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "delMarketorByMarketCreator(address)": {
                            "notice": "Explain to an end user what this does"
                        }
                    },
                    "notice": "Contains pool methods that may only be called by the factory owner",
                    "version": 1
                }
            }
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol": {
            "IMarketorV1State": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "isValidMarketor",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "title": "Pool state that can change",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "isValidMarketor()": "ad87d2ba"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol\":\"IMarketorV1State\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol\":{\"keccak256\":\"0xaad87d4ddb4502c8908f30707db6628834d3df7bef3d68d6d50179d0db672ee7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://905d7e65de99ddf8edc93aac5a9e6139e7813ac472abefa987b4ea85c73e4803\",\"dweb:/ipfs/QmNbEzweLBYEuiTbURiPuoyyqgmx59XtA5Ugo7uEvQXRCS\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
                    "version": 1
                }
            }
        }
    },
    "sources": {
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Marketor.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/TTSwapV1Marketor.sol",
                "exportedSymbols": {
                    "IMarketorV1Events": [
                        96
                    ],
                    "IMarketorV1Immutables": [
                        106
                    ],
                    "IMarketorV1MarketCreatorActions": [
                        121
                    ],
                    "IMarketorV1State": [
                        130
                    ],
                    "ITTSwapV1Marketor": [
                        92
                    ],
                    "TTSwapV1Marketor": [
                        76
                    ]
                },
                "id": 77,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:0"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Marketor.sol",
                        "file": "./interfaces/ITTSwapV1Marketor.sol",
                        "id": 2,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 77,
                        "sourceUnit": 93,
                        "src": "70:44:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 3,
                                    "name": "ITTSwapV1Marketor",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 92,
                                    "src": "145:17:0"
                                },
                                "id": 4,
                                "nodeType": "InheritanceSpecifier",
                                "src": "145:17:0"
                            }
                        ],
                        "canonicalName": "TTSwapV1Marketor",
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 76,
                        "linearizedBaseContracts": [
                            76,
                            92,
                            130,
                            121,
                            106,
                            96
                        ],
                        "name": "TTSwapV1Marketor",
                        "nameLocation": "125:16:0",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "functionSelector": "3855cc65",
                                "id": 8,
                                "mutability": "mutable",
                                "name": "Marketors",
                                "nameLocation": "245:9:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 76,
                                "src": "213:41:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                },
                                "typeName": {
                                    "id": 7,
                                    "keyType": {
                                        "id": 5,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "221:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "213:24:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                    },
                                    "valueType": {
                                        "id": 6,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "232:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "baseFunctions": [
                                    105
                                ],
                                "constant": false,
                                "functionSelector": "27cbaabe",
                                "id": 10,
                                "mutability": "mutable",
                                "name": "marketCreator",
                                "nameLocation": "276:13:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 76,
                                "src": "261:28:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 9,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "261:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 19,
                                    "nodeType": "Block",
                                    "src": "332:47:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 17,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 15,
                                                    "name": "marketCreator",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 10,
                                                    "src": "342:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 16,
                                                    "name": "_marketCreator",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 12,
                                                    "src": "358:14:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "342:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 18,
                                            "nodeType": "ExpressionStatement",
                                            "src": "342:30:0"
                                        }
                                    ]
                                },
                                "id": 20,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nameLocation": "-1:-1:-1",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 13,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 12,
                                            "mutability": "mutable",
                                            "name": "_marketCreator",
                                            "nameLocation": "316:14:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 20,
                                            "src": "308:22:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 11,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "308:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "307:24:0"
                                },
                                "returnParameters": {
                                    "id": 14,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "332:0:0"
                                },
                                "scope": 76,
                                "src": "296:83:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 30,
                                    "nodeType": "Block",
                                    "src": "414:64:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 26,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 23,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "432:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 24,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "432:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "id": 25,
                                                            "name": "marketCreator",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 10,
                                                            "src": "446:13:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "432:27:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 22,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "424:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 27,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "424:36:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 28,
                                            "nodeType": "ExpressionStatement",
                                            "src": "424:36:0"
                                        },
                                        {
                                            "id": 29,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "470:1:0"
                                        }
                                    ]
                                },
                                "id": 31,
                                "name": "onlyMarketCreator",
                                "nameLocation": "394:17:0",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 21,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "411:2:0"
                                },
                                "src": "385:93:0",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "baseFunctions": [
                                    114
                                ],
                                "body": {
                                    "id": 46,
                                    "nodeType": "Block",
                                    "src": "708:41:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 44,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "baseExpression": {
                                                        "id": 40,
                                                        "name": "Marketors",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 8,
                                                        "src": "718:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 42,
                                                    "indexExpression": {
                                                        "id": 41,
                                                        "name": "_owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 34,
                                                        "src": "728:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "718:17:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 43,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "738:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "718:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 45,
                                            "nodeType": "ExpressionStatement",
                                            "src": "718:24:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 32,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "484:103:0",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "functionSelector": "5bffec62",
                                "id": 47,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 38,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 37,
                                            "name": "onlyMarketCreator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 31,
                                            "src": "686:17:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "686:17:0"
                                    }
                                ],
                                "name": "setMarketorByMarketCreator",
                                "nameLocation": "601:26:0",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 36,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "669:8:0"
                                },
                                "parameters": {
                                    "id": 35,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 34,
                                            "mutability": "mutable",
                                            "name": "_owner",
                                            "nameLocation": "636:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 47,
                                            "src": "628:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 33,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "628:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "627:16:0"
                                },
                                "returnParameters": {
                                    "id": 39,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "708:0:0"
                                },
                                "scope": 76,
                                "src": "592:157:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    120
                                ],
                                "body": {
                                    "id": 61,
                                    "nodeType": "Block",
                                    "src": "979:41:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 59,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "delete",
                                                "prefix": true,
                                                "src": "989:24:0",
                                                "subExpression": {
                                                    "baseExpression": {
                                                        "id": 56,
                                                        "name": "Marketors",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 8,
                                                        "src": "996:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 58,
                                                    "indexExpression": {
                                                        "id": 57,
                                                        "name": "_owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 50,
                                                        "src": "1006:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "996:17:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 60,
                                            "nodeType": "ExpressionStatement",
                                            "src": "989:24:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 48,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "755:103:0",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "functionSelector": "b4f3824d",
                                "id": 62,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 54,
                                        "kind": "modifierInvocation",
                                        "modifierName": {
                                            "id": 53,
                                            "name": "onlyMarketCreator",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 31,
                                            "src": "957:17:0"
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "957:17:0"
                                    }
                                ],
                                "name": "delMarketorByMarketCreator",
                                "nameLocation": "872:26:0",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 52,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "940:8:0"
                                },
                                "parameters": {
                                    "id": 51,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 50,
                                            "mutability": "mutable",
                                            "name": "_owner",
                                            "nameLocation": "907:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 62,
                                            "src": "899:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 49,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "899:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "898:16:0"
                                },
                                "returnParameters": {
                                    "id": 55,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "979:0:0"
                                },
                                "scope": 76,
                                "src": "863:157:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    129
                                ],
                                "body": {
                                    "id": 74,
                                    "nodeType": "Block",
                                    "src": "1199:45:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "baseExpression": {
                                                    "id": 69,
                                                    "name": "Marketors",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 8,
                                                    "src": "1216:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                        "typeString": "mapping(address => bool)"
                                                    }
                                                },
                                                "id": 72,
                                                "indexExpression": {
                                                    "expression": {
                                                        "id": 70,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "1226:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 71,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1226:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "1216:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 68,
                                            "id": 73,
                                            "nodeType": "Return",
                                            "src": "1209:28:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 63,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1026:103:0",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "functionSelector": "ad87d2ba",
                                "id": 75,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isValidMarketor",
                                "nameLocation": "1143:15:0",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 65,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "1175:8:0"
                                },
                                "parameters": {
                                    "id": 64,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1158:2:0"
                                },
                                "returnParameters": {
                                    "id": 68,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 67,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 75,
                                            "src": "1193:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 66,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1193:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1192:6:0"
                                },
                                "scope": 76,
                                "src": "1134:110:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 77,
                        "src": "116:1130:0",
                        "usedErrors": []
                    }
                ],
                "src": "45:1202:0"
            },
            "id": 0
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Marketor.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/ITTSwapV1Marketor.sol",
                "exportedSymbols": {
                    "IMarketorV1Events": [
                        96
                    ],
                    "IMarketorV1Immutables": [
                        106
                    ],
                    "IMarketorV1MarketCreatorActions": [
                        121
                    ],
                    "IMarketorV1State": [
                        130
                    ],
                    "ITTSwapV1Marketor": [
                        92
                    ]
                },
                "id": 93,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 78,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:1"
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Events.sol",
                        "file": "./Marketor/IMarketorV1Events.sol",
                        "id": 79,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 93,
                        "sourceUnit": 97,
                        "src": "70:42:1",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Immutables.sol",
                        "file": "./Marketor/IMarketorV1Immutables.sol",
                        "id": 80,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 93,
                        "sourceUnit": 107,
                        "src": "113:46:1",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol",
                        "file": "./Marketor/IMarketorV1MarketCreatorActions.sol",
                        "id": 81,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 93,
                        "sourceUnit": 122,
                        "src": "160:56:1",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol",
                        "file": "./Marketor/IMarketorV1State.sol",
                        "id": 82,
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "ImportDirective",
                        "scope": 93,
                        "sourceUnit": 131,
                        "src": "217:41:1",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 84,
                                    "name": "IMarketorV1Events",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 96,
                                    "src": "560:17:1"
                                },
                                "id": 85,
                                "nodeType": "InheritanceSpecifier",
                                "src": "560:17:1"
                            },
                            {
                                "baseName": {
                                    "id": 86,
                                    "name": "IMarketorV1Immutables",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 106,
                                    "src": "583:21:1"
                                },
                                "id": 87,
                                "nodeType": "InheritanceSpecifier",
                                "src": "583:21:1"
                            },
                            {
                                "baseName": {
                                    "id": 88,
                                    "name": "IMarketorV1MarketCreatorActions",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 121,
                                    "src": "610:31:1"
                                },
                                "id": 89,
                                "nodeType": "InheritanceSpecifier",
                                "src": "610:31:1"
                            },
                            {
                                "baseName": {
                                    "id": 90,
                                    "name": "IMarketorV1State",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 130,
                                    "src": "647:16:1"
                                },
                                "id": 91,
                                "nodeType": "InheritanceSpecifier",
                                "src": "647:16:1"
                            }
                        ],
                        "canonicalName": "ITTSwapV1Marketor",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 83,
                            "nodeType": "StructuredDocumentation",
                            "src": "260:265:1",
                            "text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
                        },
                        "fullyImplemented": false,
                        "id": 92,
                        "linearizedBaseContracts": [
                            92,
                            130,
                            121,
                            106,
                            96
                        ],
                        "name": "ITTSwapV1Marketor",
                        "nameLocation": "535:17:1",
                        "nodeType": "ContractDefinition",
                        "nodes": [],
                        "scope": 93,
                        "src": "525:143:1",
                        "usedErrors": []
                    }
                ],
                "src": "45:624:1"
            },
            "id": 1
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Events.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Events.sol",
                "exportedSymbols": {
                    "IMarketorV1Events": [
                        96
                    ]
                },
                "id": 97,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 94,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:2"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IMarketorV1Events",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 95,
                            "nodeType": "StructuredDocumentation",
                            "src": "70:88:2",
                            "text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
                        },
                        "fullyImplemented": true,
                        "id": 96,
                        "linearizedBaseContracts": [
                            96
                        ],
                        "name": "IMarketorV1Events",
                        "nameLocation": "168:17:2",
                        "nodeType": "ContractDefinition",
                        "nodes": [],
                        "scope": 97,
                        "src": "158:32:2",
                        "usedErrors": []
                    }
                ],
                "src": "45:146:2"
            },
            "id": 2
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Immutables.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1Immutables.sol",
                "exportedSymbols": {
                    "IMarketorV1Immutables": [
                        106
                    ]
                },
                "id": 107,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 98,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:3"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IMarketorV1Immutables",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 99,
                            "nodeType": "StructuredDocumentation",
                            "src": "70:153:3",
                            "text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
                        },
                        "fullyImplemented": false,
                        "id": 106,
                        "linearizedBaseContracts": [
                            106
                        ],
                        "name": "IMarketorV1Immutables",
                        "nameLocation": "233:21:3",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "documentation": {
                                    "id": 100,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "261:138:3",
                                    "text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
                                },
                                "functionSelector": "27cbaabe",
                                "id": 105,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "marketCreator",
                                "nameLocation": "413:13:3",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 101,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "426:2:3"
                                },
                                "returnParameters": {
                                    "id": 104,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 103,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 105,
                                            "src": "452:7:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 102,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "452:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "451:9:3"
                                },
                                "scope": 106,
                                "src": "404:57:3",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 107,
                        "src": "223:240:3",
                        "usedErrors": []
                    }
                ],
                "src": "45:419:3"
            },
            "id": 3
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol",
                "exportedSymbols": {
                    "IMarketorV1MarketCreatorActions": [
                        121
                    ]
                },
                "id": 122,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 108,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:4"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IMarketorV1MarketCreatorActions",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 109,
                            "nodeType": "StructuredDocumentation",
                            "src": "70:116:4",
                            "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
                        },
                        "fullyImplemented": false,
                        "id": 121,
                        "linearizedBaseContracts": [
                            121
                        ],
                        "name": "IMarketorV1MarketCreatorActions",
                        "nameLocation": "196:31:4",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "5bffec62",
                                "id": 114,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "setMarketorByMarketCreator",
                                "nameLocation": "243:26:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 112,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 111,
                                            "mutability": "mutable",
                                            "name": "_owner",
                                            "nameLocation": "278:6:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 114,
                                            "src": "270:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 110,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "270:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "269:16:4"
                                },
                                "returnParameters": {
                                    "id": 113,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "294:0:4"
                                },
                                "scope": 121,
                                "src": "234:61:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 115,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "301:103:4",
                                    "text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
                                },
                                "functionSelector": "b4f3824d",
                                "id": 120,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "delMarketorByMarketCreator",
                                "nameLocation": "418:26:4",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 118,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 117,
                                            "mutability": "mutable",
                                            "name": "_owner",
                                            "nameLocation": "453:6:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 120,
                                            "src": "445:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 116,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "445:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "444:16:4"
                                },
                                "returnParameters": {
                                    "id": 119,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "469:0:4"
                                },
                                "scope": 121,
                                "src": "409:61:4",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 122,
                        "src": "186:286:4",
                        "usedErrors": []
                    }
                ],
                "src": "45:428:4"
            },
            "id": 4
        },
        "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol": {
            "ast": {
                "absolutePath": "/Users/admin/Documents/gitworkplace/ttswap_core/ttswap_core/Contracts/interfaces/Marketor/IMarketorV1State.sol",
                "exportedSymbols": {
                    "IMarketorV1State": [
                        130
                    ]
                },
                "id": 131,
                "license": "GPL-2.0-or-later",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 123,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "45:23:5"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "IMarketorV1State",
                        "contractDependencies": [],
                        "contractKind": "interface",
                        "documentation": {
                            "id": 124,
                            "nodeType": "StructuredDocumentation",
                            "src": "70:169:5",
                            "text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
                        },
                        "fullyImplemented": false,
                        "id": 130,
                        "linearizedBaseContracts": [
                            130
                        ],
                        "name": "IMarketorV1State",
                        "nameLocation": "249:16:5",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "functionSelector": "ad87d2ba",
                                "id": 129,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isValidMarketor",
                                "nameLocation": "281:15:5",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 125,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "296:2:5"
                                },
                                "returnParameters": {
                                    "id": 128,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 127,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nameLocation": "-1:-1:-1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 129,
                                            "src": "322:4:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 126,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "322:4:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "321:6:5"
                                },
                                "scope": 130,
                                "src": "272:56:5",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 131,
                        "src": "239:91:5",
                        "usedErrors": []
                    }
                ],
                "src": "45:286:5"
            },
            "id": 5
        }
    }
}