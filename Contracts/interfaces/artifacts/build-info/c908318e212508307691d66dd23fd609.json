{
	"id": "c908318e212508307691d66dd23fd609",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/interfaces/ITTSwapV1Coin.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\nimport \"./Coin/ICoinV1Events.sol\";\nimport \"./Coin/ICoinV1GatorActions.sol\";\nimport \"./Coin/ICoinV1Immutables.sol\";\nimport \"./Coin/ICoinV1MarketorActions.sol\";\nimport \"./Coin/ICoinV1State.sol\";\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface ITTSwapV1Coin is\n    ICoinV1Events,\n    ICoinV1GatorActions,\n    ICoinV1Immutables,\n    ICoinV1MarketorActions,\n    ICoinV1State\n{\n\n}\n"
			},
			"Contracts/interfaces/Coin/ICoinV1State.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\nimport \"../../libraries/base/LCoin.sol\";\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface ICoinV1State {\n    function getCoinInfo(address _contractaddress)\n        external\n        view\n        returns (LCoin.Info memory);\n}\n"
			},
			"Contracts/interfaces/Coin/ICoinV1MarketorActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\nimport \"../../libraries/base/LCoin.sol\";\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface ICoinV1MarketorActions {\n    /*\n        门户管理币\n    */\n    function addCoinbyMarketor(LCoin.Info memory _coinInfo) external;\n\n    function lockCoinbyMarketor(address _internalCoinAddress) external;\n\n    function unlockCoinbyMarketor(address _internalCoinAddress) external;\n\n    function updateCoinbyMarketor(LCoin.Info memory _coinInfo) external;\n\n    function impoveGateCoinbyMarketor(\n        address _contractaddress,\n        address _gateaddress\n    ) external;\n\n    function delCoinbyMarketor(address _contractaddress) external;\n\n    function delGateCoinbyMarketor(\n        address _contractaddress,\n        address _gateaddress\n    ) external;\n}\n"
			},
			"Contracts/interfaces/Coin/ICoinV1Immutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface ICoinV1Immutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function gatorContractAddress() external view returns (address);\n\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function marketorContractAddress() external view returns (address);\n}\n"
			},
			"Contracts/interfaces/Coin/ICoinV1GatorActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\nimport \"../../libraries/base/LCoin.sol\";\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface ICoinV1GatorActions {\n    /*\n        门户管理币\n    */\n    function addCoinbyGator(LCoin.Info memory _coinInfo) external;\n\n    function unlockCoinbyGator(address _internalCoinAddress) external;\n\n    function lockCoinbyGator(address _internalCoinAddress) external;\n\n    function updateCoinbyGator(LCoin.Info memory _coinInfo) external;\n}\n"
			},
			"Contracts/interfaces/Coin/ICoinV1Events.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface ICoinV1Events {\n\n}\n"
			},
			"Contracts/libraries/base/LCoin.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\nlibrary LCoin {\n    struct Info {\n        string coinFullName; //币种全称\n        string symbol; //币种简称\n        string typecode; //币种类型代码\n        uint8 decimals; //精度\n        uint256 maxSupply; //流通量\n        uint256 totalSupply; //发行量\n        address contractAddress; //合约地址\n        bool marketunlock; //市场锁\n        bool gateunlock; //门户锁\n        bool isUsed;\n        address creator; //添加人\n    }\n    struct DetailInfo {\n        address contractAddress; //合约地址\n        bytes32 WhitePaperUrl; //白皮书地址\n        bytes32 OfficalWebsite; //官网\n        bytes32 blockExplorerUrl; //区块查询\n        bytes32 twriterUrl; //区块查询\n        bytes32 bbsUrl; //bbs论坛地址\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Contracts/interfaces/Coin/ICoinV1Events.sol": {
				"ICoinV1Events": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/Coin/ICoinV1Events.sol\":\"ICoinV1Events\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Coin/ICoinV1Events.sol\":{\"keccak256\":\"0x1c2a7d25c4df3bd615df013c217ed7a3dab1a1d78bb8f1390dfc88b277fefa57\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ce74856dbf250051fba0f7cf56e6e58102fce98333c2f639c7a1199202eaf9a6\",\"dweb:/ipfs/QmYEhmrsfzyUizcUATMUt2uU7HpqBgVksjf8ToDb559vbh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/Coin/ICoinV1GatorActions.sol": {
				"ICoinV1GatorActions": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "coinFullName",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "typecode",
											"type": "string"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "maxSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalSupply",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "marketunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "gateunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isUsed",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										}
									],
									"internalType": "struct LCoin.Info",
									"name": "_coinInfo",
									"type": "tuple"
								}
							],
							"name": "addCoinbyGator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_internalCoinAddress",
									"type": "address"
								}
							],
							"name": "lockCoinbyGator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_internalCoinAddress",
									"type": "address"
								}
							],
							"name": "unlockCoinbyGator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "coinFullName",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "typecode",
											"type": "string"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "maxSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalSupply",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "marketunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "gateunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isUsed",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										}
									],
									"internalType": "struct LCoin.Info",
									"name": "_coinInfo",
									"type": "tuple"
								}
							],
							"name": "updateCoinbyGator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addCoinbyGator((string,string,string,uint8,uint256,uint256,address,bool,bool,bool,address))": "a3967d0d",
							"lockCoinbyGator(address)": "441eb548",
							"unlockCoinbyGator(address)": "385e4b7a",
							"updateCoinbyGator((string,string,string,uint8,uint256,uint256,address,bool,bool,bool,address))": "2a9f659c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"coinFullName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typecode\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"coinFullName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typecode\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/Coin/ICoinV1GatorActions.sol\":\"ICoinV1GatorActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Coin/ICoinV1GatorActions.sol\":{\"keccak256\":\"0x8c16f579285d606e862ce180ca24d79ca086fb01b9268af1c39b4c8fbf2d96a1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7c064bf49ffeee517f08ef4e94d53f18894c2355a8f42962e30a050662b55c6a\",\"dweb:/ipfs/Qma8rG2d4z7LrJEGVhwgEqvUs3bmVxq1CAphBjAe34wBhp\"]},\"Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe98f1efb1de1113551e5761abccfc60631ae962a9534ac29dbb8a38017aeb8b6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1f2cdbfd3ee779823b4bcf2aed61600a99c675a9bb074644ad7a821c9487ecf\",\"dweb:/ipfs/Qman1woGsvdr355MCGkUrCkAiiiat1cHT7t8JyLoEDBX52\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/Coin/ICoinV1Immutables.sol": {
				"ICoinV1Immutables": {
					"abi": [
						{
							"inputs": [],
							"name": "gatorContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketorContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"gatorContractAddress()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"marketorContractAddress()": {
								"returns": {
									"_0": "The contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"gatorContractAddress()": "47d0a634",
							"marketorContractAddress()": "492b7107"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"gatorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"gatorContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}},\"marketorContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"gatorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"marketorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/Coin/ICoinV1Immutables.sol\":\"ICoinV1Immutables\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Coin/ICoinV1Immutables.sol\":{\"keccak256\":\"0x7ccf6639d1c5082ef3a932bc7c45b99ee88a63ad233d997942a19333d1c06d8b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e1a449d8f0a94697115b7457cadc9f7dcf23ca8a114b35e266a9ef9833c073c2\",\"dweb:/ipfs/QmeFnQhJkHhBDdskEEhYUMA2pL7RcYSKTiWc3nHwjeQkeb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"gatorContractAddress()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"marketorContractAddress()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/Coin/ICoinV1MarketorActions.sol": {
				"ICoinV1MarketorActions": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "coinFullName",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "typecode",
											"type": "string"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "maxSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalSupply",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "marketunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "gateunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isUsed",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										}
									],
									"internalType": "struct LCoin.Info",
									"name": "_coinInfo",
									"type": "tuple"
								}
							],
							"name": "addCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractaddress",
									"type": "address"
								}
							],
							"name": "delCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractaddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_gateaddress",
									"type": "address"
								}
							],
							"name": "delGateCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractaddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_gateaddress",
									"type": "address"
								}
							],
							"name": "impoveGateCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_internalCoinAddress",
									"type": "address"
								}
							],
							"name": "lockCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_internalCoinAddress",
									"type": "address"
								}
							],
							"name": "unlockCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "coinFullName",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "typecode",
											"type": "string"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "maxSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalSupply",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "marketunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "gateunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isUsed",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										}
									],
									"internalType": "struct LCoin.Info",
									"name": "_coinInfo",
									"type": "tuple"
								}
							],
							"name": "updateCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addCoinbyMarketor((string,string,string,uint8,uint256,uint256,address,bool,bool,bool,address))": "b73436fd",
							"delCoinbyMarketor(address)": "7c3e2f02",
							"delGateCoinbyMarketor(address,address)": "eaec0112",
							"impoveGateCoinbyMarketor(address,address)": "cfcdca52",
							"lockCoinbyMarketor(address)": "b20be2b4",
							"unlockCoinbyMarketor(address)": "1d3b8f67",
							"updateCoinbyMarketor((string,string,string,uint8,uint256,uint256,address,bool,bool,bool,address))": "550fb4ba"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"coinFullName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typecode\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"delCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"delGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"impoveGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"coinFullName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typecode\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/Coin/ICoinV1MarketorActions.sol\":\"ICoinV1MarketorActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Coin/ICoinV1MarketorActions.sol\":{\"keccak256\":\"0xfbf89b1fa5dfebb2957f21ca1b27fede09423383340c0b3e1ad580f31d3c53ac\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a7fe4979395b97cfc337f7658189d35dcd22ebb50d6c4b487cb9f419737e85b1\",\"dweb:/ipfs/QmXuF9MnA8ycQr8YeRcNZCjGHwv8Se24WchDsduzxab3HL\"]},\"Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe98f1efb1de1113551e5761abccfc60631ae962a9534ac29dbb8a38017aeb8b6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1f2cdbfd3ee779823b4bcf2aed61600a99c675a9bb074644ad7a821c9487ecf\",\"dweb:/ipfs/Qman1woGsvdr355MCGkUrCkAiiiat1cHT7t8JyLoEDBX52\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/Coin/ICoinV1State.sol": {
				"ICoinV1State": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractaddress",
									"type": "address"
								}
							],
							"name": "getCoinInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "coinFullName",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "typecode",
											"type": "string"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "maxSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalSupply",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "marketunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "gateunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isUsed",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										}
									],
									"internalType": "struct LCoin.Info",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getCoinInfo(address)": "e8dd4655"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"getCoinInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"coinFullName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typecode\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/Coin/ICoinV1State.sol\":\"ICoinV1State\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Coin/ICoinV1State.sol\":{\"keccak256\":\"0xd03715fc3391f5aeb00ca1620a86cd85efc9b3a99a9c283e182f739e427f95b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3b2e2174ee6495d8a354c8825b33f25bd514becf93aca020162d80a256e7291c\",\"dweb:/ipfs/QmaqFMfBz5dELTaFLazLgjXUsJWT6hVga2s3xdYc2hAjF1\"]},\"Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe98f1efb1de1113551e5761abccfc60631ae962a9534ac29dbb8a38017aeb8b6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1f2cdbfd3ee779823b4bcf2aed61600a99c675a9bb074644ad7a821c9487ecf\",\"dweb:/ipfs/Qman1woGsvdr355MCGkUrCkAiiiat1cHT7t8JyLoEDBX52\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/ITTSwapV1Coin.sol": {
				"ITTSwapV1Coin": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "coinFullName",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "typecode",
											"type": "string"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "maxSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalSupply",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "marketunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "gateunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isUsed",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										}
									],
									"internalType": "struct LCoin.Info",
									"name": "_coinInfo",
									"type": "tuple"
								}
							],
							"name": "addCoinbyGator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "coinFullName",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "typecode",
											"type": "string"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "maxSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalSupply",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "marketunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "gateunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isUsed",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										}
									],
									"internalType": "struct LCoin.Info",
									"name": "_coinInfo",
									"type": "tuple"
								}
							],
							"name": "addCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractaddress",
									"type": "address"
								}
							],
							"name": "delCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractaddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_gateaddress",
									"type": "address"
								}
							],
							"name": "delGateCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gatorContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractaddress",
									"type": "address"
								}
							],
							"name": "getCoinInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "coinFullName",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "typecode",
											"type": "string"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "maxSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalSupply",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "marketunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "gateunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isUsed",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										}
									],
									"internalType": "struct LCoin.Info",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractaddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_gateaddress",
									"type": "address"
								}
							],
							"name": "impoveGateCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_internalCoinAddress",
									"type": "address"
								}
							],
							"name": "lockCoinbyGator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_internalCoinAddress",
									"type": "address"
								}
							],
							"name": "lockCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketorContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_internalCoinAddress",
									"type": "address"
								}
							],
							"name": "unlockCoinbyGator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_internalCoinAddress",
									"type": "address"
								}
							],
							"name": "unlockCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "coinFullName",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "typecode",
											"type": "string"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "maxSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalSupply",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "marketunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "gateunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isUsed",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										}
									],
									"internalType": "struct LCoin.Info",
									"name": "_coinInfo",
									"type": "tuple"
								}
							],
							"name": "updateCoinbyGator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "coinFullName",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "typecode",
											"type": "string"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "maxSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalSupply",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "marketunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "gateunlock",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isUsed",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										}
									],
									"internalType": "struct LCoin.Info",
									"name": "_coinInfo",
									"type": "tuple"
								}
							],
							"name": "updateCoinbyMarketor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"gatorContractAddress()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"marketorContractAddress()": {
								"returns": {
									"_0": "The contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addCoinbyGator((string,string,string,uint8,uint256,uint256,address,bool,bool,bool,address))": "a3967d0d",
							"addCoinbyMarketor((string,string,string,uint8,uint256,uint256,address,bool,bool,bool,address))": "b73436fd",
							"delCoinbyMarketor(address)": "7c3e2f02",
							"delGateCoinbyMarketor(address,address)": "eaec0112",
							"gatorContractAddress()": "47d0a634",
							"getCoinInfo(address)": "e8dd4655",
							"impoveGateCoinbyMarketor(address,address)": "cfcdca52",
							"lockCoinbyGator(address)": "441eb548",
							"lockCoinbyMarketor(address)": "b20be2b4",
							"marketorContractAddress()": "492b7107",
							"unlockCoinbyGator(address)": "385e4b7a",
							"unlockCoinbyMarketor(address)": "1d3b8f67",
							"updateCoinbyGator((string,string,string,uint8,uint256,uint256,address,bool,bool,bool,address))": "2a9f659c",
							"updateCoinbyMarketor((string,string,string,uint8,uint256,uint256,address,bool,bool,bool,address))": "550fb4ba"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"coinFullName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typecode\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"coinFullName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typecode\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"addCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"delCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"delGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gatorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"}],\"name\":\"getCoinInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"coinFullName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typecode\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"impoveGateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"lockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalCoinAddress\",\"type\":\"address\"}],\"name\":\"unlockCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"coinFullName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typecode\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"coinFullName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typecode\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"internalType\":\"struct LCoin.Info\",\"name\":\"_coinInfo\",\"type\":\"tuple\"}],\"name\":\"updateCoinbyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"gatorContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}},\"marketorContractAddress()\":{\"returns\":{\"_0\":\"The contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"gatorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"marketorContractAddress()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/ITTSwapV1Coin.sol\":\"ITTSwapV1Coin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Coin/ICoinV1Events.sol\":{\"keccak256\":\"0x1c2a7d25c4df3bd615df013c217ed7a3dab1a1d78bb8f1390dfc88b277fefa57\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ce74856dbf250051fba0f7cf56e6e58102fce98333c2f639c7a1199202eaf9a6\",\"dweb:/ipfs/QmYEhmrsfzyUizcUATMUt2uU7HpqBgVksjf8ToDb559vbh\"]},\"Contracts/interfaces/Coin/ICoinV1GatorActions.sol\":{\"keccak256\":\"0x8c16f579285d606e862ce180ca24d79ca086fb01b9268af1c39b4c8fbf2d96a1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7c064bf49ffeee517f08ef4e94d53f18894c2355a8f42962e30a050662b55c6a\",\"dweb:/ipfs/Qma8rG2d4z7LrJEGVhwgEqvUs3bmVxq1CAphBjAe34wBhp\"]},\"Contracts/interfaces/Coin/ICoinV1Immutables.sol\":{\"keccak256\":\"0x7ccf6639d1c5082ef3a932bc7c45b99ee88a63ad233d997942a19333d1c06d8b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e1a449d8f0a94697115b7457cadc9f7dcf23ca8a114b35e266a9ef9833c073c2\",\"dweb:/ipfs/QmeFnQhJkHhBDdskEEhYUMA2pL7RcYSKTiWc3nHwjeQkeb\"]},\"Contracts/interfaces/Coin/ICoinV1MarketorActions.sol\":{\"keccak256\":\"0xfbf89b1fa5dfebb2957f21ca1b27fede09423383340c0b3e1ad580f31d3c53ac\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a7fe4979395b97cfc337f7658189d35dcd22ebb50d6c4b487cb9f419737e85b1\",\"dweb:/ipfs/QmXuF9MnA8ycQr8YeRcNZCjGHwv8Se24WchDsduzxab3HL\"]},\"Contracts/interfaces/Coin/ICoinV1State.sol\":{\"keccak256\":\"0xd03715fc3391f5aeb00ca1620a86cd85efc9b3a99a9c283e182f739e427f95b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3b2e2174ee6495d8a354c8825b33f25bd514becf93aca020162d80a256e7291c\",\"dweb:/ipfs/QmaqFMfBz5dELTaFLazLgjXUsJWT6hVga2s3xdYc2hAjF1\"]},\"Contracts/interfaces/ITTSwapV1Coin.sol\":{\"keccak256\":\"0x2b7565414d045d12859626e9027d9e69508edca12ea84104065b653aef808807\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4a0b4105fa3a11aac2ee96e04561e4dce084a7e9a0869fbb3c183d37273a15a5\",\"dweb:/ipfs/QmTC3ByoPkYyRLZ5hnec2hA4VA2CWnxXWCNQrky7iKoJpJ\"]},\"Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe98f1efb1de1113551e5761abccfc60631ae962a9534ac29dbb8a38017aeb8b6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1f2cdbfd3ee779823b4bcf2aed61600a99c675a9bb074644ad7a821c9487ecf\",\"dweb:/ipfs/Qman1woGsvdr355MCGkUrCkAiiiat1cHT7t8JyLoEDBX52\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"gatorContractAddress()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"marketorContractAddress()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"Contracts/libraries/base/LCoin.sol": {
				"LCoin": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/libraries/base/LCoin.sol\":70:836  library LCoin {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/libraries/base/LCoin.sol\":70:836  library LCoin {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207ebd3bc7eb40cfb7639a4728d0c2d1a6347f235dfc8476b995cdfd5466e59a3664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ebd3bc7eb40cfb7639a4728d0c2d1a6347f235dfc8476b995cdfd5466e59a3664736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xBD3BC7EB40CFB7639A4728D0C2D1A6347F235DFC8476B995CDFD5466E59A36 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "70:766:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ebd3bc7eb40cfb7639a4728d0c2d1a6347f235dfc8476b995cdfd5466e59a3664736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xBD3BC7EB40CFB7639A4728D0C2D1A6347F235DFC8476B995CDFD5466E59A36 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "70:766:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 70,
									"end": 836,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 70,
									"end": 836,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207ebd3bc7eb40cfb7639a4728d0c2d1a6347f235dfc8476b995cdfd5466e59a3664736f6c63430008120033",
									".code": [
										{
											"begin": 70,
											"end": 836,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 70,
											"end": 836,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 70,
											"end": 836,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 70,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 70,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 70,
											"end": 836,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 70,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 836,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 70,
											"end": 836,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"Contracts/interfaces/Coin/ICoinV1Events.sol",
								"Contracts/interfaces/Coin/ICoinV1GatorActions.sol",
								"Contracts/interfaces/Coin/ICoinV1Immutables.sol",
								"Contracts/interfaces/Coin/ICoinV1MarketorActions.sol",
								"Contracts/interfaces/Coin/ICoinV1State.sol",
								"Contracts/interfaces/ITTSwapV1Coin.sol",
								"Contracts/libraries/base/LCoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/libraries/base/LCoin.sol\":\"LCoin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/libraries/base/LCoin.sol\":{\"keccak256\":\"0xe98f1efb1de1113551e5761abccfc60631ae962a9534ac29dbb8a38017aeb8b6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1f2cdbfd3ee779823b4bcf2aed61600a99c675a9bb074644ad7a821c9487ecf\",\"dweb:/ipfs/Qman1woGsvdr355MCGkUrCkAiiiat1cHT7t8JyLoEDBX52\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Contracts/interfaces/Coin/ICoinV1Events.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/Coin/ICoinV1Events.sol",
					"exportedSymbols": {
						"ICoinV1Events": [
							3
						]
					},
					"id": 4,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICoinV1Events",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "70:88:0",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 3,
							"linearizedBaseContracts": [
								3
							],
							"name": "ICoinV1Events",
							"nameLocation": "168:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 4,
							"src": "158:28:0",
							"usedErrors": []
						}
					],
					"src": "45:142:0"
				},
				"id": 0
			},
			"Contracts/interfaces/Coin/ICoinV1GatorActions.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/Coin/ICoinV1GatorActions.sol",
					"exportedSymbols": {
						"ICoinV1GatorActions": [
							30
						],
						"LCoin": [
							163
						]
					},
					"id": 31,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:1"
						},
						{
							"absolutePath": "Contracts/libraries/base/LCoin.sol",
							"file": "../../libraries/base/LCoin.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 31,
							"sourceUnit": 164,
							"src": "70:40:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICoinV1GatorActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 7,
								"nodeType": "StructuredDocumentation",
								"src": "112:116:1",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "ICoinV1GatorActions",
							"nameLocation": "238:19:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a3967d0d",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addCoinbyGator",
									"nameLocation": "311:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "_coinInfo",
												"nameLocation": "344:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "326:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$149_memory_ptr",
													"typeString": "struct LCoin.Info"
												},
												"typeName": {
													"id": 9,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 8,
														"name": "LCoin.Info",
														"nameLocations": [
															"326:5:1",
															"332:4:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 149,
														"src": "326:10:1"
													},
													"referencedDeclaration": 149,
													"src": "326:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$149_storage_ptr",
														"typeString": "struct LCoin.Info"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "325:29:1"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:0:1"
									},
									"scope": 30,
									"src": "302:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "385e4b7a",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unlockCoinbyGator",
									"nameLocation": "379:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "_internalCoinAddress",
												"nameLocation": "405:20:1",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "397:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:30:1"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:0:1"
									},
									"scope": 30,
									"src": "370:66:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "441eb548",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockCoinbyGator",
									"nameLocation": "451:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "_internalCoinAddress",
												"nameLocation": "475:20:1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "467:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:30:1"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "505:0:1"
									},
									"scope": 30,
									"src": "442:64:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2a9f659c",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateCoinbyGator",
									"nameLocation": "521:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_coinInfo",
												"nameLocation": "557:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "539:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$149_memory_ptr",
													"typeString": "struct LCoin.Info"
												},
												"typeName": {
													"id": 25,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 24,
														"name": "LCoin.Info",
														"nameLocations": [
															"539:5:1",
															"545:4:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 149,
														"src": "539:10:1"
													},
													"referencedDeclaration": 149,
													"src": "539:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$149_storage_ptr",
														"typeString": "struct LCoin.Info"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:29:1"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "576:0:1"
									},
									"scope": 30,
									"src": "512:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 31,
							"src": "228:351:1",
							"usedErrors": []
						}
					],
					"src": "45:535:1"
				},
				"id": 1
			},
			"Contracts/interfaces/Coin/ICoinV1Immutables.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/Coin/ICoinV1Immutables.sol",
					"exportedSymbols": {
						"ICoinV1Immutables": [
							46
						]
					},
					"id": 47,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 32,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICoinV1Immutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 33,
								"nodeType": "StructuredDocumentation",
								"src": "70:153:2",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 46,
							"linearizedBaseContracts": [
								46
							],
							"name": "ICoinV1Immutables",
							"nameLocation": "233:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "257:138:2",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "47d0a634",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gatorContractAddress",
									"nameLocation": "409:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:2:2"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "455:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:9:2"
									},
									"scope": 46,
									"src": "400:64:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "470:138:2",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "492b7107",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "marketorContractAddress",
									"nameLocation": "622:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:2:2"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "671:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:9:2"
									},
									"scope": 46,
									"src": "613:67:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 47,
							"src": "223:459:2",
							"usedErrors": []
						}
					],
					"src": "45:638:2"
				},
				"id": 2
			},
			"Contracts/interfaces/Coin/ICoinV1MarketorActions.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/Coin/ICoinV1MarketorActions.sol",
					"exportedSymbols": {
						"ICoinV1MarketorActions": [
							92
						],
						"LCoin": [
							163
						]
					},
					"id": 93,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 48,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:3"
						},
						{
							"absolutePath": "Contracts/libraries/base/LCoin.sol",
							"file": "../../libraries/base/LCoin.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 93,
							"sourceUnit": 164,
							"src": "70:40:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICoinV1MarketorActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "112:116:3",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 92,
							"linearizedBaseContracts": [
								92
							],
							"name": "ICoinV1MarketorActions",
							"nameLocation": "238:22:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b73436fd",
									"id": 56,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addCoinbyMarketor",
									"nameLocation": "314:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "_coinInfo",
												"nameLocation": "350:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "332:27:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$149_memory_ptr",
													"typeString": "struct LCoin.Info"
												},
												"typeName": {
													"id": 52,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 51,
														"name": "LCoin.Info",
														"nameLocations": [
															"332:5:3",
															"338:4:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 149,
														"src": "332:10:3"
													},
													"referencedDeclaration": 149,
													"src": "332:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$149_storage_ptr",
														"typeString": "struct LCoin.Info"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:29:3"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "369:0:3"
									},
									"scope": 92,
									"src": "305:65:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b20be2b4",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockCoinbyMarketor",
									"nameLocation": "385:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "_internalCoinAddress",
												"nameLocation": "412:20:3",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "404:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:30:3"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:0:3"
									},
									"scope": 92,
									"src": "376:67:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d3b8f67",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unlockCoinbyMarketor",
									"nameLocation": "458:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_internalCoinAddress",
												"nameLocation": "487:20:3",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "479:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:30:3"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:0:3"
									},
									"scope": 92,
									"src": "449:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "550fb4ba",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateCoinbyMarketor",
									"nameLocation": "533:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "_coinInfo",
												"nameLocation": "572:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "554:27:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$149_memory_ptr",
													"typeString": "struct LCoin.Info"
												},
												"typeName": {
													"id": 68,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 67,
														"name": "LCoin.Info",
														"nameLocations": [
															"554:5:3",
															"560:4:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 149,
														"src": "554:10:3"
													},
													"referencedDeclaration": 149,
													"src": "554:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$149_storage_ptr",
														"typeString": "struct LCoin.Info"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:29:3"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:0:3"
									},
									"scope": 92,
									"src": "524:68:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cfcdca52",
									"id": 79,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "impoveGateCoinbyMarketor",
									"nameLocation": "607:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_contractaddress",
												"nameLocation": "649:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "641:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "_gateaddress",
												"nameLocation": "683:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "675:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:70:3"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:0:3"
									},
									"scope": 92,
									"src": "598:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7c3e2f02",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delCoinbyMarketor",
									"nameLocation": "726:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "_contractaddress",
												"nameLocation": "752:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "744:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:26:3"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "778:0:3"
									},
									"scope": 92,
									"src": "717:62:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "eaec0112",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delGateCoinbyMarketor",
									"nameLocation": "794:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "_contractaddress",
												"nameLocation": "833:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "825:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "_gateaddress",
												"nameLocation": "867:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "859:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:70:3"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "894:0:3"
									},
									"scope": 92,
									"src": "785:110:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 93,
							"src": "228:669:3",
							"usedErrors": []
						}
					],
					"src": "45:853:3"
				},
				"id": 3
			},
			"Contracts/interfaces/Coin/ICoinV1State.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/Coin/ICoinV1State.sol",
					"exportedSymbols": {
						"ICoinV1State": [
							105
						],
						"LCoin": [
							163
						]
					},
					"id": 106,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 94,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:4"
						},
						{
							"absolutePath": "Contracts/libraries/base/LCoin.sol",
							"file": "../../libraries/base/LCoin.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 106,
							"sourceUnit": 164,
							"src": "70:40:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICoinV1State",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "112:169:4",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 105,
							"linearizedBaseContracts": [
								105
							],
							"name": "ICoinV1State",
							"nameLocation": "291:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e8dd4655",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCoinInfo",
									"nameLocation": "319:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "_contractaddress",
												"nameLocation": "339:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "331:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:26:4"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "404:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$149_memory_ptr",
													"typeString": "struct LCoin.Info"
												},
												"typeName": {
													"id": 101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 100,
														"name": "LCoin.Info",
														"nameLocations": [
															"404:5:4",
															"410:4:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 149,
														"src": "404:10:4"
													},
													"referencedDeclaration": 149,
													"src": "404:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$149_storage_ptr",
														"typeString": "struct LCoin.Info"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:19:4"
									},
									"scope": 105,
									"src": "310:113:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 106,
							"src": "281:144:4",
							"usedErrors": []
						}
					],
					"src": "45:381:4"
				},
				"id": 4
			},
			"Contracts/interfaces/ITTSwapV1Coin.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/ITTSwapV1Coin.sol",
					"exportedSymbols": {
						"ICoinV1Events": [
							3
						],
						"ICoinV1GatorActions": [
							30
						],
						"ICoinV1Immutables": [
							46
						],
						"ICoinV1MarketorActions": [
							92
						],
						"ICoinV1State": [
							105
						],
						"ITTSwapV1Coin": [
							124
						],
						"LCoin": [
							163
						]
					},
					"id": 125,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 107,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:5"
						},
						{
							"absolutePath": "Contracts/interfaces/Coin/ICoinV1Events.sol",
							"file": "./Coin/ICoinV1Events.sol",
							"id": 108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 125,
							"sourceUnit": 4,
							"src": "70:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/interfaces/Coin/ICoinV1GatorActions.sol",
							"file": "./Coin/ICoinV1GatorActions.sol",
							"id": 109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 125,
							"sourceUnit": 31,
							"src": "105:40:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/interfaces/Coin/ICoinV1Immutables.sol",
							"file": "./Coin/ICoinV1Immutables.sol",
							"id": 110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 125,
							"sourceUnit": 47,
							"src": "146:38:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/interfaces/Coin/ICoinV1MarketorActions.sol",
							"file": "./Coin/ICoinV1MarketorActions.sol",
							"id": 111,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 125,
							"sourceUnit": 93,
							"src": "185:43:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/interfaces/Coin/ICoinV1State.sol",
							"file": "./Coin/ICoinV1State.sol",
							"id": 112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 125,
							"sourceUnit": 106,
							"src": "229:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 114,
										"name": "ICoinV1Events",
										"nameLocations": [
											"560:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3,
										"src": "560:13:5"
									},
									"id": 115,
									"nodeType": "InheritanceSpecifier",
									"src": "560:13:5"
								},
								{
									"baseName": {
										"id": 116,
										"name": "ICoinV1GatorActions",
										"nameLocations": [
											"579:19:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 30,
										"src": "579:19:5"
									},
									"id": 117,
									"nodeType": "InheritanceSpecifier",
									"src": "579:19:5"
								},
								{
									"baseName": {
										"id": 118,
										"name": "ICoinV1Immutables",
										"nameLocations": [
											"604:17:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 46,
										"src": "604:17:5"
									},
									"id": 119,
									"nodeType": "InheritanceSpecifier",
									"src": "604:17:5"
								},
								{
									"baseName": {
										"id": 120,
										"name": "ICoinV1MarketorActions",
										"nameLocations": [
											"627:22:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 92,
										"src": "627:22:5"
									},
									"id": 121,
									"nodeType": "InheritanceSpecifier",
									"src": "627:22:5"
								},
								{
									"baseName": {
										"id": 122,
										"name": "ICoinV1State",
										"nameLocations": [
											"655:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 105,
										"src": "655:12:5"
									},
									"id": 123,
									"nodeType": "InheritanceSpecifier",
									"src": "655:12:5"
								}
							],
							"canonicalName": "ITTSwapV1Coin",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 113,
								"nodeType": "StructuredDocumentation",
								"src": "264:265:5",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 124,
							"linearizedBaseContracts": [
								124,
								105,
								92,
								46,
								30,
								3
							],
							"name": "ITTSwapV1Coin",
							"nameLocation": "539:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 125,
							"src": "529:143:5",
							"usedErrors": []
						}
					],
					"src": "45:628:5"
				},
				"id": 5
			},
			"Contracts/libraries/base/LCoin.sol": {
				"ast": {
					"absolutePath": "Contracts/libraries/base/LCoin.sol",
					"exportedSymbols": {
						"LCoin": [
							163
						]
					},
					"id": 164,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 126,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LCoin",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 163,
							"linearizedBaseContracts": [
								163
							],
							"name": "LCoin",
							"nameLocation": "78:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "LCoin.Info",
									"id": 149,
									"members": [
										{
											"constant": false,
											"id": 128,
											"mutability": "mutable",
											"name": "coinFullName",
											"nameLocation": "119:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "112:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 127,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "112:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 130,
											"mutability": "mutable",
											"name": "symbol",
											"nameLocation": "163:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "156:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 129,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "156:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "typecode",
											"nameLocation": "201:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "194:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 131,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "194:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "246:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "240:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 133,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "240:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 136,
											"mutability": "mutable",
											"name": "maxSupply",
											"nameLocation": "281:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "273:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 135,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "273:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 138,
											"mutability": "mutable",
											"name": "totalSupply",
											"nameLocation": "320:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "312:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 137,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "312:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 140,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "361:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "353:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 139,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "353:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 142,
											"mutability": "mutable",
											"name": "marketunlock",
											"nameLocation": "406:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "401:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 141,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "401:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 144,
											"mutability": "mutable",
											"name": "gateunlock",
											"nameLocation": "445:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "440:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 143,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "440:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "isUsed",
											"nameLocation": "482:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "477:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 145,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "477:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "506:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 149,
											"src": "498:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nameLocation": "97:4:6",
									"nodeType": "StructDefinition",
									"scope": 163,
									"src": "90:442:6",
									"visibility": "public"
								},
								{
									"canonicalName": "LCoin.DetailInfo",
									"id": 162,
									"members": [
										{
											"constant": false,
											"id": 151,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "573:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 162,
											"src": "565:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 150,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "565:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 153,
											"mutability": "mutable",
											"name": "WhitePaperUrl",
											"nameLocation": "621:13:6",
											"nodeType": "VariableDeclaration",
											"scope": 162,
											"src": "613:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 152,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "613:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 155,
											"mutability": "mutable",
											"name": "OfficalWebsite",
											"nameLocation": "670:14:6",
											"nodeType": "VariableDeclaration",
											"scope": 162,
											"src": "662:22:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 154,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "662:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 157,
											"mutability": "mutable",
											"name": "blockExplorerUrl",
											"nameLocation": "711:16:6",
											"nodeType": "VariableDeclaration",
											"scope": 162,
											"src": "703:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 156,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "703:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 159,
											"mutability": "mutable",
											"name": "twriterUrl",
											"nameLocation": "760:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 162,
											"src": "752:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 158,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "752:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 161,
											"mutability": "mutable",
											"name": "bbsUrl",
											"nameLocation": "803:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 162,
											"src": "795:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 160,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "795:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DetailInfo",
									"nameLocation": "544:10:6",
									"nodeType": "StructDefinition",
									"scope": 163,
									"src": "537:297:6",
									"visibility": "public"
								}
							],
							"scope": 164,
							"src": "70:766:6",
							"usedErrors": []
						}
					],
					"src": "45:792:6"
				},
				"id": 6
			}
		}
	}
}