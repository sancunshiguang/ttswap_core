{
	"id": "b9d9b570de3a1da47f7bb7d4dea18e1a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"Contracts/TTSwapV1Marketor.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\nimport \"./interfaces/ITTSwapV1Marketor.sol\";\n\ncontract TTSwapV1Marketor is ITTSwapV1Marketor {\n    //市场管理员\n    mapping(address => bool) public Marketors;\n    //记录管理号编号\n    mapping(address => uint128) public MarketorsNo;\n    //记录市场管理员人数(包含已加人员)\n    uint128 public maxMarketorNo;\n    //记录市场创建者\n    address public marketCreator;\n\n    //初始化时\n    constructor(address _marketCreator) {\n        marketCreator = _marketCreator;\n        maxMarketorNo = 1;\n    }\n\n    //只能市场创建者运行\n    modifier onlyMarketCreator() {\n        require(msg.sender == marketCreator);\n        _;\n    }\n\n    //增加市场管理员\n    function setMarketorByMarketCreator(\n        address _owner\n    ) external override onlyMarketCreator {\n        Marketors[_owner] = true;\n        require(\n            maxMarketorNo + 1 >= maxMarketorNo,\n            \"maxMarketorNo connot increase\"\n        );\n        maxMarketorNo += 1;\n        MarketorsNo[_owner] = maxMarketorNo;\n        emit e_setMarketorByMarketCreator(_owner);\n    }\n\n    //删除市场管理员\n    function delMarketorByMarketCreator(\n        address _owner\n    ) external override onlyMarketCreator {\n        delete Marketors[_owner];\n        delete MarketorsNo[_owner];\n        emit e_delMarketorByMarketCreator(_owner);\n    }\n\n    //判定执行者是否是管理员\n    function isValidMarketor() external view override returns (bool) {\n        return Marketors[msg.sender];\n    }\n\n    //判定特定地址是否是管理员\n    function isValidMarketor(\n        address mkaddress\n    ) external view override returns (bool) {\n        return Marketors[mkaddress];\n    }\n\n    //获取调用者的管理员编号\n    function getMarketorNo() external view returns (uint128) {\n        return MarketorsNo[msg.sender];\n    }\n\n    //获取特定地址的管理员编号\n    function getMarketorNo(\n        address _marketorAddress\n    ) external view returns (uint128) {\n        return MarketorsNo[_marketorAddress];\n    }\n\n    //获取当前最大编号\n    function getMaxMarketorNo() external view returns (uint128) {\n        return maxMarketorNo;\n    }\n}\n"
			},
			"Contracts/interfaces/ITTSwapV1Marketor.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\nimport \"./Marketor/IMarketorV1Events.sol\";\nimport \"./Marketor/IMarketorV1Immutables.sol\";\nimport \"./Marketor/IMarketorV1MarketCreatorActions.sol\";\nimport \"./Marketor/IMarketorV1State.sol\";\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface ITTSwapV1Marketor is\n    IMarketorV1Events,\n    IMarketorV1Immutables,\n    IMarketorV1MarketCreatorActions,\n    IMarketorV1State\n{\n\n}\n"
			},
			"Contracts/interfaces/Marketor/IMarketorV1State.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IMarketorV1State {\n    function isValidMarketor() external view returns (bool);\n\n    function isValidMarketor(address) external view returns (bool);\n}\n"
			},
			"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IMarketorV1MarketCreatorActions {\n    function setMarketorByMarketCreator(address _owner) external;\n\n    /// @notice Explain to an end user what this does\n    /// @dev Explain to a developer any extra details\n    function delMarketorByMarketCreator(address _owner) external;\n}\n"
			},
			"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IMarketorV1Immutables {\n\n}\n"
			},
			"Contracts/interfaces/Marketor/IMarketorV1Events.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IMarketorV1Events {\n    event e_setMarketorByMarketCreator(address);\n    event e_delMarketorByMarketCreator(address);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"Contracts/TTSwapV1Marketor.sol": {
				"TTSwapV1Marketor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_marketCreator",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "e_delMarketorByMarketCreator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "e_setMarketorByMarketCreator",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "Marketors",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MarketorsNo",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "delMarketorByMarketCreator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketorNo",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_marketorAddress",
									"type": "address"
								}
							],
							"name": "getMarketorNo",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxMarketorNo",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mkaddress",
									"type": "address"
								}
							],
							"name": "isValidMarketor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isValidMarketor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketCreator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxMarketorNo",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setMarketorByMarketCreator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"delMarketorByMarketCreator(address)": {
								"details": "Explain to a developer any extra details"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/TTSwapV1Marketor.sol\":116:2244  contract TTSwapV1Marketor is ITTSwapV1Marketor {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/TTSwapV1Marketor.sol\":488:598  constructor(address _marketCreator) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Contracts/TTSwapV1Marketor.sol\":534:547  marketCreator */\n  0x03\n    /* \"Contracts/TTSwapV1Marketor.sol\":534:564  marketCreator = _marketCreator */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"Contracts/TTSwapV1Marketor.sol\":574:587  maxMarketorNo */\n  0x02\n    /* \"Contracts/TTSwapV1Marketor.sol\":574:591  maxMarketorNo = 1 */\n  dup1\n  sload\n  not(sub(shl(0x80, 0x01), 0x01))\n  and\n  0x01\n  or\n  swap1\n  sstore\n    /* \"Contracts/TTSwapV1Marketor.sol\":116:2244  contract TTSwapV1Marketor is ITTSwapV1Marketor {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_10:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"Contracts/TTSwapV1Marketor.sol\":116:2244  contract TTSwapV1Marketor is ITTSwapV1Marketor {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/TTSwapV1Marketor.sol\":116:2244  contract TTSwapV1Marketor is ITTSwapV1Marketor {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x98ed687b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x98ed687b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xace4bf59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xad87d2ba\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb4f3824d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd6d38c64\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf5a0da2e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x27cbaabe\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3855cc65\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x42948d54\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5bffec62\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x71866520\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/TTSwapV1Marketor.sol\":434:462  address public marketCreator */\n    tag_3:\n      sload(0x03)\n      tag_15\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_15:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Contracts/TTSwapV1Marketor.sol\":434:462  address public marketCreator */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/TTSwapV1Marketor.sol\":191:232  mapping(address => bool) public Marketors */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":678:692   */\n      swap1\n      iszero\n        /* \"#utility.yul\":671:693   */\n      iszero\n        /* \"#utility.yul\":653:694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":641:643   */\n      0x20\n        /* \"#utility.yul\":626:644   */\n      add\n        /* \"Contracts/TTSwapV1Marketor.sol\":191:232  mapping(address => bool) public Marketors */\n      tag_17\n        /* \"#utility.yul\":513:700   */\n      jump\n        /* \"Contracts/TTSwapV1Marketor.sol\":372:400  uint128 public maxMarketorNo */\n    tag_5:\n      sload(0x02)\n      tag_25\n      swap1\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":869:916   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":851:917   */\n      dup2\n      mstore\n        /* \"#utility.yul\":839:841   */\n      0x20\n        /* \"#utility.yul\":824:842   */\n      add\n        /* \"Contracts/TTSwapV1Marketor.sol\":372:400  uint128 public maxMarketorNo */\n      tag_17\n        /* \"#utility.yul\":705:923   */\n      jump\n        /* \"Contracts/TTSwapV1Marketor.sol\":765:1152  function setMarketorByMarketCreator(... */\n    tag_6:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Contracts/TTSwapV1Marketor.sol\":1621:1761  function isValidMarketor(... */\n    tag_7:\n      tag_19\n      tag_33\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/TTSwapV1Marketor.sol\":1734:1754  Marketors[mkaddress] */\n      and\n        /* \"Contracts/TTSwapV1Marketor.sol\":1711:1715  bool */\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":1734:1754  Marketors[mkaddress] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"Contracts/TTSwapV1Marketor.sol\":1621:1761  function isValidMarketor(... */\n      jump\n        /* \"Contracts/TTSwapV1Marketor.sol\":1807:1911  function getMarketorNo() external view returns (uint128) {... */\n    tag_8:\n        /* \"Contracts/TTSwapV1Marketor.sol\":1893:1903  msg.sender */\n      caller\n        /* \"Contracts/TTSwapV1Marketor.sol\":1855:1862  uint128 */\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":1881:1904  MarketorsNo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Contracts/TTSwapV1Marketor.sol\":1881:1892  MarketorsNo */\n      0x01\n        /* \"Contracts/TTSwapV1Marketor.sol\":1881:1904  MarketorsNo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n        /* \"Contracts/TTSwapV1Marketor.sol\":1807:1911  function getMarketorNo() external view returns (uint128) {... */\n      jump(tag_25)\n        /* \"Contracts/TTSwapV1Marketor.sol\":2145:2242  function getMaxMarketorNo() external view returns (uint128) {... */\n    tag_9:\n        /* \"Contracts/TTSwapV1Marketor.sol\":2222:2235  maxMarketorNo */\n      and(sub(shl(0x80, 0x01), 0x01), sload(0x02))\n        /* \"Contracts/TTSwapV1Marketor.sol\":2145:2242  function getMaxMarketorNo() external view returns (uint128) {... */\n      jump(tag_25)\n        /* \"Contracts/TTSwapV1Marketor.sol\":1462:1572  function isValidMarketor() external view override returns (bool) {... */\n    tag_10:\n        /* \"Contracts/TTSwapV1Marketor.sol\":1554:1564  msg.sender */\n      caller\n        /* \"Contracts/TTSwapV1Marketor.sol\":1521:1525  bool */\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":1544:1565  Marketors[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Contracts/TTSwapV1Marketor.sol\":1462:1572  function isValidMarketor() external view override returns (bool) {... */\n      jump(tag_19)\n        /* \"Contracts/TTSwapV1Marketor.sol\":1186:1416  function delMarketorByMarketCreator(... */\n    tag_11:\n      tag_29\n      tag_46\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"Contracts/TTSwapV1Marketor.sol\":266:312  mapping(address => uint128) public MarketorsNo */\n    tag_12:\n      tag_25\n      tag_49\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_49:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Contracts/TTSwapV1Marketor.sol\":1960:2108  function getMarketorNo(... */\n    tag_13:\n      tag_25\n      tag_53\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/TTSwapV1Marketor.sol\":2072:2101  MarketorsNo[_marketorAddress] */\n      and\n        /* \"Contracts/TTSwapV1Marketor.sol\":2046:2053  uint128 */\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":2072:2101  MarketorsNo[_marketorAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Contracts/TTSwapV1Marketor.sol\":2072:2083  MarketorsNo */\n      0x01\n        /* \"Contracts/TTSwapV1Marketor.sol\":2072:2101  MarketorsNo[_marketorAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      swap1\n        /* \"Contracts/TTSwapV1Marketor.sol\":1960:2108  function getMarketorNo(... */\n      jump\n        /* \"Contracts/TTSwapV1Marketor.sol\":765:1152  function setMarketorByMarketCreator(... */\n    tag_31:\n        /* \"Contracts/TTSwapV1Marketor.sol\":699:712  marketCreator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"Contracts/TTSwapV1Marketor.sol\":685:695  msg.sender */\n      caller\n        /* \"Contracts/TTSwapV1Marketor.sol\":685:712  msg.sender == marketCreator */\n      eq\n        /* \"Contracts/TTSwapV1Marketor.sol\":677:713  require(msg.sender == marketCreator) */\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/TTSwapV1Marketor.sol\":877:894  Marketors[_owner] */\n      dup2\n      and\n        /* \"Contracts/TTSwapV1Marketor.sol\":877:886  Marketors */\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":877:894  Marketors[_owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Contracts/TTSwapV1Marketor.sol\":877:901  Marketors[_owner] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Contracts/TTSwapV1Marketor.sol\":897:901  true */\n      0x01\n        /* \"Contracts/TTSwapV1Marketor.sol\":877:901  Marketors[_owner] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Contracts/TTSwapV1Marketor.sol\":953:966  maxMarketorNo */\n      and(sub(shl(0x80, 0x01), 0x01), sload(0x02))\n      swap1\n        /* \"Contracts/TTSwapV1Marketor.sol\":932:949  maxMarketorNo + 1 */\n      tag_59\n      swap1\n        /* \"Contracts/TTSwapV1Marketor.sol\":953:966  maxMarketorNo */\n      dup3\n      swap1\n        /* \"Contracts/TTSwapV1Marketor.sol\":932:949  maxMarketorNo + 1 */\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"Contracts/TTSwapV1Marketor.sol\":932:966  maxMarketorNo + 1 >= maxMarketorNo */\n      and\n      lt\n      iszero\n        /* \"Contracts/TTSwapV1Marketor.sol\":911:1021  require(... */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1429:1431   */\n      0x20\n        /* \"Contracts/TTSwapV1Marketor.sol\":911:1021  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1411:1432   */\n      mstore\n        /* \"#utility.yul\":1468:1470   */\n      0x1d\n        /* \"#utility.yul\":1448:1466   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1441:1471   */\n      mstore\n        /* \"#utility.yul\":1507:1538   */\n      0x6d61784d61726b65746f724e6f20636f6e6e6f7420696e637265617365000000\n        /* \"#utility.yul\":1487:1505   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1480:1539   */\n      mstore\n        /* \"#utility.yul\":1556:1574   */\n      0x64\n      add\n        /* \"Contracts/TTSwapV1Marketor.sol\":911:1021  require(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"Contracts/TTSwapV1Marketor.sol\":1031:1044  maxMarketorNo */\n      0x02\n        /* \"Contracts/TTSwapV1Marketor.sol\":1031:1049  maxMarketorNo += 1 */\n      dup1\n      sload\n        /* \"Contracts/TTSwapV1Marketor.sol\":1048:1049  1 */\n      0x01\n      swap2\n        /* \"Contracts/TTSwapV1Marketor.sol\":1031:1044  maxMarketorNo */\n      swap1\n      0x00\n      swap1\n        /* \"Contracts/TTSwapV1Marketor.sol\":1031:1049  maxMarketorNo += 1 */\n      tag_64\n      swap1\n        /* \"Contracts/TTSwapV1Marketor.sol\":1048:1049  1 */\n      dup5\n      swap1\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"Contracts/TTSwapV1Marketor.sol\":1031:1049  maxMarketorNo += 1 */\n      and\n      tag_60\n      jump\t// in\n    tag_64:\n      dup3\n      sload\n      0x0100\n      swap3\n      swap1\n      swap3\n      exp\n      sub(shl(0x80, 0x01), 0x01)\n      dup2\n      dup2\n      mul\n      not\n      swap1\n      swap4\n      and\n      swap2\n      dup4\n      and\n      mul\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Contracts/TTSwapV1Marketor.sol\":1081:1094  maxMarketorNo */\n      sload(0x02)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/TTSwapV1Marketor.sol\":1059:1078  MarketorsNo[_owner] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Contracts/TTSwapV1Marketor.sol\":1059:1094  MarketorsNo[_owner] = maxMarketorNo */\n      dup1\n      sload\n        /* \"Contracts/TTSwapV1Marketor.sol\":1081:1094  maxMarketorNo */\n      swap5\n      swap1\n      swap6\n      and\n      not(sub(shl(0x80, 0x01), 0x01))\n        /* \"Contracts/TTSwapV1Marketor.sol\":1059:1094  MarketorsNo[_owner] = maxMarketorNo */\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Contracts/TTSwapV1Marketor.sol\":1109:1145  e_setMarketorByMarketCreator(_owner) */\n      swap2\n      mload\n        /* \"#utility.yul\":160:211   */\n      swap2\n      dup3\n      mstore\n        /* \"Contracts/TTSwapV1Marketor.sol\":1109:1145  e_setMarketorByMarketCreator(_owner) */\n      0x963cda38749d0d4f4c8845d1f2efc567406beb5d94fd4e2c868ce59bc594c280\n      swap3\n      pop\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Contracts/TTSwapV1Marketor.sol\":1109:1145  e_setMarketorByMarketCreator(_owner) */\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/TTSwapV1Marketor.sol\":765:1152  function setMarketorByMarketCreator(... */\n      pop\n      jump\t// out\n        /* \"Contracts/TTSwapV1Marketor.sol\":1186:1416  function delMarketorByMarketCreator(... */\n    tag_47:\n        /* \"Contracts/TTSwapV1Marketor.sol\":699:712  marketCreator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"Contracts/TTSwapV1Marketor.sol\":685:695  msg.sender */\n      caller\n        /* \"Contracts/TTSwapV1Marketor.sol\":685:712  msg.sender == marketCreator */\n      eq\n        /* \"Contracts/TTSwapV1Marketor.sol\":677:713  require(msg.sender == marketCreator) */\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/TTSwapV1Marketor.sol\":1305:1322  Marketors[_owner] */\n      dup2\n      and\n        /* \"Contracts/TTSwapV1Marketor.sol\":1305:1314  Marketors */\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":1305:1322  Marketors[_owner] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Contracts/TTSwapV1Marketor.sol\":1298:1322  delete Marketors[_owner] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      0x01\n        /* \"Contracts/TTSwapV1Marketor.sol\":1339:1358  MarketorsNo[_owner] */\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Contracts/TTSwapV1Marketor.sol\":1332:1358  delete MarketorsNo[_owner] */\n      dup1\n      sload\n      not(sub(shl(0x80, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Contracts/TTSwapV1Marketor.sol\":1373:1409  e_delMarketorByMarketCreator(_owner) */\n      swap1\n      mload\n        /* \"#utility.yul\":160:211   */\n      swap2\n      dup3\n      mstore\n        /* \"Contracts/TTSwapV1Marketor.sol\":1373:1409  e_delMarketorByMarketCreator(_owner) */\n      0x0e30dde20bbc2e559ffb88627aaecc60544e541c11bce995480af5f8e3da8b7e\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Contracts/TTSwapV1Marketor.sol\":1373:1409  e_delMarketorByMarketCreator(_owner) */\n      tag_65\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"#utility.yul\":222:508   */\n    tag_21:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_78:\n        /* \"#utility.yul\":376:399   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":428:459   */\n      dup2\n      and\n        /* \"#utility.yul\":418:460   */\n      dup2\n      eq\n        /* \"#utility.yul\":408:478   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":408:478   */\n    tag_79:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":222:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":928:1222   */\n    tag_60:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":1050:1060   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":1062:1072   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":1046:1073   */\n      add\n      swap1\n        /* \"#utility.yul\":1085:1096   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1082:1216   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":1138:1148   */\n      0x4e487b71\n        /* \"#utility.yul\":1133:1136   */\n      0xe0\n        /* \"#utility.yul\":1129:1149   */\n      shl\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1119:1150   */\n      mstore\n        /* \"#utility.yul\":1173:1177   */\n      0x11\n        /* \"#utility.yul\":1170:1171   */\n      0x04\n        /* \"#utility.yul\":1163:1178   */\n      mstore\n        /* \"#utility.yul\":1201:1205   */\n      0x24\n        /* \"#utility.yul\":1198:1199   */\n      0x00\n        /* \"#utility.yul\":1191:1206   */\n      revert\n        /* \"#utility.yul\":1082:1216   */\n    tag_83:\n      pop\n        /* \"#utility.yul\":928:1222   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e94870b75c56c3507c3899e018b5fb8140ecd2ae24dbbf96e746093ea00fb23664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:6"
															},
															"nodeType": "YulIf",
															"src": "105:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:6"
															},
															"nodeType": "YulIf",
															"src": "204:70:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:6",
														"type": ""
													}
												],
												"src": "14:290:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161054a38038061054a83398101604081905261002f91610067565b600380546001600160a01b0319166001600160a01b0392909216919091179055600280546001600160801b0319166001179055610097565b60006020828403121561007957600080fd5b81516001600160a01b038116811461009057600080fd5b9392505050565b6104a4806100a66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806398ed687b1161007157806398ed687b1461017d578063ace4bf591461019b578063ad87d2ba146101ac578063b4f3824d146101c4578063d6d38c64146101d7578063f5a0da2e1461020057600080fd5b806327cbaabe146100ae5780633855cc65146100de57806342948d54146101115780635bffec621461013c5780637186652014610151575b600080fd5b6003546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101016100ec366004610409565b60006020819052908152604090205460ff1681565b60405190151581526020016100d5565b600254610124906001600160801b031681565b6040516001600160801b0390911681526020016100d5565b61014f61014a366004610409565b610232565b005b61010161015f366004610409565b6001600160a01b031660009081526020819052604090205460ff1690565b336000908152600160205260409020546001600160801b0316610124565b6002546001600160801b0316610124565b3360009081526020819052604090205460ff16610101565b61014f6101d2366004610409565b61038e565b6101246101e5366004610409565b6001602052600090815260409020546001600160801b031681565b61012461020e366004610409565b6001600160a01b03166000908152600160205260409020546001600160801b031690565b6003546001600160a01b0316331461024957600080fd5b6001600160a01b0381166000908152602081905260409020805460ff191660019081179091556002546001600160801b031690610287908290610439565b6001600160801b031610156102e25760405162461bcd60e51b815260206004820152601d60248201527f6d61784d61726b65746f724e6f20636f6e6e6f7420696e637265617365000000604482015260640160405180910390fd5b60028054600191906000906103019084906001600160801b0316610439565b82546101009290920a6001600160801b038181021990931691831602179091556002546001600160a01b0384166000818152600160209081526040918290208054949095166001600160801b03199094169390931790935591519182527f963cda38749d0d4f4c8845d1f2efc567406beb5d94fd4e2c868ce59bc594c2809250015b60405180910390a150565b6003546001600160a01b031633146103a557600080fd5b6001600160a01b038116600081815260208181526040808320805460ff19169055600182529182902080546001600160801b031916905590519182527f0e30dde20bbc2e559ffb88627aaecc60544e541c11bce995480af5f8e3da8b7e9101610383565b60006020828403121561041b57600080fd5b81356001600160a01b038116811461043257600080fd5b9392505050565b6001600160801b0381811683821601908082111561046757634e487b7160e01b600052601160045260246000fd5b509291505056fea2646970667358221220e94870b75c56c3507c3899e018b5fb8140ecd2ae24dbbf96e746093ea00fb23664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x54A CODESIZE SUB DUP1 PUSH2 0x54A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x67 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4A4 DUP1 PUSH2 0xA6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98ED687B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x98ED687B EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xACE4BF59 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xAD87D2BA EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xB4F3824D EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xD6D38C64 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xF5A0DA2E EQ PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27CBAABE EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x3855CC65 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x42948D54 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x5BFFEC62 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x71866520 EQ PUSH2 0x151 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xC1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x124 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x124 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x124 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x101 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH2 0x287 SWAP1 DUP3 SWAP1 PUSH2 0x439 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61784D61726B65746F724E6F20636F6E6E6F7420696E637265617365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x301 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x439 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x963CDA38749D0D4F4C8845D1F2EFC567406BEB5D94FD4E2C868CE59BC594C280 SWAP3 POP ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xE30DDE20BBC2E559FFB88627AAECC60544E541C11BCE995480AF5F8E3DA8B7E SWAP2 ADD PUSH2 0x383 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x467 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 BASEFEE PUSH17 0xB75C56C3507C3899E018B5FB8140ECD2AE 0x24 0xDB 0xBF SWAP7 0xE7 CHAINID MULMOD RETURNDATACOPY LOG0 0xF 0xB2 CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "116:2128:0:-:0;;;488:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;534:13;:30;;-1:-1:-1;;;;;;534:30:0;-1:-1:-1;;;;;534:30:0;;;;;;;;;;574:13;:17;;-1:-1:-1;;;;;;574:17:0;-1:-1:-1;574:17:0;;;116:2128;;14:290:6;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;:::-;116:2128:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MarketorsNo_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Marketors_8": {
									"entryPoint": null,
									"id": 8,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@delMarketorByMarketCreator_102": {
									"entryPoint": 910,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getMarketorNo_138": {
									"entryPoint": null,
									"id": 138,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMarketorNo_150": {
									"entryPoint": null,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMaxMarketorNo_158": {
									"entryPoint": null,
									"id": 158,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isValidMarketor_114": {
									"entryPoint": null,
									"id": 114,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isValidMarketor_127": {
									"entryPoint": null,
									"id": 127,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@marketCreator_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxMarketorNo_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMarketorByMarketCreator_79": {
									"entryPoint": 562,
									"id": 79,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2efb00e88e14b60402ca221d3666fba912fa798cbe5a79f9f56df3fe3d2dc531__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint128": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1582:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:6",
														"type": ""
													}
												],
												"src": "14:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "292:216:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "338:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "347:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "350:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:32:6"
															},
															"nodeType": "YulIf",
															"src": "302:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "363:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "367:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "471:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "421:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "432:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "447:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "452:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "443:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "443:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "456:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "439:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "439:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "428:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:50:6"
															},
															"nodeType": "YulIf",
															"src": "408:70:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "487:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "497:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "258:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "269:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "281:6:6",
														"type": ""
													}
												],
												"src": "222:286:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "630:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "626:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "618:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "660:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "685:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "678:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "678:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "671:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "671:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "653:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "577:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "588:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "599:4:6",
														"type": ""
													}
												],
												"src": "513:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "806:117:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "816:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "828:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "839:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "816:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "858:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "873:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "881:34:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "869:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "869:47:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "851:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:66:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "851:66:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "775:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "786:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "797:4:6",
														"type": ""
													}
												],
												"src": "705:218:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "976:246:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "986:44:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "996:34:6",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "990:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1039:34:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "1054:1:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1057:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1050:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1050:10:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1066:1:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1069:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1062:10:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1046:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:27:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1039:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1105:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1133:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1138:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1129:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1129:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1119:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1119:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1119:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1170:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1173:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1163:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1163:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1163:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1198:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1201:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1191:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1191:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1191:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "1088:3:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1093:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1085:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:11:6"
															},
															"nodeType": "YulIf",
															"src": "1082:134:6"
														}
													]
												},
												"name": "checked_add_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "959:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "962:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "968:3:6",
														"type": ""
													}
												],
												"src": "928:294:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1401:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1418:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1411:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1452:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1463:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1448:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1448:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1468:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1441:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1441:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:18:6"
																	},
																	{
																		"hexValue": "6d61784d61726b65746f724e6f20636f6e6e6f7420696e637265617365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1507:31:6",
																		"type": "",
																		"value": "maxMarketorNo connot increase"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1480:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1480:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1480:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1548:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1560:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1571:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1556:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1556:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1548:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2efb00e88e14b60402ca221d3666fba912fa798cbe5a79f9f56df3fe3d2dc531__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1378:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1392:4:6",
														"type": ""
													}
												],
												"src": "1227:353:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function checked_add_t_uint128(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_2efb00e88e14b60402ca221d3666fba912fa798cbe5a79f9f56df3fe3d2dc531__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"maxMarketorNo connot increase\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806398ed687b1161007157806398ed687b1461017d578063ace4bf591461019b578063ad87d2ba146101ac578063b4f3824d146101c4578063d6d38c64146101d7578063f5a0da2e1461020057600080fd5b806327cbaabe146100ae5780633855cc65146100de57806342948d54146101115780635bffec621461013c5780637186652014610151575b600080fd5b6003546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101016100ec366004610409565b60006020819052908152604090205460ff1681565b60405190151581526020016100d5565b600254610124906001600160801b031681565b6040516001600160801b0390911681526020016100d5565b61014f61014a366004610409565b610232565b005b61010161015f366004610409565b6001600160a01b031660009081526020819052604090205460ff1690565b336000908152600160205260409020546001600160801b0316610124565b6002546001600160801b0316610124565b3360009081526020819052604090205460ff16610101565b61014f6101d2366004610409565b61038e565b6101246101e5366004610409565b6001602052600090815260409020546001600160801b031681565b61012461020e366004610409565b6001600160a01b03166000908152600160205260409020546001600160801b031690565b6003546001600160a01b0316331461024957600080fd5b6001600160a01b0381166000908152602081905260409020805460ff191660019081179091556002546001600160801b031690610287908290610439565b6001600160801b031610156102e25760405162461bcd60e51b815260206004820152601d60248201527f6d61784d61726b65746f724e6f20636f6e6e6f7420696e637265617365000000604482015260640160405180910390fd5b60028054600191906000906103019084906001600160801b0316610439565b82546101009290920a6001600160801b038181021990931691831602179091556002546001600160a01b0384166000818152600160209081526040918290208054949095166001600160801b03199094169390931790935591519182527f963cda38749d0d4f4c8845d1f2efc567406beb5d94fd4e2c868ce59bc594c2809250015b60405180910390a150565b6003546001600160a01b031633146103a557600080fd5b6001600160a01b038116600081815260208181526040808320805460ff19169055600182529182902080546001600160801b031916905590519182527f0e30dde20bbc2e559ffb88627aaecc60544e541c11bce995480af5f8e3da8b7e9101610383565b60006020828403121561041b57600080fd5b81356001600160a01b038116811461043257600080fd5b9392505050565b6001600160801b0381811683821601908082111561046757634e487b7160e01b600052601160045260246000fd5b509291505056fea2646970667358221220e94870b75c56c3507c3899e018b5fb8140ecd2ae24dbbf96e746093ea00fb23664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98ED687B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x98ED687B EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xACE4BF59 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xAD87D2BA EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xB4F3824D EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xD6D38C64 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xF5A0DA2E EQ PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27CBAABE EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x3855CC65 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x42948D54 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x5BFFEC62 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x71866520 EQ PUSH2 0x151 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xC1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x124 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x124 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x124 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x101 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH2 0x287 SWAP1 DUP3 SWAP1 PUSH2 0x439 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61784D61726B65746F724E6F20636F6E6E6F7420696E637265617365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x301 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x439 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x963CDA38749D0D4F4C8845D1F2EFC567406BEB5D94FD4E2C868CE59BC594C280 SWAP3 POP ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xE30DDE20BBC2E559FFB88627AAECC60544E541C11BCE995480AF5F8E3DA8B7E SWAP2 ADD PUSH2 0x383 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x467 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 BASEFEE PUSH17 0xB75C56C3507C3899E018B5FB8140ECD2AE 0x24 0xDB 0xBF SWAP7 0xE7 CHAINID MULMOD RETURNDATACOPY LOG0 0xF 0xB2 CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "116:2128:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;434:28;;;;;-1:-1:-1;;;;;434:28:0;;;;;;-1:-1:-1;;;;;178:32:6;;;160:51;;148:2;133:18;434:28:0;;;;;;;;191:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;678:14:6;;671:22;653:41;;641:2;626:18;191:41:0;513:187:6;372:28:0;;;;;-1:-1:-1;;;;;372:28:0;;;;;;-1:-1:-1;;;;;869:47:6;;;851:66;;839:2;824:18;372:28:0;705:218:6;765:387:0;;;;;;:::i;:::-;;:::i;:::-;;1621:140;;;;;;:::i;:::-;-1:-1:-1;;;;;1734:20:0;1711:4;1734:20;;;;;;;;;;;;;;1621:140;1807:104;1893:10;1855:7;1881:23;;;:11;:23;;;;;;-1:-1:-1;;;;;1881:23:0;1807:104;;2145:97;2222:13;;-1:-1:-1;;;;;2222:13:0;2145:97;;1462:110;1554:10;1521:4;1544:21;;;;;;;;;;;;;1462:110;;1186:230;;;;;;:::i;:::-;;:::i;266:46::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;266:46:0;;;1960:148;;;;;;:::i;:::-;-1:-1:-1;;;;;2072:29:0;2046:7;2072:29;;;:11;:29;;;;;;-1:-1:-1;;;;;2072:29:0;;1960:148;765:387;699:13;;-1:-1:-1;;;;;699:13:0;685:10;:27;677:36;;;;;;-1:-1:-1;;;;;877:17:0;::::1;:9;:17:::0;;;::::1;::::0;;;;;;:24;;-1:-1:-1;;877:24:0::1;897:4;877:24:::0;;::::1;::::0;;;953:13:::1;::::0;-1:-1:-1;;;;;953:13:0::1;::::0;932:17:::1;::::0;953:13;;932:17:::1;:::i;:::-;-1:-1:-1::0;;;;;932:34:0::1;;;911:110;;;::::0;-1:-1:-1;;;911:110:0;;1429:2:6;911:110:0::1;::::0;::::1;1411:21:6::0;1468:2;1448:18;;;1441:30;1507:31;1487:18;;;1480:59;1556:18;;911:110:0::1;;;;;;;;1031:13;:18:::0;;1048:1:::1;::::0;1031:13;::::1;::::0;:18:::1;::::0;1048:1;;-1:-1:-1;;;;;1031:18:0::1;;:::i;:::-;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;1031:18:0;;::::1;;::::0;;::::1;::::0;;::::1;;;::::0;;;1081:13:::1;::::0;-1:-1:-1;;;;;1059:19:0;::::1;-1:-1:-1::0;1059:19:0;;;-1:-1:-1;1059:19:0::1;::::0;;;;;;;;:35;;1081:13;;;::::1;-1:-1:-1::0;;;;;;1059:35:0;;::::1;::::0;;;::::1;::::0;;;1109:36;;160:51:6;;;1109:36:0::1;::::0;-1:-1:-1;133:18:6;1109:36:0::1;;;;;;;;765:387:::0;:::o;1186:230::-;699:13;;-1:-1:-1;;;;;699:13:0;685:10;:27;677:36;;;;;;-1:-1:-1;;;;;1305:17:0;::::1;:9;:17:::0;;;::::1;::::0;;;;;;;1298:24;;-1:-1:-1;;1298:24:0::1;::::0;;-1:-1:-1;1339:19:0;;;;;;1332:26;;-1:-1:-1;;;;;;1332:26:0::1;::::0;;1373:36;;160:51:6;;;1373:36:0::1;::::0;133:18:6;1373:36:0::1;14:203:6::0;222:286;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:6;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:6:o;928:294::-;-1:-1:-1;;;;;1050:10:6;;;1062;;;1046:27;;1085:11;;;1082:134;;;1138:10;1133:3;1129:20;1126:1;1119:31;1173:4;1170:1;1163:15;1201:4;1198:1;1191:15;1082:134;;928:294;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "237600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Marketors(address)": "2522",
								"MarketorsNo(address)": "2611",
								"delMarketorByMarketCreator(address)": "52139",
								"getMarketorNo()": "2399",
								"getMarketorNo(address)": "2651",
								"getMaxMarketorNo()": "2353",
								"isValidMarketor()": "2419",
								"isValidMarketor(address)": "2606",
								"marketCreator()": "2327",
								"maxMarketorNo()": "2382",
								"setMarketorByMarketCreator(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 2244,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 2244,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 2244,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 488,
									"end": 598,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 488,
									"end": 598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 488,
									"end": 598,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 488,
									"end": 598,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 488,
									"end": 598,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 488,
									"end": 598,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 488,
									"end": 598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 488,
									"end": 598,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 488,
									"end": 598,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 534,
									"end": 547,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 534,
									"end": 564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 534,
									"end": 564,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 534,
									"end": 564,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 534,
									"end": 564,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 534,
									"end": 564,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 534,
									"end": 564,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 534,
									"end": 564,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 534,
									"end": 564,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 534,
									"end": 564,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 534,
									"end": 564,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 534,
									"end": 564,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 534,
									"end": 564,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 534,
									"end": 564,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 574,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 574,
									"end": 591,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 574,
									"end": 591,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 574,
									"end": 591,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 574,
									"end": 591,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 574,
									"end": 591,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 574,
									"end": 591,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 116,
									"end": 2244,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 116,
									"end": 2244,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 116,
									"end": 2244,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 2244,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 116,
									"end": 2244,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 2244,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 2244,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 116,
									"end": 2244,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 2244,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e94870b75c56c3507c3899e018b5fb8140ecd2ae24dbbf96e746093ea00fb23664736f6c63430008120033",
									".code": [
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "98ED687B"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "98ED687B"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "ACE4BF59"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "AD87D2BA"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "B4F3824D"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "D6D38C64"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "F5A0DA2E"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "27CBAABE"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "3855CC65"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "42948D54"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "5BFFEC62"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "71866520"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 2244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 434,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 434,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 434,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 434,
											"end": 462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 434,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 434,
											"end": 462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 434,
											"end": 462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 434,
											"end": 462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 434,
											"end": 462,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 434,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 434,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 434,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 434,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 434,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 434,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 434,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 434,
											"end": 462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 434,
											"end": 462,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 434,
											"end": 462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 434,
											"end": 462,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 191,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 191,
											"end": 232,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 191,
											"end": 232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 191,
											"end": 232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 191,
											"end": 232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 191,
											"end": 232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 191,
											"end": 232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 191,
											"end": 232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 191,
											"end": 232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 678,
											"end": 692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 678,
											"end": 692,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 671,
											"end": 693,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 653,
											"end": 694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 653,
											"end": 694,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 641,
											"end": 643,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 191,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 513,
											"end": 700,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 372,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 372,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 372,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 372,
											"end": 400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 372,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 372,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 372,
											"end": 400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 372,
											"end": 400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 372,
											"end": 400,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 372,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 372,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 372,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 372,
											"end": 400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 869,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 869,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 869,
											"end": 916,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 851,
											"end": 917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 851,
											"end": 917,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 839,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 824,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 372,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 705,
											"end": 923,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 765,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 765,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1621,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1621,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1621,
											"end": 1761,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1621,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1621,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1621,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1711,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1761,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1911,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1807,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 1903,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1807,
											"end": 1911,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2242,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2145,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2222,
											"end": 2235,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2222,
											"end": 2235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2222,
											"end": 2235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2145,
											"end": 2242,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1462,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1564,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1521,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1544,
											"end": 1565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1565,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1565,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1544,
											"end": 1565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1462,
											"end": 1572,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1416,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1186,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1186,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1186,
											"end": 1416,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1186,
											"end": 1416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1416,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1186,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1186,
											"end": 1416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 266,
											"end": 312,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 266,
											"end": 312,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 266,
											"end": 312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 266,
											"end": 312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 312,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 266,
											"end": 312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 266,
											"end": 312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 266,
											"end": 312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 266,
											"end": 312,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 2108,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1960,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1960,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1960,
											"end": 2108,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 2108,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1960,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1960,
											"end": 2108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 2108,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1960,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2072,
											"end": 2101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2083,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2072,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2072,
											"end": 2101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2101,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2072,
											"end": 2101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 2108,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 699,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 699,
											"end": 712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 699,
											"end": 712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 685,
											"end": 712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 677,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 677,
											"end": 713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 677,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 677,
											"end": 713,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 677,
											"end": 713,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 677,
											"end": 713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 877,
											"end": 894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 894,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 877,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 877,
											"end": 894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 877,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 894,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 877,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 877,
											"end": 901,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 897,
											"end": 901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 901,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 877,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 901,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 953,
											"end": 966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 953,
											"end": 966,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 953,
											"end": 966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 932,
											"end": 949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 953,
											"end": 966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 953,
											"end": 966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 932,
											"end": 949,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 932,
											"end": 949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 932,
											"end": 949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 932,
											"end": 966,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 932,
											"end": 966,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 932,
											"end": 966,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 1021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 911,
											"end": 1021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1429,
											"end": 1431,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 911,
											"end": 1021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1471,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1507,
											"end": 1538,
											"name": "PUSH",
											"source": 6,
											"value": "6D61784D61726B65746F724E6F20636F6E6E6F7420696E637265617365000000"
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1539,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1574,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1556,
											"end": 1574,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 911,
											"end": 1021,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1048,
											"end": 1049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1049,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1031,
											"end": 1049,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1078,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1059,
											"end": 1078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1094,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1094,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1094,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1094,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1094,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1094,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1094,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "963CDA38749D0D4F4C8845D1F2EFC567406BEB5D94FD4E2C868CE59BC594C280"
										},
										{
											"begin": 1109,
											"end": 1145,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1145,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1109,
											"end": 1145,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1145,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1145,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1145,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1145,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1145,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1145,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1416,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1186,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 699,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 699,
											"end": 712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 699,
											"end": 712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 685,
											"end": 712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 677,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 677,
											"end": 713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 677,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 677,
											"end": 713,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 677,
											"end": 713,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 677,
											"end": 713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1305,
											"end": 1322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1322,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1322,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1322,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1298,
											"end": 1322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1322,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1339,
											"end": 1358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1358,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1332,
											"end": 1358,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1358,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E30DDE20BBC2E559FFB88627AAECC60544E541C11BCE995480AF5F8E3DA8B7E"
										},
										{
											"begin": 1373,
											"end": 1409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 222,
											"end": 508,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 428,
											"end": 459,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 418,
											"end": 460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 418,
											"end": 460,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 408,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 408,
											"end": 478,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 222,
											"end": 508,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 1222,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 928,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1050,
											"end": 1060,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1060,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1060,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1062,
											"end": 1072,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1062,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1062,
											"end": 1072,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1096,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1096,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1096,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1216,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1082,
											"end": 1216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 1133,
											"end": 1136,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1129,
											"end": 1149,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1119,
											"end": 1150,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1177,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1170,
											"end": 1171,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1205,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1198,
											"end": 1199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1206,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1216,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1082,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 1222,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 928,
											"end": 1222,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 928,
											"end": 1222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 1222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 1222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"Contracts/TTSwapV1Marketor.sol",
								"Contracts/interfaces/ITTSwapV1Marketor.sol",
								"Contracts/interfaces/Marketor/IMarketorV1Events.sol",
								"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol",
								"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol",
								"Contracts/interfaces/Marketor/IMarketorV1State.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Marketors(address)": "3855cc65",
							"MarketorsNo(address)": "d6d38c64",
							"delMarketorByMarketCreator(address)": "b4f3824d",
							"getMarketorNo()": "98ed687b",
							"getMarketorNo(address)": "f5a0da2e",
							"getMaxMarketorNo()": "ace4bf59",
							"isValidMarketor()": "ad87d2ba",
							"isValidMarketor(address)": "71866520",
							"marketCreator()": "27cbaabe",
							"maxMarketorNo()": "42948d54",
							"setMarketorByMarketCreator(address)": "5bffec62"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketCreator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"e_delMarketorByMarketCreator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"e_setMarketorByMarketCreator\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Marketors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MarketorsNo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketorNo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketorAddress\",\"type\":\"address\"}],\"name\":\"getMarketorNo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxMarketorNo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mkaddress\",\"type\":\"address\"}],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMarketorNo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"details\":\"Explain to a developer any extra details\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"notice\":\"Explain to an end user what this does\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/TTSwapV1Marketor.sol\":\"TTSwapV1Marketor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/TTSwapV1Marketor.sol\":{\"keccak256\":\"0xfdaf3d2d82af7444e2220f679cc998d6e7ca7b29ac3e2b2adbd8fd018372e342\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d93e56c8a12e16cad14f0bdf9448c540509b3e9b934c45cdfd86989aeb8dc01\",\"dweb:/ipfs/QmZ6yF94HcJ5Mjk5JLGnm69DCgK8uxtfLBH7F8hZwSZb69\"]},\"Contracts/interfaces/ITTSwapV1Marketor.sol\":{\"keccak256\":\"0xcec6819c6010fada016d2adffd3ae7973365e768c6144df626506c5a00873565\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://59feb2895b8fda46ab09fd4b63605aef2bd315169102ef43898501dcdb92b3da\",\"dweb:/ipfs/QmWxs1ftk6xYceq2dRKZ3m5zwrvNYHdLt1xPo1Ntauii9g\"]},\"Contracts/interfaces/Marketor/IMarketorV1Events.sol\":{\"keccak256\":\"0x803231eb164204e023a2a11855e0db775df14e181ca68bda8d2b44271ded241f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0dd22561cfc8e32748dbe1adafeefbe93e46baa94797a3e584b03e8777386ea\",\"dweb:/ipfs/QmR38VzdTn3DRiYAdV8FTENp3qcsxKmukSfivisHuFCNbY\"]},\"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\":{\"keccak256\":\"0x2159e6262a224a3fb19bd304f89fab571d6ddad00a01c5bcbc7699bdca627412\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6fb78be3604a8d3ad5772db5533a3cf5268607997a5f815b6d8809cc8412d126\",\"dweb:/ipfs/QmZVF85N81hmsrzofsPLfDjrv2r82z8Xn4ooj6r2rTNM4F\"]},\"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\":{\"keccak256\":\"0x85fe030c431f4ce0818038e673a58d35b30ac6fdb6760b24c105afbd0b94cc15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://08d50a6cd32a067e30d45964d7d018fbec1b0b34b00529548815b6a98d4e9ee5\",\"dweb:/ipfs/QmaRBpH3M7vt628KB1UqonAoUD1UcqNXSEsPdeyThZ55VC\"]},\"Contracts/interfaces/Marketor/IMarketorV1State.sol\":{\"keccak256\":\"0x5daacc326d8c629ecd56540a6f1f746ed30450e3fbbb7bb6db9e7645fe5cd4d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://98cd366c4ce58b9183f96c9fd3b63e4cc9dfc6020e7f7593b5a45b36fa81b9cc\",\"dweb:/ipfs/QmTTDzMTgqMUrkVdFcSzwUZx51SH2Cho6911ni299L1oRd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Contracts/TTSwapV1Marketor.sol:TTSwapV1Marketor",
								"label": "Marketors",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 12,
								"contract": "Contracts/TTSwapV1Marketor.sol:TTSwapV1Marketor",
								"label": "MarketorsNo",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint128)"
							},
							{
								"astId": 14,
								"contract": "Contracts/TTSwapV1Marketor.sol:TTSwapV1Marketor",
								"label": "maxMarketorNo",
								"offset": 0,
								"slot": "2",
								"type": "t_uint128"
							},
							{
								"astId": 16,
								"contract": "Contracts/TTSwapV1Marketor.sol:TTSwapV1Marketor",
								"label": "marketCreator",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint128)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint128)",
								"numberOfBytes": "32",
								"value": "t_uint128"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"delMarketorByMarketCreator(address)": {
								"notice": "Explain to an end user what this does"
							}
						},
						"version": 1
					}
				}
			},
			"Contracts/interfaces/ITTSwapV1Marketor.sol": {
				"ITTSwapV1Marketor": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "e_delMarketorByMarketCreator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "e_setMarketorByMarketCreator",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "delMarketorByMarketCreator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isValidMarketor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isValidMarketor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setMarketorByMarketCreator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"delMarketorByMarketCreator(address)": {
								"details": "Explain to a developer any extra details"
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"delMarketorByMarketCreator(address)": "b4f3824d",
							"isValidMarketor()": "ad87d2ba",
							"isValidMarketor(address)": "71866520",
							"setMarketorByMarketCreator(address)": "5bffec62"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"e_delMarketorByMarketCreator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"e_setMarketorByMarketCreator\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"details\":\"Explain to a developer any extra details\"}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"notice\":\"Explain to an end user what this does\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/ITTSwapV1Marketor.sol\":\"ITTSwapV1Marketor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/ITTSwapV1Marketor.sol\":{\"keccak256\":\"0xcec6819c6010fada016d2adffd3ae7973365e768c6144df626506c5a00873565\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://59feb2895b8fda46ab09fd4b63605aef2bd315169102ef43898501dcdb92b3da\",\"dweb:/ipfs/QmWxs1ftk6xYceq2dRKZ3m5zwrvNYHdLt1xPo1Ntauii9g\"]},\"Contracts/interfaces/Marketor/IMarketorV1Events.sol\":{\"keccak256\":\"0x803231eb164204e023a2a11855e0db775df14e181ca68bda8d2b44271ded241f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0dd22561cfc8e32748dbe1adafeefbe93e46baa94797a3e584b03e8777386ea\",\"dweb:/ipfs/QmR38VzdTn3DRiYAdV8FTENp3qcsxKmukSfivisHuFCNbY\"]},\"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\":{\"keccak256\":\"0x2159e6262a224a3fb19bd304f89fab571d6ddad00a01c5bcbc7699bdca627412\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6fb78be3604a8d3ad5772db5533a3cf5268607997a5f815b6d8809cc8412d126\",\"dweb:/ipfs/QmZVF85N81hmsrzofsPLfDjrv2r82z8Xn4ooj6r2rTNM4F\"]},\"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\":{\"keccak256\":\"0x85fe030c431f4ce0818038e673a58d35b30ac6fdb6760b24c105afbd0b94cc15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://08d50a6cd32a067e30d45964d7d018fbec1b0b34b00529548815b6a98d4e9ee5\",\"dweb:/ipfs/QmaRBpH3M7vt628KB1UqonAoUD1UcqNXSEsPdeyThZ55VC\"]},\"Contracts/interfaces/Marketor/IMarketorV1State.sol\":{\"keccak256\":\"0x5daacc326d8c629ecd56540a6f1f746ed30450e3fbbb7bb6db9e7645fe5cd4d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://98cd366c4ce58b9183f96c9fd3b63e4cc9dfc6020e7f7593b5a45b36fa81b9cc\",\"dweb:/ipfs/QmTTDzMTgqMUrkVdFcSzwUZx51SH2Cho6911ni299L1oRd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"delMarketorByMarketCreator(address)": {
								"notice": "Explain to an end user what this does"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/Marketor/IMarketorV1Events.sol": {
				"IMarketorV1Events": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "e_delMarketorByMarketCreator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "e_setMarketorByMarketCreator",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"e_delMarketorByMarketCreator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"e_setMarketorByMarketCreator\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/Marketor/IMarketorV1Events.sol\":\"IMarketorV1Events\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Marketor/IMarketorV1Events.sol\":{\"keccak256\":\"0x803231eb164204e023a2a11855e0db775df14e181ca68bda8d2b44271ded241f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0dd22561cfc8e32748dbe1adafeefbe93e46baa94797a3e584b03e8777386ea\",\"dweb:/ipfs/QmR38VzdTn3DRiYAdV8FTENp3qcsxKmukSfivisHuFCNbY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol": {
				"IMarketorV1Immutables": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\":\"IMarketorV1Immutables\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\":{\"keccak256\":\"0x2159e6262a224a3fb19bd304f89fab571d6ddad00a01c5bcbc7699bdca627412\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6fb78be3604a8d3ad5772db5533a3cf5268607997a5f815b6d8809cc8412d126\",\"dweb:/ipfs/QmZVF85N81hmsrzofsPLfDjrv2r82z8Xn4ooj6r2rTNM4F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol": {
				"IMarketorV1MarketCreatorActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "delMarketorByMarketCreator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setMarketorByMarketCreator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"delMarketorByMarketCreator(address)": {
								"details": "Explain to a developer any extra details"
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"delMarketorByMarketCreator(address)": "b4f3824d",
							"setMarketorByMarketCreator(address)": "5bffec62"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"details\":\"Explain to a developer any extra details\"}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"notice\":\"Explain to an end user what this does\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\":\"IMarketorV1MarketCreatorActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\":{\"keccak256\":\"0x85fe030c431f4ce0818038e673a58d35b30ac6fdb6760b24c105afbd0b94cc15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://08d50a6cd32a067e30d45964d7d018fbec1b0b34b00529548815b6a98d4e9ee5\",\"dweb:/ipfs/QmaRBpH3M7vt628KB1UqonAoUD1UcqNXSEsPdeyThZ55VC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"delMarketorByMarketCreator(address)": {
								"notice": "Explain to an end user what this does"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/Marketor/IMarketorV1State.sol": {
				"IMarketorV1State": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isValidMarketor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isValidMarketor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidMarketor()": "ad87d2ba",
							"isValidMarketor(address)": "71866520"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/Marketor/IMarketorV1State.sol\":\"IMarketorV1State\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Marketor/IMarketorV1State.sol\":{\"keccak256\":\"0x5daacc326d8c629ecd56540a6f1f746ed30450e3fbbb7bb6db9e7645fe5cd4d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://98cd366c4ce58b9183f96c9fd3b63e4cc9dfc6020e7f7593b5a45b36fa81b9cc\",\"dweb:/ipfs/QmTTDzMTgqMUrkVdFcSzwUZx51SH2Cho6911ni299L1oRd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Contracts/TTSwapV1Marketor.sol": {
				"ast": {
					"absolutePath": "Contracts/TTSwapV1Marketor.sol",
					"exportedSymbols": {
						"IMarketorV1Events": [
							187
						],
						"IMarketorV1Immutables": [
							191
						],
						"IMarketorV1MarketCreatorActions": [
							206
						],
						"IMarketorV1State": [
							222
						],
						"ITTSwapV1Marketor": [
							175
						],
						"TTSwapV1Marketor": [
							159
						]
					},
					"id": 160,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:0"
						},
						{
							"absolutePath": "Contracts/interfaces/ITTSwapV1Marketor.sol",
							"file": "./interfaces/ITTSwapV1Marketor.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 160,
							"sourceUnit": 176,
							"src": "70:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ITTSwapV1Marketor",
										"nameLocations": [
											"145:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "145:17:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "145:17:0"
								}
							],
							"canonicalName": "TTSwapV1Marketor",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 159,
							"linearizedBaseContracts": [
								159,
								175,
								222,
								206,
								191,
								187
							],
							"name": "TTSwapV1Marketor",
							"nameLocation": "125:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3855cc65",
									"id": 8,
									"mutability": "mutable",
									"name": "Marketors",
									"nameLocation": "223:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "191:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 7,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 5,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "199:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "191:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 6,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "210:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d6d38c64",
									"id": 12,
									"mutability": "mutable",
									"name": "MarketorsNo",
									"nameLocation": "301:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "266:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
										"typeString": "mapping(address => uint128)"
									},
									"typeName": {
										"id": 11,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 9,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "274:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "266:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
											"typeString": "mapping(address => uint128)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 10,
											"name": "uint128",
											"nodeType": "ElementaryTypeName",
											"src": "285:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "42948d54",
									"id": 14,
									"mutability": "mutable",
									"name": "maxMarketorNo",
									"nameLocation": "387:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "372:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 13,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27cbaabe",
									"id": 16,
									"mutability": "mutable",
									"name": "marketCreator",
									"nameLocation": "449:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "434:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 15,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "434:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "524:74:0",
										"statements": [
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 21,
														"name": "marketCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "534:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 22,
														"name": "_marketCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "550:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "534:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "534:30:0"
											},
											{
												"expression": {
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 25,
														"name": "maxMarketorNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "574:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "590:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "574:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "574:17:0"
											}
										]
									},
									"id": 30,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_marketCreator",
												"nameLocation": "508:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "500:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:24:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:0:0"
									},
									"scope": 159,
									"src": "488:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "667:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 33,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "685:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "689:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "685:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 35,
																"name": "marketCreator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "699:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "685:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "677:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "677:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "677:36:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "723:1:0"
											}
										]
									},
									"id": 41,
									"name": "onlyMarketCreator",
									"nameLocation": "647:17:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "664:2:0"
									},
									"src": "638:93:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										199
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "867:285:0",
										"statements": [
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 49,
															"name": "Marketors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "877:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 51,
														"indexExpression": {
															"id": 50,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "887:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "877:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "897:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "877:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "877:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 56,
																	"name": "maxMarketorNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "932:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "948:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "932:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 59,
																"name": "maxMarketorNo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "953:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "932:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d61784d61726b65746f724e6f20636f6e6e6f7420696e637265617365",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "980:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2efb00e88e14b60402ca221d3666fba912fa798cbe5a79f9f56df3fe3d2dc531",
																"typeString": "literal_string \"maxMarketorNo connot increase\""
															},
															"value": "maxMarketorNo connot increase"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2efb00e88e14b60402ca221d3666fba912fa798cbe5a79f9f56df3fe3d2dc531",
																"typeString": "literal_string \"maxMarketorNo connot increase\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "911:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "911:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "911:110:0"
											},
											{
												"expression": {
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 64,
														"name": "maxMarketorNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1031:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1048:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1031:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1031:18:0"
											},
											{
												"expression": {
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 68,
															"name": "MarketorsNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1059:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
																"typeString": "mapping(address => uint128)"
															}
														},
														"id": 70,
														"indexExpression": {
															"id": 69,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "1071:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1059:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 71,
														"name": "maxMarketorNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1081:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "1059:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "1059:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 75,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "1138:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "e_setMarketorByMarketCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "1109:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1109:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "EmitStatement",
												"src": "1104:41:0"
											}
										]
									},
									"functionSelector": "5bffec62",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyMarketCreator",
												"nameLocations": [
													"849:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "849:17:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "849:17:0"
										}
									],
									"name": "setMarketorByMarketCreator",
									"nameLocation": "774:26:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "840:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "818:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:30:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "867:0:0"
									},
									"scope": 159,
									"src": "765:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										205
									],
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1288:128:0",
										"statements": [
											{
												"expression": {
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1298:24:0",
													"subExpression": {
														"baseExpression": {
															"id": 87,
															"name": "Marketors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "1305:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 89,
														"indexExpression": {
															"id": 88,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1315:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1305:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1298:24:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1332:26:0",
													"subExpression": {
														"baseExpression": {
															"id": 92,
															"name": "MarketorsNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1339:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
																"typeString": "mapping(address => uint128)"
															}
														},
														"id": 94,
														"indexExpression": {
															"id": 93,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1351:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1339:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1332:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1402:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "e_delMarketorByMarketCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "1373:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "1368:41:0"
											}
										]
									},
									"functionSelector": "b4f3824d",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 85,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 84,
												"name": "onlyMarketCreator",
												"nameLocations": [
													"1270:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1270:17:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1270:17:0"
										}
									],
									"name": "delMarketorByMarketCreator",
									"nameLocation": "1195:26:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1261:8:0"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1239:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1231:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:30:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:0:0"
									},
									"scope": 159,
									"src": "1186:230:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										214
									],
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "1527:45:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 108,
														"name": "Marketors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1544:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 111,
													"indexExpression": {
														"expression": {
															"id": 109,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1554:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1558:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1554:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1544:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 107,
												"id": 112,
												"nodeType": "Return",
												"src": "1537:28:0"
											}
										]
									},
									"functionSelector": "ad87d2ba",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidMarketor",
									"nameLocation": "1471:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1503:8:0"
									},
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1486:2:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1521:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 105,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1521:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1520:6:0"
									},
									"scope": 159,
									"src": "1462:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										221
									],
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "1717:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 122,
														"name": "Marketors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1734:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 124,
													"indexExpression": {
														"id": 123,
														"name": "mkaddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "1744:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1734:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 121,
												"id": 125,
												"nodeType": "Return",
												"src": "1727:27:0"
											}
										]
									},
									"functionSelector": "71866520",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidMarketor",
									"nameLocation": "1630:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 118,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1693:8:0"
									},
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "mkaddress",
												"nameLocation": "1663:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1655:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1645:33:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1711:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1711:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:6:0"
									},
									"scope": 159,
									"src": "1621:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "1864:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 132,
														"name": "MarketorsNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1881:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
															"typeString": "mapping(address => uint128)"
														}
													},
													"id": 135,
													"indexExpression": {
														"expression": {
															"id": 133,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1893:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1897:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1893:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1881:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 131,
												"id": 136,
												"nodeType": "Return",
												"src": "1874:30:0"
											}
										]
									},
									"functionSelector": "98ed687b",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketorNo",
									"nameLocation": "1816:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1829:2:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1855:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 129,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1854:9:0"
									},
									"scope": 159,
									"src": "1807:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "2055:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 145,
														"name": "MarketorsNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "2072:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$",
															"typeString": "mapping(address => uint128)"
														}
													},
													"id": 147,
													"indexExpression": {
														"id": 146,
														"name": "_marketorAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2084:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2072:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 144,
												"id": 148,
												"nodeType": "Return",
												"src": "2065:36:0"
											}
										]
									},
									"functionSelector": "f5a0da2e",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketorNo",
									"nameLocation": "1969:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "_marketorAddress",
												"nameLocation": "2000:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1992:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:40:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "2046:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 142,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:9:0"
									},
									"scope": 159,
									"src": "1960:148:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "2205:37:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"name": "maxMarketorNo",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "2222:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 154,
												"id": 156,
												"nodeType": "Return",
												"src": "2215:20:0"
											}
										]
									},
									"functionSelector": "ace4bf59",
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxMarketorNo",
									"nameLocation": "2154:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2170:2:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2196:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 152,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:9:0"
									},
									"scope": 159,
									"src": "2145:97:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 160,
							"src": "116:2128:0",
							"usedErrors": []
						}
					],
					"src": "45:2200:0"
				},
				"id": 0
			},
			"Contracts/interfaces/ITTSwapV1Marketor.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/ITTSwapV1Marketor.sol",
					"exportedSymbols": {
						"IMarketorV1Events": [
							187
						],
						"IMarketorV1Immutables": [
							191
						],
						"IMarketorV1MarketCreatorActions": [
							206
						],
						"IMarketorV1State": [
							222
						],
						"ITTSwapV1Marketor": [
							175
						]
					},
					"id": 176,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 161,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:1"
						},
						{
							"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1Events.sol",
							"file": "./Marketor/IMarketorV1Events.sol",
							"id": 162,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 188,
							"src": "70:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1Immutables.sol",
							"file": "./Marketor/IMarketorV1Immutables.sol",
							"id": 163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 192,
							"src": "113:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol",
							"file": "./Marketor/IMarketorV1MarketCreatorActions.sol",
							"id": 164,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 207,
							"src": "160:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1State.sol",
							"file": "./Marketor/IMarketorV1State.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 223,
							"src": "217:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 167,
										"name": "IMarketorV1Events",
										"nameLocations": [
											"560:17:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 187,
										"src": "560:17:1"
									},
									"id": 168,
									"nodeType": "InheritanceSpecifier",
									"src": "560:17:1"
								},
								{
									"baseName": {
										"id": 169,
										"name": "IMarketorV1Immutables",
										"nameLocations": [
											"583:21:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 191,
										"src": "583:21:1"
									},
									"id": 170,
									"nodeType": "InheritanceSpecifier",
									"src": "583:21:1"
								},
								{
									"baseName": {
										"id": 171,
										"name": "IMarketorV1MarketCreatorActions",
										"nameLocations": [
											"610:31:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 206,
										"src": "610:31:1"
									},
									"id": 172,
									"nodeType": "InheritanceSpecifier",
									"src": "610:31:1"
								},
								{
									"baseName": {
										"id": 173,
										"name": "IMarketorV1State",
										"nameLocations": [
											"647:16:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 222,
										"src": "647:16:1"
									},
									"id": 174,
									"nodeType": "InheritanceSpecifier",
									"src": "647:16:1"
								}
							],
							"canonicalName": "ITTSwapV1Marketor",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 166,
								"nodeType": "StructuredDocumentation",
								"src": "260:265:1",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								222,
								206,
								191,
								187
							],
							"name": "ITTSwapV1Marketor",
							"nameLocation": "535:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 176,
							"src": "525:143:1",
							"usedErrors": []
						}
					],
					"src": "45:624:1"
				},
				"id": 1
			},
			"Contracts/interfaces/Marketor/IMarketorV1Events.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1Events.sol",
					"exportedSymbols": {
						"IMarketorV1Events": [
							187
						]
					},
					"id": 188,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMarketorV1Events",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 178,
								"nodeType": "StructuredDocumentation",
								"src": "70:88:2",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 187,
							"linearizedBaseContracts": [
								187
							],
							"name": "IMarketorV1Events",
							"nameLocation": "168:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "963cda38749d0d4f4c8845d1f2efc567406beb5d94fd4e2c868ce59bc594c280",
									"id": 182,
									"name": "e_setMarketorByMarketCreator",
									"nameLocation": "198:28:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "227:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "226:9:2"
									},
									"src": "192:44:2"
								},
								{
									"anonymous": false,
									"eventSelector": "0e30dde20bbc2e559ffb88627aaecc60544e541c11bce995480af5f8e3da8b7e",
									"id": 186,
									"name": "e_delMarketorByMarketCreator",
									"nameLocation": "247:28:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "276:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:9:2"
									},
									"src": "241:44:2"
								}
							],
							"scope": 188,
							"src": "158:129:2",
							"usedErrors": []
						}
					],
					"src": "45:243:2"
				},
				"id": 2
			},
			"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1Immutables.sol",
					"exportedSymbols": {
						"IMarketorV1Immutables": [
							191
						]
					},
					"id": 192,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMarketorV1Immutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "70:153:3",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": true,
							"id": 191,
							"linearizedBaseContracts": [
								191
							],
							"name": "IMarketorV1Immutables",
							"nameLocation": "233:21:3",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 192,
							"src": "223:36:3",
							"usedErrors": []
						}
					],
					"src": "45:215:3"
				},
				"id": 3
			},
			"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol",
					"exportedSymbols": {
						"IMarketorV1MarketCreatorActions": [
							206
						]
					},
					"id": 207,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMarketorV1MarketCreatorActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 194,
								"nodeType": "StructuredDocumentation",
								"src": "70:116:4",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 206,
							"linearizedBaseContracts": [
								206
							],
							"name": "IMarketorV1MarketCreatorActions",
							"nameLocation": "196:31:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "5bffec62",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketorByMarketCreator",
									"nameLocation": "243:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "278:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "270:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "269:16:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:0:4"
									},
									"scope": 206,
									"src": "234:61:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "301:103:4",
										"text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
									},
									"functionSelector": "b4f3824d",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delMarketorByMarketCreator",
									"nameLocation": "418:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "453:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "445:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:16:4"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:0:4"
									},
									"scope": 206,
									"src": "409:61:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 207,
							"src": "186:286:4",
							"usedErrors": []
						}
					],
					"src": "45:428:4"
				},
				"id": 4
			},
			"Contracts/interfaces/Marketor/IMarketorV1State.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1State.sol",
					"exportedSymbols": {
						"IMarketorV1State": [
							222
						]
					},
					"id": 223,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 208,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMarketorV1State",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 209,
								"nodeType": "StructuredDocumentation",
								"src": "70:169:5",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 222,
							"linearizedBaseContracts": [
								222
							],
							"name": "IMarketorV1State",
							"nameLocation": "249:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ad87d2ba",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidMarketor",
									"nameLocation": "281:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:2:5"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "322:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "322:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:6:5"
									},
									"scope": 222,
									"src": "272:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "71866520",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidMarketor",
									"nameLocation": "343:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "359:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:9:5"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:6:5"
									},
									"scope": 222,
									"src": "334:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 223,
							"src": "239:160:5",
							"usedErrors": []
						}
					],
					"src": "45:355:5"
				},
				"id": 5
			}
		}
	}
}