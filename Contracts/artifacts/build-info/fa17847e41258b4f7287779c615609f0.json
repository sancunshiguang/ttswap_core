{
	"id": "fa17847e41258b4f7287779c615609f0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/MoonV1Manager.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\ncontract MoonV1Manager {\n    //市场管理员\n    //marketManagers\n    mapping(address => bool) public marketManagers;\n\n    address public marketCreator;\n\n    constructor(address _marketCreator) {\n        marketCreator = _marketCreator;\n    }\n\n    modifier onlyMarketCreator() {\n        require(msg.sender == marketCreator);\n        _;\n    }\n\n    /// @notice Explain to an end user what this does\n    /// @dev Explain to a developer any extra details\n    modifier onlyMarketManager() {\n        require(marketManagers[msg.sender] == true);\n        _;\n    }\n\n    /// @notice Explain to an end user what this does\n    /// @dev Explain to a developer any extra details\n\n    /// @notice Explain to an end user what this does\n    /// @dev Explain to a developer any extra details\n    function setMarketManager(address _owner) external onlyMarketCreator {\n        marketManagers[_owner] = true;\n    }\n\n    /// @notice Explain to an end user what this does\n    /// @dev Explain to a developer any extra details\n    function delMarketManager(address _owner) external onlyMarketCreator {\n        delete marketManagers[_owner];\n    }\n\n    /// @notice Explain to an end user what this does\n    /// @dev Explain to a developer any extra details\n    function ismarketManager() external view returns (bool) {\n        return marketManagers[msg.sender];\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Contracts/MoonV1Manager.sol": {
				"MoonV1Manager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_marketCreator",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "delMarketManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ismarketManager",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketCreator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "marketManagers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setMarketManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"delMarketManager(address)": {
								"details": "Explain to a developer any extra details"
							},
							"ismarketManager()": {
								"details": "Explain to a developer any extra details"
							},
							"setMarketManager(address)": {
								"details": "Explain to a developer any extra details"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/MoonV1Manager.sol\":70:1415  contract MoonV1Manager {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/MoonV1Manager.sol\":230:313  constructor(address _marketCreator) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Contracts/MoonV1Manager.sol\":292:306  _marketCreator */\n  dup1\n    /* \"Contracts/MoonV1Manager.sol\":276:289  marketCreator */\n  0x01\n  0x00\n    /* \"Contracts/MoonV1Manager.sol\":276:306  marketCreator = _marketCreator */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contracts/MoonV1Manager.sol\":230:313  constructor(address _marketCreator) {... */\n  pop\n    /* \"Contracts/MoonV1Manager.sol\":70:1415  contract MoonV1Manager {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_29:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"Contracts/MoonV1Manager.sol\":70:1415  contract MoonV1Manager {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/MoonV1Manager.sol\":70:1415  contract MoonV1Manager {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1487f252\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x27cbaabe\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2b890543\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x753c5188\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd82aff11\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/MoonV1Manager.sol\":1307:1413  function ismarketManager() external view returns (bool) {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/MoonV1Manager.sol\":195:223  address public marketCreator */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/MoonV1Manager.sol\":1078:1193  function delMarketManager(address _owner) external onlyMarketCreator {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"Contracts/MoonV1Manager.sol\":142:188  mapping(address => bool) public marketManagers */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/MoonV1Manager.sol\":849:964  function setMarketManager(address _owner) external onlyMarketCreator {... */\n    tag_7:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      stop\n        /* \"Contracts/MoonV1Manager.sol\":1307:1413  function ismarketManager() external view returns (bool) {... */\n    tag_9:\n        /* \"Contracts/MoonV1Manager.sol\":1357:1361  bool */\n      0x00\n        /* \"Contracts/MoonV1Manager.sol\":1380:1394  marketManagers */\n      dup1\n        /* \"Contracts/MoonV1Manager.sol\":1380:1406  marketManagers[msg.sender] */\n      0x00\n        /* \"Contracts/MoonV1Manager.sol\":1395:1405  msg.sender */\n      caller\n        /* \"Contracts/MoonV1Manager.sol\":1380:1406  marketManagers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Contracts/MoonV1Manager.sol\":1373:1406  return marketManagers[msg.sender] */\n      swap1\n      pop\n        /* \"Contracts/MoonV1Manager.sol\":1307:1413  function ismarketManager() external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Contracts/MoonV1Manager.sol\":195:223  address public marketCreator */\n    tag_13:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Contracts/MoonV1Manager.sol\":1078:1193  function delMarketManager(address _owner) external onlyMarketCreator {... */\n    tag_19:\n        /* \"Contracts/MoonV1Manager.sol\":380:393  marketCreator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/MoonV1Manager.sol\":366:393  msg.sender == marketCreator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/MoonV1Manager.sol\":366:376  msg.sender */\n      caller\n        /* \"Contracts/MoonV1Manager.sol\":366:393  msg.sender == marketCreator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/MoonV1Manager.sol\":358:394  require(msg.sender == marketCreator) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"Contracts/MoonV1Manager.sol\":1164:1178  marketManagers */\n      0x00\n        /* \"Contracts/MoonV1Manager.sol\":1164:1186  marketManagers[_owner] */\n      dup1\n        /* \"Contracts/MoonV1Manager.sol\":1179:1185  _owner */\n      dup3\n        /* \"Contracts/MoonV1Manager.sol\":1164:1186  marketManagers[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Contracts/MoonV1Manager.sol\":1157:1186  delete marketManagers[_owner] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"Contracts/MoonV1Manager.sol\":1078:1193  function delMarketManager(address _owner) external onlyMarketCreator {... */\n      pop\n      jump\t// out\n        /* \"Contracts/MoonV1Manager.sol\":142:188  mapping(address => bool) public marketManagers */\n    tag_22:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Contracts/MoonV1Manager.sol\":849:964  function setMarketManager(address _owner) external onlyMarketCreator {... */\n    tag_26:\n        /* \"Contracts/MoonV1Manager.sol\":380:393  marketCreator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/MoonV1Manager.sol\":366:393  msg.sender == marketCreator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/MoonV1Manager.sol\":366:376  msg.sender */\n      caller\n        /* \"Contracts/MoonV1Manager.sol\":366:393  msg.sender == marketCreator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/MoonV1Manager.sol\":358:394  require(msg.sender == marketCreator) */\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n        /* \"Contracts/MoonV1Manager.sol\":953:957  true */\n      0x01\n        /* \"Contracts/MoonV1Manager.sol\":928:942  marketManagers */\n      0x00\n        /* \"Contracts/MoonV1Manager.sol\":928:950  marketManagers[_owner] */\n      dup1\n        /* \"Contracts/MoonV1Manager.sol\":943:949  _owner */\n      dup4\n        /* \"Contracts/MoonV1Manager.sol\":928:950  marketManagers[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Contracts/MoonV1Manager.sol\":928:957  marketManagers[_owner] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/MoonV1Manager.sol\":849:964  function setMarketManager(address _owner) external onlyMarketCreator {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_35:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_37\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_18:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":228:347   */\n    tag_40:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_43\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_35\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_44:\n        /* \"#utility.yul\":574:598   */\n      tag_46\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:720   */\n    tag_48:\n        /* \"#utility.yul\":692:713   */\n      tag_50\n        /* \"#utility.yul\":707:712   */\n      dup2\n        /* \"#utility.yul\":692:713   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":687:690   */\n      dup3\n        /* \"#utility.yul\":680:714   */\n      mstore\n        /* \"#utility.yul\":611:720   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":726:948   */\n    tag_15:\n        /* \"#utility.yul\":819:823   */\n      0x00\n        /* \"#utility.yul\":857:859   */\n      0x20\n        /* \"#utility.yul\":846:855   */\n      dup3\n        /* \"#utility.yul\":842:860   */\n      add\n        /* \"#utility.yul\":834:860   */\n      swap1\n      pop\n        /* \"#utility.yul\":870:941   */\n      tag_53\n        /* \"#utility.yul\":938:939   */\n      0x00\n        /* \"#utility.yul\":927:936   */\n      dup4\n        /* \"#utility.yul\":923:940   */\n      add\n        /* \"#utility.yul\":914:920   */\n      dup5\n        /* \"#utility.yul\":870:941   */\n      tag_44\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":726:948   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":954:1164   */\n    tag_11:\n        /* \"#utility.yul\":1041:1045   */\n      0x00\n        /* \"#utility.yul\":1079:1081   */\n      0x20\n        /* \"#utility.yul\":1068:1077   */\n      dup3\n        /* \"#utility.yul\":1064:1082   */\n      add\n        /* \"#utility.yul\":1056:1082   */\n      swap1\n      pop\n        /* \"#utility.yul\":1092:1157   */\n      tag_55\n        /* \"#utility.yul\":1154:1155   */\n      0x00\n        /* \"#utility.yul\":1143:1152   */\n      dup4\n        /* \"#utility.yul\":1139:1156   */\n      add\n        /* \"#utility.yul\":1130:1136   */\n      dup5\n        /* \"#utility.yul\":1092:1157   */\n      tag_48\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":954:1164   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1251:1347   */\n    tag_47:\n        /* \"#utility.yul\":1288:1295   */\n      0x00\n        /* \"#utility.yul\":1317:1341   */\n      tag_59\n        /* \"#utility.yul\":1335:1340   */\n      dup3\n        /* \"#utility.yul\":1317:1341   */\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1306:1341   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1353:1443   */\n    tag_51:\n        /* \"#utility.yul\":1387:1394   */\n      0x00\n        /* \"#utility.yul\":1430:1435   */\n      dup2\n        /* \"#utility.yul\":1423:1436   */\n      iszero\n        /* \"#utility.yul\":1416:1437   */\n      iszero\n        /* \"#utility.yul\":1405:1437   */\n      swap1\n      pop\n        /* \"#utility.yul\":1353:1443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1449:1575   */\n    tag_60:\n        /* \"#utility.yul\":1486:1493   */\n      0x00\n        /* \"#utility.yul\":1526:1568   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1519:1524   */\n      dup3\n        /* \"#utility.yul\":1515:1569   */\n      and\n        /* \"#utility.yul\":1504:1569   */\n      swap1\n      pop\n        /* \"#utility.yul\":1449:1575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1704:1821   */\n    tag_42:\n        /* \"#utility.yul\":1813:1814   */\n      0x00\n        /* \"#utility.yul\":1810:1811   */\n      dup1\n        /* \"#utility.yul\":1803:1815   */\n      revert\n        /* \"#utility.yul\":1827:1949   */\n    tag_38:\n        /* \"#utility.yul\":1900:1924   */\n      tag_67\n        /* \"#utility.yul\":1918:1923   */\n      dup2\n        /* \"#utility.yul\":1900:1924   */\n      tag_47\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1893:1898   */\n      dup2\n        /* \"#utility.yul\":1890:1925   */\n      eq\n        /* \"#utility.yul\":1880:1943   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1936:1937   */\n      dup1\n        /* \"#utility.yul\":1929:1941   */\n      revert\n        /* \"#utility.yul\":1880:1943   */\n    tag_68:\n        /* \"#utility.yul\":1827:1949   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122020f12f215fc6636ef1fe599ec2aa095957f1ad0427ac47b8e1c67b15122932d664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:1",
														"type": ""
													}
												],
												"src": "513:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:1",
														"type": ""
													}
												],
												"src": "594:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:1",
														"type": ""
													}
												],
												"src": "696:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:1"
															},
															"nodeType": "YulIf",
															"src": "1127:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:1",
														"type": ""
													}
												],
												"src": "1074:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516105363803806105368339818101604052810190610032919061008e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600081519050610088816100f2565b92915050565b6000602082840312156100a4576100a36100ed565b5b60006100b284828501610079565b91505092915050565b60006100c6826100cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fb816100bb565b811461010657600080fd5b50565b61041e806101186000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631487f2521461005c57806327cbaabe1461007a5780632b89054314610098578063753c5188146100b4578063d82aff11146100e4575b600080fd5b610064610100565b6040516100719190610373565b60405180910390f35b610082610153565b60405161008f9190610358565b60405180910390f35b6100b260048036038101906100ad919061030d565b610179565b005b6100ce60048036038101906100c9919061030d565b610224565b6040516100db9190610373565b60405180910390f35b6100fe60048036038101906100f9919061030d565b610244565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d357600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905550565b60006020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029e57600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600081359050610307816103d1565b92915050565b600060208284031215610323576103226103cc565b5b6000610331848285016102f8565b91505092915050565b6103438161038e565b82525050565b610352816103a0565b82525050565b600060208201905061036d600083018461033a565b92915050565b60006020820190506103886000830184610349565b92915050565b6000610399826103ac565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6103da8161038e565b81146103e557600080fd5b5056fea264697066735822122020f12f215fc6636ef1fe599ec2aa095957f1ad0427ac47b8e1c67b15122932d664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x536 CODESIZE SUB DUP1 PUSH2 0x536 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x88 DUP2 PUSH2 0xF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4 JUMPI PUSH2 0xA3 PUSH2 0xED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB2 DUP5 DUP3 DUP6 ADD PUSH2 0x79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6 DUP3 PUSH2 0xCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB DUP2 PUSH2 0xBB JUMP JUMPDEST DUP2 EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x41E DUP1 PUSH2 0x118 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1487F252 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x27CBAABE EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x2B890543 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x753C5188 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xD82AFF11 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x179 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x307 DUP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x323 JUMPI PUSH2 0x322 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x331 DUP5 DUP3 DUP6 ADD PUSH2 0x2F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x38E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x352 DUP2 PUSH2 0x3A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x388 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x349 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399 DUP3 PUSH2 0x3AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DA DUP2 PUSH2 0x38E JUMP JUMPDEST DUP2 EQ PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 CALL 0x2F 0x21 0x5F 0xC6 PUSH4 0x6EF1FE59 SWAP15 0xC2 0xAA MULMOD MSIZE JUMPI CALL 0xAD DIV 0x27 0xAC SELFBALANCE 0xB8 0xE1 0xC6 PUSH28 0x15122932D664736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "70:1345:0:-:0;;;230:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;292:14;276:13;;:30;;;;;;;;;;;;;;;;;;230:83;70:1345;;7:143:1;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;70:1345:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@delMarketManager_71": {
									"entryPoint": 377,
									"id": 71,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ismarketManager_83": {
									"entryPoint": 256,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@marketCreator_7": {
									"entryPoint": 339,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketManagers_5": {
									"entryPoint": 548,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMarketManager_57": {
									"entryPoint": 580,
									"id": 57,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1952:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:1",
														"type": ""
													}
												],
												"src": "487:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "670:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "687:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "707:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "692:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "692:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "680:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "680:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "658:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "665:3:1",
														"type": ""
													}
												],
												"src": "611:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "824:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "834:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "846:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "842:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "842:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "834:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "914:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "938:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "923:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "870:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "870:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "796:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "808:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "819:4:1",
														"type": ""
													}
												],
												"src": "726:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1056:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1068:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1079:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1064:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1056:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1130:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1143:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1139:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1092:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1092:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1018:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1030:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1041:4:1",
														"type": ""
													}
												],
												"src": "954:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1210:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1220:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1236:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1230:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1220:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1203:6:1",
														"type": ""
													}
												],
												"src": "1170:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1296:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1306:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1335:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1317:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1306:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1278:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1288:7:1",
														"type": ""
													}
												],
												"src": "1251:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1395:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1405:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1430:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1423:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1423:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1416:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1405:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1377:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1387:7:1",
														"type": ""
													}
												],
												"src": "1353:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1494:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1504:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1519:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1526:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1515:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1515:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1504:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1476:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1486:7:1",
														"type": ""
													}
												],
												"src": "1449:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1670:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1680:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1680:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1581:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1793:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1810:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1813:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1803:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1803:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1704:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1870:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1893:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1918:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1900:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1900:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1890:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1890:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1883:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1883:43:1"
															},
															"nodeType": "YulIf",
															"src": "1880:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1863:5:1",
														"type": ""
													}
												],
												"src": "1827:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80631487f2521461005c57806327cbaabe1461007a5780632b89054314610098578063753c5188146100b4578063d82aff11146100e4575b600080fd5b610064610100565b6040516100719190610373565b60405180910390f35b610082610153565b60405161008f9190610358565b60405180910390f35b6100b260048036038101906100ad919061030d565b610179565b005b6100ce60048036038101906100c9919061030d565b610224565b6040516100db9190610373565b60405180910390f35b6100fe60048036038101906100f9919061030d565b610244565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d357600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905550565b60006020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029e57600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600081359050610307816103d1565b92915050565b600060208284031215610323576103226103cc565b5b6000610331848285016102f8565b91505092915050565b6103438161038e565b82525050565b610352816103a0565b82525050565b600060208201905061036d600083018461033a565b92915050565b60006020820190506103886000830184610349565b92915050565b6000610399826103ac565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6103da8161038e565b81146103e557600080fd5b5056fea264697066735822122020f12f215fc6636ef1fe599ec2aa095957f1ad0427ac47b8e1c67b15122932d664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1487F252 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x27CBAABE EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x2B890543 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x753C5188 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xD82AFF11 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x179 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x307 DUP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x323 JUMPI PUSH2 0x322 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x331 DUP5 DUP3 DUP6 ADD PUSH2 0x2F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x38E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x352 DUP2 PUSH2 0x3A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x388 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x349 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399 DUP3 PUSH2 0x3AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DA DUP2 PUSH2 0x38E JUMP JUMPDEST DUP2 EQ PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 CALL 0x2F 0x21 0x5F 0xC6 PUSH4 0x6EF1FE59 SWAP15 0xC2 0xAA MULMOD MSIZE JUMPI CALL 0xAD DIV 0x27 0xAC SELFBALANCE 0xB8 0xE1 0xC6 PUSH28 0x15122932D664736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "70:1345:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1307:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;195:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1078:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;142:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;849:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1307:106;1357:4;1380:14;:26;1395:10;1380:26;;;;;;;;;;;;;;;;;;;;;;;;;1373:33;;1307:106;:::o;195:28::-;;;;;;;;;;;;;:::o;1078:115::-;380:13;;;;;;;;;;;366:27;;:10;:27;;;358:36;;;;;;1164:14:::1;:22:::0;1179:6:::1;1164:22;;;;;;;;;;;;;;;;1157:29;;;;;;;;;;;1078:115:::0;:::o;142:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;849:115::-;380:13;;;;;;;;;;;366:27;;:10;:27;;;358:36;;;;;;953:4:::1;928:14;:22:::0;943:6:::1;928:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;849:115:::0;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:109::-;692:21;707:5;692:21;:::i;:::-;687:3;680:34;611:109;;:::o;726:222::-;819:4;857:2;846:9;842:18;834:26;;870:71;938:1;927:9;923:17;914:6;870:71;:::i;:::-;726:222;;;;:::o;954:210::-;1041:4;1079:2;1068:9;1064:18;1056:26;;1092:65;1154:1;1143:9;1139:17;1130:6;1092:65;:::i;:::-;954:210;;;;:::o;1251:96::-;1288:7;1317:24;1335:5;1317:24;:::i;:::-;1306:35;;1251:96;;;:::o;1353:90::-;1387:7;1430:5;1423:13;1416:21;1405:32;;1353:90;;;:::o;1449:126::-;1486:7;1526:42;1519:5;1515:54;1504:65;;1449:126;;;:::o;1704:117::-;1813:1;1810;1803:12;1827:122;1900:24;1918:5;1900:24;:::i;:::-;1893:5;1890:35;1880:63;;1939:1;1936;1929:12;1880:63;1827:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "210800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"delMarketManager(address)": "26979",
								"ismarketManager()": "2546",
								"marketCreator()": "2514",
								"marketManagers(address)": "2889",
								"setMarketManager(address)": "27048"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70,
									"end": 1415,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 70,
									"end": 1415,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70,
									"end": 1415,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 230,
									"end": 313,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 230,
									"end": 313,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 230,
									"end": 313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 230,
									"end": 313,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 230,
									"end": 313,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 230,
									"end": 313,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 230,
									"end": 313,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 230,
									"end": 313,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 230,
									"end": 313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 292,
									"end": 306,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 276,
									"end": 289,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 289,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 306,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 276,
									"end": 306,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 276,
									"end": 306,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 276,
									"end": 306,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 276,
									"end": 306,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 230,
									"end": 313,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 70,
									"end": 1415,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 70,
									"end": 1415,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 70,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70,
									"end": 1415,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 1415,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 1415,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 1415,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 1415,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 70,
									"end": 1415,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 1415,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020f12f215fc6636ef1fe599ec2aa095957f1ad0427ac47b8e1c67b15122932d664736f6c63430008070033",
									".code": [
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "1487F252"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "27CBAABE"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "2B890543"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "753C5188"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "D82AFF11"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 1415,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 849,
											"end": 964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 849,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 849,
											"end": 964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 849,
											"end": 964,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 964,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 849,
											"end": 964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 849,
											"end": 964,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 964,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 849,
											"end": 964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1405,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1413,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 195,
											"end": 223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 195,
											"end": 223,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 380,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 380,
											"end": 393,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 380,
											"end": 393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 366,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 366,
											"end": 393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 366,
											"end": 376,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 366,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 366,
											"end": 393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 366,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 358,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 358,
											"end": 394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 358,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 358,
											"end": 394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 358,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 358,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1157,
											"end": 1186,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1186,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1157,
											"end": 1186,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1186,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1186,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1193,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 142,
											"end": 188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 142,
											"end": 188,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 849,
											"end": 964,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 849,
											"end": 964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 380,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 380,
											"end": 393,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 380,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 380,
											"end": 393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 366,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 366,
											"end": 393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 366,
											"end": 376,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 366,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 366,
											"end": 393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 366,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 358,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 358,
											"end": 394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 358,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 358,
											"end": 394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 358,
											"end": 394,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 358,
											"end": 394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 953,
											"end": 957,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 928,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 928,
											"end": 950,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 928,
											"end": 950,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 928,
											"end": 950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 928,
											"end": 950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 928,
											"end": 950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 928,
											"end": 950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 928,
											"end": 950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 928,
											"end": 950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 928,
											"end": 950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 928,
											"end": 950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 928,
											"end": 950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 928,
											"end": 950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 950,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 928,
											"end": 950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 957,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 928,
											"end": 957,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 928,
											"end": 957,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 928,
											"end": 957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 964,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 720,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 611,
											"end": 720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 692,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 707,
											"end": 712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 692,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 687,
											"end": 690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 680,
											"end": 714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 611,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 720,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 948,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 726,
											"end": 948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 819,
											"end": 823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 842,
											"end": 860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 834,
											"end": 860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 834,
											"end": 860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 870,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 938,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 923,
											"end": 940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 920,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 870,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 870,
											"end": 941,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 870,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 726,
											"end": 948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 726,
											"end": 948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 726,
											"end": 948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 726,
											"end": 948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 726,
											"end": 948,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1154,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1152,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1092,
											"end": 1157,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1092,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1092,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1251,
											"end": 1347,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1251,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1335,
											"end": 1340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1317,
											"end": 1341,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1317,
											"end": 1341,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1317,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1347,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1353,
											"end": 1443,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1353,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1437,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1443,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1449,
											"end": 1575,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1449,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1575,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1704,
											"end": 1821,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1704,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1827,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1925,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1949,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"delMarketManager(address)": "2b890543",
							"ismarketManager()": "1487f252",
							"marketCreator()": "27cbaabe",
							"marketManagers(address)": "753c5188",
							"setMarketManager(address)": "d82aff11"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketCreator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ismarketManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketManagers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"delMarketManager(address)\":{\"details\":\"Explain to a developer any extra details\"},\"ismarketManager()\":{\"details\":\"Explain to a developer any extra details\"},\"setMarketManager(address)\":{\"details\":\"Explain to a developer any extra details\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delMarketManager(address)\":{\"notice\":\"Explain to an end user what this does\"},\"ismarketManager()\":{\"notice\":\"Explain to an end user what this does\"},\"setMarketManager(address)\":{\"notice\":\"Explain to an end user what this does\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/MoonV1Manager.sol\":\"MoonV1Manager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/MoonV1Manager.sol\":{\"keccak256\":\"0xc9d596ec3577394170e99c07a1b4a261a4e88c385425e7c881fabb1783798609\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77caa39a103780c5eea6009a0acbdc4c1a1a2e668e4508eaf28e04825787fd34\",\"dweb:/ipfs/QmV7Ap9wqbPAiBpz7WTHFUdSLDDm1RPeHMggxHD6ppoKcD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "Contracts/MoonV1Manager.sol:MoonV1Manager",
								"label": "marketManagers",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 7,
								"contract": "Contracts/MoonV1Manager.sol:MoonV1Manager",
								"label": "marketCreator",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"delMarketManager(address)": {
								"notice": "Explain to an end user what this does"
							},
							"ismarketManager()": {
								"notice": "Explain to an end user what this does"
							},
							"setMarketManager(address)": {
								"notice": "Explain to an end user what this does"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Contracts/MoonV1Manager.sol": {
				"ast": {
					"absolutePath": "Contracts/MoonV1Manager.sol",
					"exportedSymbols": {
						"MoonV1Manager": [
							84
						]
					},
					"id": 85,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 84,
							"linearizedBaseContracts": [
								84
							],
							"name": "MoonV1Manager",
							"nameLocation": "79:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "753c5188",
									"id": 5,
									"mutability": "mutable",
									"name": "marketManagers",
									"nameLocation": "174:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 84,
									"src": "142:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "150:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "142:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 3,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "161:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27cbaabe",
									"id": 7,
									"mutability": "mutable",
									"name": "marketCreator",
									"nameLocation": "210:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 84,
									"src": "195:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "195:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "266:47:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "marketCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "276:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 13,
														"name": "_marketCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "292:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "276:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "276:30:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "_marketCreator",
												"nameLocation": "250:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "242:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "241:24:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:0:0"
									},
									"scope": 84,
									"src": "230:83:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "348:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 20,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "366:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "366:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 22,
																"name": "marketCreator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "380:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "366:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "358:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "358:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "358:36:0"
											},
											{
												"id": 26,
												"nodeType": "PlaceholderStatement",
												"src": "404:1:0"
											}
										]
									},
									"id": 28,
									"name": "onlyMarketCreator",
									"nameLocation": "328:17:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:2:0"
									},
									"src": "319:93:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "555:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 32,
																	"name": "marketManagers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "573:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 35,
																"indexExpression": {
																	"expression": {
																		"id": 33,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "588:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 34,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "588:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "573:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "603:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "573:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "565:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "565:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "565:43:0"
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "618:1:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "418:103:0",
										"text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
									},
									"id": 42,
									"name": "onlyMarketManager",
									"nameLocation": "535:17:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "552:2:0"
									},
									"src": "526:100:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "918:46:0",
										"statements": [
											{
												"expression": {
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 50,
															"name": "marketManagers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "928:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 52,
														"indexExpression": {
															"id": 51,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "943:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "928:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "953:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "928:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "928:29:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "741:103:0",
										"text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
									},
									"functionSelector": "d82aff11",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 48,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 47,
												"name": "onlyMarketCreator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "900:17:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "900:17:0"
										}
									],
									"name": "setMarketManager",
									"nameLocation": "858:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "883:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "875:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:16:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:0:0"
									},
									"scope": 84,
									"src": "849:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1147:46:0",
										"statements": [
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1157:29:0",
													"subExpression": {
														"baseExpression": {
															"id": 65,
															"name": "marketManagers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1164:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 67,
														"indexExpression": {
															"id": 66,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "1179:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1164:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "1157:29:0"
											}
										]
									},
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "970:103:0",
										"text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
									},
									"functionSelector": "2b890543",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 63,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 62,
												"name": "onlyMarketCreator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "1129:17:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1129:17:0"
										}
									],
									"name": "delMarketManager",
									"nameLocation": "1087:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1112:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1104:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:16:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1147:0:0"
									},
									"scope": 84,
									"src": "1078:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1363:50:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 77,
														"name": "marketManagers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1380:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 80,
													"indexExpression": {
														"expression": {
															"id": 78,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1395:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1395:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1380:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 76,
												"id": 81,
												"nodeType": "Return",
												"src": "1373:33:0"
											}
										]
									},
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1199:103:0",
										"text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
									},
									"functionSelector": "1487f252",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ismarketManager",
									"nameLocation": "1316:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1331:2:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1357:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 74,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1356:6:0"
									},
									"scope": 84,
									"src": "1307:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 85,
							"src": "70:1345:0",
							"usedErrors": []
						}
					],
					"src": "45:1371:0"
				},
				"id": 0
			}
		}
	}
}