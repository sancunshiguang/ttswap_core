{
	"id": "fa49127afd84876578d958d5afa166e8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/TTSwapV1Marketor.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\nimport \"./interfaces/ITTSwapV1Marketor.sol\";\n\ncontract TTSwapV1Marketor is ITTSwapV1Marketor {\n    //市场管理员\n    //marketMarketors\n    mapping(address => bool) public Marketors;\n\n    address public marketCreator;\n\n    constructor(address _marketCreator) {\n        marketCreator = _marketCreator;\n    }\n\n    modifier onlyMarketCreator() {\n        require(msg.sender == marketCreator);\n        _;\n    }\n\n    /// @notice Explain to an end user what this does\n    /// @dev Explain to a developer any extra details\n    function setMarketorByMarketCreator(\n        address _owner\n    ) external override onlyMarketCreator {\n        Marketors[_owner] = true;\n    }\n\n    /// @notice Explain to an end user what this does\n    /// @dev Explain to a developer any extra details\n    function delMarketorByMarketCreator(\n        address _owner\n    ) external override onlyMarketCreator {\n        delete Marketors[_owner];\n    }\n\n    /// @notice Explain to an end user what this does\n    /// @dev Explain to a developer any extra details\n    function isValidMarketor() external view override returns (bool) {\n        return Marketors[msg.sender];\n    }\n\n    /// @notice Explain to an end user what this does\n    /// @dev Explain to a developer any extra details\n    function isValidMarketor(\n        address mkaddress\n    ) external view override returns (bool) {\n        return Marketors[mkaddress];\n    }\n}\n"
			},
			"Contracts/interfaces/ITTSwapV1Marketor.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\nimport \"./Marketor/IMarketorV1Events.sol\";\nimport \"./Marketor/IMarketorV1Immutables.sol\";\nimport \"./Marketor/IMarketorV1MarketCreatorActions.sol\";\nimport \"./Marketor/IMarketorV1State.sol\";\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface ITTSwapV1Marketor is\n    IMarketorV1Events,\n    IMarketorV1Immutables,\n    IMarketorV1MarketCreatorActions,\n    IMarketorV1State\n{\n\n}\n"
			},
			"Contracts/interfaces/Marketor/IMarketorV1State.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IMarketorV1State {\n    function isValidMarketor() external view returns (bool);\n\n    function isValidMarketor(address) external view returns (bool);\n}\n"
			},
			"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IMarketorV1MarketCreatorActions {\n    function setMarketorByMarketCreator(address _owner) external;\n\n    /// @notice Explain to an end user what this does\n    /// @dev Explain to a developer any extra details\n    function delMarketorByMarketCreator(address _owner) external;\n}\n"
			},
			"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IMarketorV1Immutables {\n\n}\n"
			},
			"Contracts/interfaces/Marketor/IMarketorV1Events.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IMarketorV1Events {\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Contracts/TTSwapV1Marketor.sol": {
				"TTSwapV1Marketor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_marketCreator",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "Marketors",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "delMarketorByMarketCreator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mkaddress",
									"type": "address"
								}
							],
							"name": "isValidMarketor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isValidMarketor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketCreator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setMarketorByMarketCreator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"delMarketorByMarketCreator(address)": {
								"details": "Explain to a developer any extra details"
							},
							"isValidMarketor()": {
								"details": "Explain to a developer any extra details"
							},
							"isValidMarketor(address)": {
								"details": "Explain to a developer any extra details"
							},
							"setMarketorByMarketCreator(address)": {
								"details": "Explain to a developer any extra details"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/TTSwapV1Marketor.sol\":116:1472  contract TTSwapV1Marketor is ITTSwapV1Marketor {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/TTSwapV1Marketor.sol\":296:379  constructor(address _marketCreator) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Contracts/TTSwapV1Marketor.sol\":358:372  _marketCreator */\n  dup1\n    /* \"Contracts/TTSwapV1Marketor.sol\":342:355  marketCreator */\n  0x01\n  0x00\n    /* \"Contracts/TTSwapV1Marketor.sol\":342:372  marketCreator = _marketCreator */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contracts/TTSwapV1Marketor.sol\":296:379  constructor(address _marketCreator) {... */\n  pop\n    /* \"Contracts/TTSwapV1Marketor.sol\":116:1472  contract TTSwapV1Marketor is ITTSwapV1Marketor {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Contracts/TTSwapV1Marketor.sol\":116:1472  contract TTSwapV1Marketor is ITTSwapV1Marketor {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/TTSwapV1Marketor.sol\":116:1472  contract TTSwapV1Marketor is ITTSwapV1Marketor {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x27cbaabe\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3855cc65\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5bffec62\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x71866520\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xad87d2ba\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb4f3824d\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/TTSwapV1Marketor.sol\":261:289  address public marketCreator */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/TTSwapV1Marketor.sol\":213:254  mapping(address => bool) public Marketors */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/TTSwapV1Marketor.sol\":592:735  function setMarketorByMarketCreator(... */\n    tag_5:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Contracts/TTSwapV1Marketor.sol\":1330:1470  function isValidMarketor(... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/TTSwapV1Marketor.sol\":1106:1216  function isValidMarketor() external view override returns (bool) {... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/TTSwapV1Marketor.sol\":849:992  function delMarketorByMarketCreator(... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Contracts/TTSwapV1Marketor.sol\":261:289  address public marketCreator */\n    tag_10:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Contracts/TTSwapV1Marketor.sol\":213:254  mapping(address => bool) public Marketors */\n    tag_16:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Contracts/TTSwapV1Marketor.sol\":592:735  function setMarketorByMarketCreator(... */\n    tag_21:\n        /* \"Contracts/TTSwapV1Marketor.sol\":446:459  marketCreator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/TTSwapV1Marketor.sol\":432:459  msg.sender == marketCreator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/TTSwapV1Marketor.sol\":432:442  msg.sender */\n      caller\n        /* \"Contracts/TTSwapV1Marketor.sol\":432:459  msg.sender == marketCreator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/TTSwapV1Marketor.sol\":424:460  require(msg.sender == marketCreator) */\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n        /* \"Contracts/TTSwapV1Marketor.sol\":724:728  true */\n      0x01\n        /* \"Contracts/TTSwapV1Marketor.sol\":704:713  Marketors */\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":704:721  Marketors[_owner] */\n      dup1\n        /* \"Contracts/TTSwapV1Marketor.sol\":714:720  _owner */\n      dup4\n        /* \"Contracts/TTSwapV1Marketor.sol\":704:721  Marketors[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":704:728  Marketors[_owner] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/TTSwapV1Marketor.sol\":592:735  function setMarketorByMarketCreator(... */\n      pop\n      jump\t// out\n        /* \"Contracts/TTSwapV1Marketor.sol\":1330:1470  function isValidMarketor(... */\n    tag_24:\n        /* \"Contracts/TTSwapV1Marketor.sol\":1420:1424  bool */\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":1443:1452  Marketors */\n      dup1\n        /* \"Contracts/TTSwapV1Marketor.sol\":1443:1463  Marketors[mkaddress] */\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":1453:1462  mkaddress */\n      dup4\n        /* \"Contracts/TTSwapV1Marketor.sol\":1443:1463  Marketors[mkaddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Contracts/TTSwapV1Marketor.sol\":1436:1463  return Marketors[mkaddress] */\n      swap1\n      pop\n        /* \"Contracts/TTSwapV1Marketor.sol\":1330:1470  function isValidMarketor(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Contracts/TTSwapV1Marketor.sol\":1106:1216  function isValidMarketor() external view override returns (bool) {... */\n    tag_27:\n        /* \"Contracts/TTSwapV1Marketor.sol\":1165:1169  bool */\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":1188:1197  Marketors */\n      dup1\n        /* \"Contracts/TTSwapV1Marketor.sol\":1188:1209  Marketors[msg.sender] */\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":1198:1208  msg.sender */\n      caller\n        /* \"Contracts/TTSwapV1Marketor.sol\":1188:1209  Marketors[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Contracts/TTSwapV1Marketor.sol\":1181:1209  return Marketors[msg.sender] */\n      swap1\n      pop\n        /* \"Contracts/TTSwapV1Marketor.sol\":1106:1216  function isValidMarketor() external view override returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Contracts/TTSwapV1Marketor.sol\":849:992  function delMarketorByMarketCreator(... */\n    tag_31:\n        /* \"Contracts/TTSwapV1Marketor.sol\":446:459  marketCreator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/TTSwapV1Marketor.sol\":432:459  msg.sender == marketCreator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/TTSwapV1Marketor.sol\":432:442  msg.sender */\n      caller\n        /* \"Contracts/TTSwapV1Marketor.sol\":432:459  msg.sender == marketCreator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/TTSwapV1Marketor.sol\":424:460  require(msg.sender == marketCreator) */\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n        /* \"Contracts/TTSwapV1Marketor.sol\":968:977  Marketors */\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":968:985  Marketors[_owner] */\n      dup1\n        /* \"Contracts/TTSwapV1Marketor.sol\":978:984  _owner */\n      dup3\n        /* \"Contracts/TTSwapV1Marketor.sol\":968:985  Marketors[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Contracts/TTSwapV1Marketor.sol\":961:985  delete Marketors[_owner] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"Contracts/TTSwapV1Marketor.sol\":849:992  function delMarketorByMarketCreator(... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_40:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_41:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_53\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_40\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_42:\n        /* \"#utility.yul\":328:352   */\n      tag_55\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_41\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_12:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_57\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_42\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_44:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_46:\n        /* \"#utility.yul\":993:1017   */\n      tag_62\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_41\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_63:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_47:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_65\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_46\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_15:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_68\n      tag_44\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1269:1388   */\n    tag_67:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_69\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_47\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1618   */\n    tag_48:\n        /* \"#utility.yul\":1562:1569   */\n      0x00\n        /* \"#utility.yul\":1605:1610   */\n      dup2\n        /* \"#utility.yul\":1598:1611   */\n      iszero\n        /* \"#utility.yul\":1591:1612   */\n      iszero\n        /* \"#utility.yul\":1580:1612   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1624:1733   */\n    tag_49:\n        /* \"#utility.yul\":1705:1726   */\n      tag_72\n        /* \"#utility.yul\":1720:1725   */\n      dup2\n        /* \"#utility.yul\":1705:1726   */\n      tag_48\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1700:1703   */\n      dup3\n        /* \"#utility.yul\":1693:1727   */\n      mstore\n        /* \"#utility.yul\":1624:1733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1949   */\n    tag_18:\n        /* \"#utility.yul\":1826:1830   */\n      0x00\n        /* \"#utility.yul\":1864:1866   */\n      0x20\n        /* \"#utility.yul\":1853:1862   */\n      dup3\n        /* \"#utility.yul\":1849:1867   */\n      add\n        /* \"#utility.yul\":1841:1867   */\n      swap1\n      pop\n        /* \"#utility.yul\":1877:1942   */\n      tag_74\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1877:1942   */\n      tag_49\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1739:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122041b2b00fb09da9096fbb6a3fed052f61a83918d6b136fbb5bdfec4a19471788d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516105c63803806105c6833981810160405281019061003291906100dc565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a98261007e565b9050919050565b6100b98161009e565b81146100c457600080fd5b50565b6000815190506100d6816100b0565b92915050565b6000602082840312156100f2576100f1610079565b5b6000610100848285016100c7565b91505092915050565b6104ae806101186000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806327cbaabe146100675780633855cc65146100855780635bffec62146100b557806371866520146100d1578063ad87d2ba14610101578063b4f3824d1461011f575b600080fd5b61006f61013b565b60405161007c91906103c9565b60405180910390f35b61009f600480360381019061009a9190610415565b610161565b6040516100ac919061045d565b60405180910390f35b6100cf60048036038101906100ca9190610415565b610181565b005b6100eb60048036038101906100e69190610415565b610235565b6040516100f8919061045d565b60405180910390f35b61010961028a565b604051610116919061045d565b60405180910390f35b61013960048036038101906101349190610415565b6102dd565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101db57600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033757600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905550565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103b382610388565b9050919050565b6103c3816103a8565b82525050565b60006020820190506103de60008301846103ba565b92915050565b600080fd5b6103f2816103a8565b81146103fd57600080fd5b50565b60008135905061040f816103e9565b92915050565b60006020828403121561042b5761042a6103e4565b5b600061043984828501610400565b91505092915050565b60008115159050919050565b61045781610442565b82525050565b6000602082019050610472600083018461044e565b9291505056fea264697066735822122041b2b00fb09da9096fbb6a3fed052f61a83918d6b136fbb5bdfec4a19471788d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5C6 CODESIZE SUB DUP1 PUSH2 0x5C6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9 DUP3 PUSH2 0x7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0x9E JUMP JUMPDEST DUP2 EQ PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD6 DUP2 PUSH2 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2 JUMPI PUSH2 0xF1 PUSH2 0x79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP5 DUP3 DUP6 ADD PUSH2 0xC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4AE DUP1 PUSH2 0x118 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27CBAABE EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x3855CC65 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x5BFFEC62 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x71866520 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xAD87D2BA EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xB4F3824D EQ PUSH2 0x11F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 DUP3 PUSH2 0x388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C3 DUP2 PUSH2 0x3A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F2 DUP2 PUSH2 0x3A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x40F DUP2 PUSH2 0x3E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42B JUMPI PUSH2 0x42A PUSH2 0x3E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x439 DUP5 DUP3 DUP6 ADD PUSH2 0x400 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x457 DUP2 PUSH2 0x442 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x472 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xB2 0xB0 0xF 0xB0 SWAP14 0xA9 MULMOD PUSH16 0xBB6A3FED052F61A83918D6B136FBB5BD INVALID 0xC4 LOG1 SWAP5 PUSH18 0x788D64736F6C634300081200330000000000 ",
							"sourceMap": "116:1356:0:-:0;;;296:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;358:14;342:13;;:30;;;;;;;;;;;;;;;;;;296:83;116:1356;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;116:1356:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Marketors_8": {
									"entryPoint": 353,
									"id": 8,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@delMarketorByMarketCreator_62": {
									"entryPoint": 733,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isValidMarketor_75": {
									"entryPoint": 650,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isValidMarketor_89": {
									"entryPoint": 565,
									"id": 89,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@marketCreator_10": {
									"entryPoint": 315,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMarketorByMarketCreator_47": {
									"entryPoint": 385,
									"id": 47,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1952:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:6",
														"type": ""
													}
												],
												"src": "139:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:6",
														"type": ""
													}
												],
												"src": "241:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:6",
														"type": ""
													}
												],
												"src": "365:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:6",
														"type": ""
													}
												],
												"src": "593:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:43:6"
															},
															"nodeType": "YulIf",
															"src": "973:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "956:5:6",
														"type": ""
													}
												],
												"src": "920:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1078:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1086:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1094:5:6",
														"type": ""
													}
												],
												"src": "1048:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1305:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:32:6"
															},
															"nodeType": "YulIf",
															"src": "1269:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1398:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1442:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1240:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:6",
														"type": ""
													}
												],
												"src": "1193:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1570:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1580:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1605:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1598:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1598:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1591:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1591:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1580:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1552:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1562:7:6",
														"type": ""
													}
												],
												"src": "1528:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1700:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1720:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1705:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1705:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1693:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1671:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1678:3:6",
														"type": ""
													}
												],
												"src": "1624:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1831:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1841:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1853:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1849:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1849:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1841:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1877:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1877:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1803:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1815:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1826:4:6",
														"type": ""
													}
												],
												"src": "1739:210:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806327cbaabe146100675780633855cc65146100855780635bffec62146100b557806371866520146100d1578063ad87d2ba14610101578063b4f3824d1461011f575b600080fd5b61006f61013b565b60405161007c91906103c9565b60405180910390f35b61009f600480360381019061009a9190610415565b610161565b6040516100ac919061045d565b60405180910390f35b6100cf60048036038101906100ca9190610415565b610181565b005b6100eb60048036038101906100e69190610415565b610235565b6040516100f8919061045d565b60405180910390f35b61010961028a565b604051610116919061045d565b60405180910390f35b61013960048036038101906101349190610415565b6102dd565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101db57600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033757600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905550565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103b382610388565b9050919050565b6103c3816103a8565b82525050565b60006020820190506103de60008301846103ba565b92915050565b600080fd5b6103f2816103a8565b81146103fd57600080fd5b50565b60008135905061040f816103e9565b92915050565b60006020828403121561042b5761042a6103e4565b5b600061043984828501610400565b91505092915050565b60008115159050919050565b61045781610442565b82525050565b6000602082019050610472600083018461044e565b9291505056fea264697066735822122041b2b00fb09da9096fbb6a3fed052f61a83918d6b136fbb5bdfec4a19471788d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27CBAABE EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x3855CC65 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x5BFFEC62 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x71866520 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xAD87D2BA EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xB4F3824D EQ PUSH2 0x11F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 DUP3 PUSH2 0x388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C3 DUP2 PUSH2 0x3A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F2 DUP2 PUSH2 0x3A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x40F DUP2 PUSH2 0x3E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42B JUMPI PUSH2 0x42A PUSH2 0x3E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x439 DUP5 DUP3 DUP6 ADD PUSH2 0x400 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x457 DUP2 PUSH2 0x442 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x472 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xB2 0xB0 0xF 0xB0 SWAP14 0xA9 MULMOD PUSH16 0xBB6A3FED052F61A83918D6B136FBB5BD INVALID 0xC4 LOG1 SWAP5 PUSH18 0x788D64736F6C634300081200330000000000 ",
							"sourceMap": "116:1356:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;261:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;213:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;592:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1330:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1106:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;849:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;261:28;;;;;;;;;;;;;:::o;213:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;592:143::-;446:13;;;;;;;;;;;432:27;;:10;:27;;;424:36;;;;;;724:4:::1;704:9;:17:::0;714:6:::1;704:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;592:143:::0;:::o;1330:140::-;1420:4;1443:9;:20;1453:9;1443:20;;;;;;;;;;;;;;;;;;;;;;;;;1436:27;;1330:140;;;:::o;1106:110::-;1165:4;1188:9;:21;1198:10;1188:21;;;;;;;;;;;;;;;;;;;;;;;;;1181:28;;1106:110;:::o;849:143::-;446:13;;;;;;;;;;;432:27;;:10;:27;;;424:36;;;;;;968:9:::1;:17:::0;978:6:::1;968:17;;;;;;;;;;;;;;;;961:24;;;;;;;;;;;849:143:::0;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:90::-;1562:7;1605:5;1598:13;1591:21;1580:32;;1528:90;;;:::o;1624:109::-;1705:21;1720:5;1705:21;:::i;:::-;1700:3;1693:34;1624:109;;:::o;1739:210::-;1826:4;1864:2;1853:9;1849:18;1841:26;;1877:65;1939:1;1928:9;1924:17;1915:6;1877:65;:::i;:::-;1739:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "239600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Marketors(address)": "2845",
								"delMarketorByMarketCreator(address)": "27045",
								"isValidMarketor()": "2634",
								"isValidMarketor(address)": "2927",
								"marketCreator()": "2492",
								"setMarketorByMarketCreator(address)": "27004"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 1472,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 1472,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 1472,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 296,
									"end": 379,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 296,
									"end": 379,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 296,
									"end": 379,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 296,
									"end": 379,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 296,
									"end": 379,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 296,
									"end": 379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 296,
									"end": 379,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 358,
									"end": 372,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 355,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 342,
									"end": 355,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 372,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 342,
									"end": 372,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 342,
									"end": 372,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 342,
									"end": 372,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 342,
									"end": 372,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 296,
									"end": 379,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 116,
									"end": 1472,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 116,
									"end": 1472,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 116,
									"end": 1472,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 116,
									"end": 1472,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 116,
									"end": 1472,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 1472,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 116,
									"end": 1472,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 1472,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 1472,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 116,
									"end": 1472,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 1472,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122041b2b00fb09da9096fbb6a3fed052f61a83918d6b136fbb5bdfec4a19471788d64736f6c63430008120033",
									".code": [
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "27CBAABE"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "3855CC65"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "5BFFEC62"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "71866520"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "AD87D2BA"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "B4F3824D"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 1472,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 261,
											"end": 289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 261,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 261,
											"end": 289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 261,
											"end": 289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 261,
											"end": 289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 261,
											"end": 289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 261,
											"end": 289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 213,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 213,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 213,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 592,
											"end": 735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 592,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 592,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 592,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 592,
											"end": 735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1330,
											"end": 1470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1330,
											"end": 1470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1330,
											"end": 1470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1106,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1106,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 849,
											"end": 992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 849,
											"end": 992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 849,
											"end": 992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 849,
											"end": 992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 849,
											"end": 992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 849,
											"end": 992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 849,
											"end": 992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 261,
											"end": 289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 261,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 261,
											"end": 289,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 261,
											"end": 289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 261,
											"end": 289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 213,
											"end": 254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 213,
											"end": 254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 592,
											"end": 735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 446,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 446,
											"end": 459,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 446,
											"end": 459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 432,
											"end": 442,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 424,
											"end": 460,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 724,
											"end": 728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 704,
											"end": 713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 714,
											"end": 720,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1443,
											"end": 1463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 849,
											"end": 992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 446,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 446,
											"end": 459,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 446,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 446,
											"end": 459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 432,
											"end": 442,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 424,
											"end": 460,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 968,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 978,
											"end": 984,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 961,
											"end": 985,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 961,
											"end": 985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 961,
											"end": 985,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 961,
											"end": 985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 961,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 961,
											"end": 985,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 961,
											"end": 985,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 961,
											"end": 985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 961,
											"end": 985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 961,
											"end": 985,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1562,
											"end": 1569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1611,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1612,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1705,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1727,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1877,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"Contracts/TTSwapV1Marketor.sol",
								"Contracts/interfaces/ITTSwapV1Marketor.sol",
								"Contracts/interfaces/Marketor/IMarketorV1Events.sol",
								"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol",
								"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol",
								"Contracts/interfaces/Marketor/IMarketorV1State.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Marketors(address)": "3855cc65",
							"delMarketorByMarketCreator(address)": "b4f3824d",
							"isValidMarketor()": "ad87d2ba",
							"isValidMarketor(address)": "71866520",
							"marketCreator()": "27cbaabe",
							"setMarketorByMarketCreator(address)": "5bffec62"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketCreator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Marketors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mkaddress\",\"type\":\"address\"}],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"details\":\"Explain to a developer any extra details\"},\"isValidMarketor()\":{\"details\":\"Explain to a developer any extra details\"},\"isValidMarketor(address)\":{\"details\":\"Explain to a developer any extra details\"},\"setMarketorByMarketCreator(address)\":{\"details\":\"Explain to a developer any extra details\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"notice\":\"Explain to an end user what this does\"},\"isValidMarketor()\":{\"notice\":\"Explain to an end user what this does\"},\"isValidMarketor(address)\":{\"notice\":\"Explain to an end user what this does\"},\"setMarketorByMarketCreator(address)\":{\"notice\":\"Explain to an end user what this does\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/TTSwapV1Marketor.sol\":\"TTSwapV1Marketor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/TTSwapV1Marketor.sol\":{\"keccak256\":\"0xfa132b1165f87cd4a949886c2ff9d72218468b090a730b041ceb2d8f8d2d3b34\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a004db01bcec2f007b85be196951212670d27d9e933a2fa36d1ca1f5c059af4f\",\"dweb:/ipfs/QmZmQf7BWbAb8y2wPWmK3SFrpXTWVb6H1MDXzbHrbGw333\"]},\"Contracts/interfaces/ITTSwapV1Marketor.sol\":{\"keccak256\":\"0xcec6819c6010fada016d2adffd3ae7973365e768c6144df626506c5a00873565\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://59feb2895b8fda46ab09fd4b63605aef2bd315169102ef43898501dcdb92b3da\",\"dweb:/ipfs/QmWxs1ftk6xYceq2dRKZ3m5zwrvNYHdLt1xPo1Ntauii9g\"]},\"Contracts/interfaces/Marketor/IMarketorV1Events.sol\":{\"keccak256\":\"0x1019146e8e3c5f553f93a5f1f7d31c0a7227b25ce87d8d76124fbdaae200615f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://11113d24362e6a66e5e897ad597992660a06e8641cb5bdaebe74823504b0e225\",\"dweb:/ipfs/QmZY3dqUFb6DkxHUveC3BpyxsyrTHujoSg7q9mWUnwNYzc\"]},\"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\":{\"keccak256\":\"0x2159e6262a224a3fb19bd304f89fab571d6ddad00a01c5bcbc7699bdca627412\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6fb78be3604a8d3ad5772db5533a3cf5268607997a5f815b6d8809cc8412d126\",\"dweb:/ipfs/QmZVF85N81hmsrzofsPLfDjrv2r82z8Xn4ooj6r2rTNM4F\"]},\"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\":{\"keccak256\":\"0x85fe030c431f4ce0818038e673a58d35b30ac6fdb6760b24c105afbd0b94cc15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://08d50a6cd32a067e30d45964d7d018fbec1b0b34b00529548815b6a98d4e9ee5\",\"dweb:/ipfs/QmaRBpH3M7vt628KB1UqonAoUD1UcqNXSEsPdeyThZ55VC\"]},\"Contracts/interfaces/Marketor/IMarketorV1State.sol\":{\"keccak256\":\"0x5daacc326d8c629ecd56540a6f1f746ed30450e3fbbb7bb6db9e7645fe5cd4d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://98cd366c4ce58b9183f96c9fd3b63e4cc9dfc6020e7f7593b5a45b36fa81b9cc\",\"dweb:/ipfs/QmTTDzMTgqMUrkVdFcSzwUZx51SH2Cho6911ni299L1oRd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Contracts/TTSwapV1Marketor.sol:TTSwapV1Marketor",
								"label": "Marketors",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 10,
								"contract": "Contracts/TTSwapV1Marketor.sol:TTSwapV1Marketor",
								"label": "marketCreator",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"delMarketorByMarketCreator(address)": {
								"notice": "Explain to an end user what this does"
							},
							"isValidMarketor()": {
								"notice": "Explain to an end user what this does"
							},
							"isValidMarketor(address)": {
								"notice": "Explain to an end user what this does"
							},
							"setMarketorByMarketCreator(address)": {
								"notice": "Explain to an end user what this does"
							}
						},
						"version": 1
					}
				}
			},
			"Contracts/interfaces/ITTSwapV1Marketor.sol": {
				"ITTSwapV1Marketor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "delMarketorByMarketCreator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isValidMarketor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isValidMarketor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setMarketorByMarketCreator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"delMarketorByMarketCreator(address)": {
								"details": "Explain to a developer any extra details"
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"delMarketorByMarketCreator(address)": "b4f3824d",
							"isValidMarketor()": "ad87d2ba",
							"isValidMarketor(address)": "71866520",
							"setMarketorByMarketCreator(address)": "5bffec62"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"details\":\"Explain to a developer any extra details\"}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"notice\":\"Explain to an end user what this does\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/ITTSwapV1Marketor.sol\":\"ITTSwapV1Marketor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/ITTSwapV1Marketor.sol\":{\"keccak256\":\"0xcec6819c6010fada016d2adffd3ae7973365e768c6144df626506c5a00873565\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://59feb2895b8fda46ab09fd4b63605aef2bd315169102ef43898501dcdb92b3da\",\"dweb:/ipfs/QmWxs1ftk6xYceq2dRKZ3m5zwrvNYHdLt1xPo1Ntauii9g\"]},\"Contracts/interfaces/Marketor/IMarketorV1Events.sol\":{\"keccak256\":\"0x1019146e8e3c5f553f93a5f1f7d31c0a7227b25ce87d8d76124fbdaae200615f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://11113d24362e6a66e5e897ad597992660a06e8641cb5bdaebe74823504b0e225\",\"dweb:/ipfs/QmZY3dqUFb6DkxHUveC3BpyxsyrTHujoSg7q9mWUnwNYzc\"]},\"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\":{\"keccak256\":\"0x2159e6262a224a3fb19bd304f89fab571d6ddad00a01c5bcbc7699bdca627412\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6fb78be3604a8d3ad5772db5533a3cf5268607997a5f815b6d8809cc8412d126\",\"dweb:/ipfs/QmZVF85N81hmsrzofsPLfDjrv2r82z8Xn4ooj6r2rTNM4F\"]},\"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\":{\"keccak256\":\"0x85fe030c431f4ce0818038e673a58d35b30ac6fdb6760b24c105afbd0b94cc15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://08d50a6cd32a067e30d45964d7d018fbec1b0b34b00529548815b6a98d4e9ee5\",\"dweb:/ipfs/QmaRBpH3M7vt628KB1UqonAoUD1UcqNXSEsPdeyThZ55VC\"]},\"Contracts/interfaces/Marketor/IMarketorV1State.sol\":{\"keccak256\":\"0x5daacc326d8c629ecd56540a6f1f746ed30450e3fbbb7bb6db9e7645fe5cd4d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://98cd366c4ce58b9183f96c9fd3b63e4cc9dfc6020e7f7593b5a45b36fa81b9cc\",\"dweb:/ipfs/QmTTDzMTgqMUrkVdFcSzwUZx51SH2Cho6911ni299L1oRd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"delMarketorByMarketCreator(address)": {
								"notice": "Explain to an end user what this does"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/Marketor/IMarketorV1Events.sol": {
				"IMarketorV1Events": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/Marketor/IMarketorV1Events.sol\":\"IMarketorV1Events\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Marketor/IMarketorV1Events.sol\":{\"keccak256\":\"0x1019146e8e3c5f553f93a5f1f7d31c0a7227b25ce87d8d76124fbdaae200615f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://11113d24362e6a66e5e897ad597992660a06e8641cb5bdaebe74823504b0e225\",\"dweb:/ipfs/QmZY3dqUFb6DkxHUveC3BpyxsyrTHujoSg7q9mWUnwNYzc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol": {
				"IMarketorV1Immutables": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\":\"IMarketorV1Immutables\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\":{\"keccak256\":\"0x2159e6262a224a3fb19bd304f89fab571d6ddad00a01c5bcbc7699bdca627412\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6fb78be3604a8d3ad5772db5533a3cf5268607997a5f815b6d8809cc8412d126\",\"dweb:/ipfs/QmZVF85N81hmsrzofsPLfDjrv2r82z8Xn4ooj6r2rTNM4F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol": {
				"IMarketorV1MarketCreatorActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "delMarketorByMarketCreator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setMarketorByMarketCreator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"delMarketorByMarketCreator(address)": {
								"details": "Explain to a developer any extra details"
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"delMarketorByMarketCreator(address)": "b4f3824d",
							"setMarketorByMarketCreator(address)": "5bffec62"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"details\":\"Explain to a developer any extra details\"}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delMarketorByMarketCreator(address)\":{\"notice\":\"Explain to an end user what this does\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\":\"IMarketorV1MarketCreatorActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\":{\"keccak256\":\"0x85fe030c431f4ce0818038e673a58d35b30ac6fdb6760b24c105afbd0b94cc15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://08d50a6cd32a067e30d45964d7d018fbec1b0b34b00529548815b6a98d4e9ee5\",\"dweb:/ipfs/QmaRBpH3M7vt628KB1UqonAoUD1UcqNXSEsPdeyThZ55VC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"delMarketorByMarketCreator(address)": {
								"notice": "Explain to an end user what this does"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"Contracts/interfaces/Marketor/IMarketorV1State.sol": {
				"IMarketorV1State": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isValidMarketor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isValidMarketor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidMarketor()": "ad87d2ba",
							"isValidMarketor(address)": "71866520"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/interfaces/Marketor/IMarketorV1State.sol\":\"IMarketorV1State\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/interfaces/Marketor/IMarketorV1State.sol\":{\"keccak256\":\"0x5daacc326d8c629ecd56540a6f1f746ed30450e3fbbb7bb6db9e7645fe5cd4d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://98cd366c4ce58b9183f96c9fd3b63e4cc9dfc6020e7f7593b5a45b36fa81b9cc\",\"dweb:/ipfs/QmTTDzMTgqMUrkVdFcSzwUZx51SH2Cho6911ni299L1oRd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Contracts/TTSwapV1Marketor.sol": {
				"ast": {
					"absolutePath": "Contracts/TTSwapV1Marketor.sol",
					"exportedSymbols": {
						"IMarketorV1Events": [
							110
						],
						"IMarketorV1Immutables": [
							114
						],
						"IMarketorV1MarketCreatorActions": [
							129
						],
						"IMarketorV1State": [
							145
						],
						"ITTSwapV1Marketor": [
							106
						],
						"TTSwapV1Marketor": [
							90
						]
					},
					"id": 91,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:0"
						},
						{
							"absolutePath": "Contracts/interfaces/ITTSwapV1Marketor.sol",
							"file": "./interfaces/ITTSwapV1Marketor.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 91,
							"sourceUnit": 107,
							"src": "70:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ITTSwapV1Marketor",
										"nameLocations": [
											"145:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 106,
										"src": "145:17:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "145:17:0"
								}
							],
							"canonicalName": "TTSwapV1Marketor",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 90,
							"linearizedBaseContracts": [
								90,
								106,
								145,
								129,
								114,
								110
							],
							"name": "TTSwapV1Marketor",
							"nameLocation": "125:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3855cc65",
									"id": 8,
									"mutability": "mutable",
									"name": "Marketors",
									"nameLocation": "245:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 90,
									"src": "213:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 7,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 5,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "221:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "213:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 6,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "232:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27cbaabe",
									"id": 10,
									"mutability": "mutable",
									"name": "marketCreator",
									"nameLocation": "276:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 90,
									"src": "261:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "261:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "332:47:0",
										"statements": [
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "marketCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "342:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 16,
														"name": "_marketCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "358:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "342:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "342:30:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "_marketCreator",
												"nameLocation": "316:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "308:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "307:24:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "332:0:0"
									},
									"scope": 90,
									"src": "296:83:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "414:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 23,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "432:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "436:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "432:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 25,
																"name": "marketCreator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "446:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "432:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "424:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "424:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "424:36:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "470:1:0"
											}
										]
									},
									"id": 31,
									"name": "onlyMarketCreator",
									"nameLocation": "394:17:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "411:2:0"
									},
									"src": "385:93:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										122
									],
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "694:41:0",
										"statements": [
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 40,
															"name": "Marketors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "704:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 42,
														"indexExpression": {
															"id": 41,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "714:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "704:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "724:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "704:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "704:24:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "484:103:0",
										"text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
									},
									"functionSelector": "5bffec62",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 38,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 37,
												"name": "onlyMarketCreator",
												"nameLocations": [
													"676:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "676:17:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "676:17:0"
										}
									],
									"name": "setMarketorByMarketCreator",
									"nameLocation": "601:26:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 36,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "667:8:0"
									},
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "645:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "637:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "627:30:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "694:0:0"
									},
									"scope": 90,
									"src": "592:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										128
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "951:41:0",
										"statements": [
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "961:24:0",
													"subExpression": {
														"baseExpression": {
															"id": 56,
															"name": "Marketors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "968:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 58,
														"indexExpression": {
															"id": 57,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "978:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "968:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "961:24:0"
											}
										]
									},
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "741:103:0",
										"text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
									},
									"functionSelector": "b4f3824d",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 54,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 53,
												"name": "onlyMarketCreator",
												"nameLocations": [
													"933:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "933:17:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "933:17:0"
										}
									],
									"name": "delMarketorByMarketCreator",
									"nameLocation": "858:26:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 52,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "924:8:0"
									},
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "902:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "894:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:30:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:0:0"
									},
									"scope": 90,
									"src": "849:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										137
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1171:45:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 69,
														"name": "Marketors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1188:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 72,
													"indexExpression": {
														"expression": {
															"id": 70,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1198:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1202:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1198:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1188:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 68,
												"id": 73,
												"nodeType": "Return",
												"src": "1181:28:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "998:103:0",
										"text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
									},
									"functionSelector": "ad87d2ba",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidMarketor",
									"nameLocation": "1115:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 65,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1147:8:0"
									},
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1130:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1165:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1164:6:0"
									},
									"scope": 90,
									"src": "1106:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										144
									],
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1426:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 84,
														"name": "Marketors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1443:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 86,
													"indexExpression": {
														"id": 85,
														"name": "mkaddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "1453:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1443:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 83,
												"id": 87,
												"nodeType": "Return",
												"src": "1436:27:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1222:103:0",
										"text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
									},
									"functionSelector": "71866520",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidMarketor",
									"nameLocation": "1339:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 80,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1402:8:0"
									},
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "mkaddress",
												"nameLocation": "1372:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1364:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:33:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1420:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1420:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:6:0"
									},
									"scope": 90,
									"src": "1330:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 91,
							"src": "116:1356:0",
							"usedErrors": []
						}
					],
					"src": "45:1428:0"
				},
				"id": 0
			},
			"Contracts/interfaces/ITTSwapV1Marketor.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/ITTSwapV1Marketor.sol",
					"exportedSymbols": {
						"IMarketorV1Events": [
							110
						],
						"IMarketorV1Immutables": [
							114
						],
						"IMarketorV1MarketCreatorActions": [
							129
						],
						"IMarketorV1State": [
							145
						],
						"ITTSwapV1Marketor": [
							106
						]
					},
					"id": 107,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 92,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:1"
						},
						{
							"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1Events.sol",
							"file": "./Marketor/IMarketorV1Events.sol",
							"id": 93,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 107,
							"sourceUnit": 111,
							"src": "70:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1Immutables.sol",
							"file": "./Marketor/IMarketorV1Immutables.sol",
							"id": 94,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 107,
							"sourceUnit": 115,
							"src": "113:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol",
							"file": "./Marketor/IMarketorV1MarketCreatorActions.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 107,
							"sourceUnit": 130,
							"src": "160:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1State.sol",
							"file": "./Marketor/IMarketorV1State.sol",
							"id": 96,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 107,
							"sourceUnit": 146,
							"src": "217:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 98,
										"name": "IMarketorV1Events",
										"nameLocations": [
											"560:17:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 110,
										"src": "560:17:1"
									},
									"id": 99,
									"nodeType": "InheritanceSpecifier",
									"src": "560:17:1"
								},
								{
									"baseName": {
										"id": 100,
										"name": "IMarketorV1Immutables",
										"nameLocations": [
											"583:21:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 114,
										"src": "583:21:1"
									},
									"id": 101,
									"nodeType": "InheritanceSpecifier",
									"src": "583:21:1"
								},
								{
									"baseName": {
										"id": 102,
										"name": "IMarketorV1MarketCreatorActions",
										"nameLocations": [
											"610:31:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "610:31:1"
									},
									"id": 103,
									"nodeType": "InheritanceSpecifier",
									"src": "610:31:1"
								},
								{
									"baseName": {
										"id": 104,
										"name": "IMarketorV1State",
										"nameLocations": [
											"647:16:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 145,
										"src": "647:16:1"
									},
									"id": 105,
									"nodeType": "InheritanceSpecifier",
									"src": "647:16:1"
								}
							],
							"canonicalName": "ITTSwapV1Marketor",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 97,
								"nodeType": "StructuredDocumentation",
								"src": "260:265:1",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 106,
							"linearizedBaseContracts": [
								106,
								145,
								129,
								114,
								110
							],
							"name": "ITTSwapV1Marketor",
							"nameLocation": "535:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 107,
							"src": "525:143:1",
							"usedErrors": []
						}
					],
					"src": "45:624:1"
				},
				"id": 1
			},
			"Contracts/interfaces/Marketor/IMarketorV1Events.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1Events.sol",
					"exportedSymbols": {
						"IMarketorV1Events": [
							110
						]
					},
					"id": 111,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 108,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMarketorV1Events",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 109,
								"nodeType": "StructuredDocumentation",
								"src": "70:88:2",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 110,
							"linearizedBaseContracts": [
								110
							],
							"name": "IMarketorV1Events",
							"nameLocation": "168:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 111,
							"src": "158:32:2",
							"usedErrors": []
						}
					],
					"src": "45:146:2"
				},
				"id": 2
			},
			"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1Immutables.sol",
					"exportedSymbols": {
						"IMarketorV1Immutables": [
							114
						]
					},
					"id": 115,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 112,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMarketorV1Immutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 113,
								"nodeType": "StructuredDocumentation",
								"src": "70:153:3",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": true,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "IMarketorV1Immutables",
							"nameLocation": "233:21:3",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 115,
							"src": "223:36:3",
							"usedErrors": []
						}
					],
					"src": "45:215:3"
				},
				"id": 3
			},
			"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol",
					"exportedSymbols": {
						"IMarketorV1MarketCreatorActions": [
							129
						]
					},
					"id": 130,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 116,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMarketorV1MarketCreatorActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 117,
								"nodeType": "StructuredDocumentation",
								"src": "70:116:4",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "IMarketorV1MarketCreatorActions",
							"nameLocation": "196:31:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "5bffec62",
									"id": 122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketorByMarketCreator",
									"nameLocation": "243:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "278:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "270:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "269:16:4"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:0:4"
									},
									"scope": 129,
									"src": "234:61:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "301:103:4",
										"text": "@notice Explain to an end user what this does\n @dev Explain to a developer any extra details"
									},
									"functionSelector": "b4f3824d",
									"id": 128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delMarketorByMarketCreator",
									"nameLocation": "418:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "453:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "445:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:16:4"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:0:4"
									},
									"scope": 129,
									"src": "409:61:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 130,
							"src": "186:286:4",
							"usedErrors": []
						}
					],
					"src": "45:428:4"
				},
				"id": 4
			},
			"Contracts/interfaces/Marketor/IMarketorV1State.sol": {
				"ast": {
					"absolutePath": "Contracts/interfaces/Marketor/IMarketorV1State.sol",
					"exportedSymbols": {
						"IMarketorV1State": [
							145
						]
					},
					"id": 146,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 131,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMarketorV1State",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 132,
								"nodeType": "StructuredDocumentation",
								"src": "70:169:5",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 145,
							"linearizedBaseContracts": [
								145
							],
							"name": "IMarketorV1State",
							"nameLocation": "249:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ad87d2ba",
									"id": 137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidMarketor",
									"nameLocation": "281:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:2:5"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "322:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "322:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:6:5"
									},
									"scope": 145,
									"src": "272:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "71866520",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidMarketor",
									"nameLocation": "343:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "359:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:9:5"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:6:5"
									},
									"scope": 145,
									"src": "334:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 146,
							"src": "239:160:5",
							"usedErrors": []
						}
					],
					"src": "45:355:5"
				},
				"id": 5
			}
		}
	}
}