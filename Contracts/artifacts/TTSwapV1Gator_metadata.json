{
	"compiler": {
		"version": "0.8.16+commit.07a7930e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_marketorContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_marketCreator",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "market",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "gateAddress",
								"type": "address"
							},
							{
								"internalType": "uint160",
								"name": "authority",
								"type": "uint160"
							},
							{
								"internalType": "bytes32",
								"name": "name",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "website",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32[10]",
								"name": "webserverip",
								"type": "bytes32[10]"
							},
							{
								"internalType": "uint32",
								"name": "createtimestamp",
								"type": "uint32"
							},
							{
								"internalType": "bool",
								"name": "marketunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "unlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isUsed",
								"type": "bool"
							}
						],
						"internalType": "struct LGate.Info",
						"name": "_gator",
						"type": "tuple"
					}
				],
				"name": "addGater",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gator",
						"type": "address"
					}
				],
				"name": "delGatebyMarketor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "gateList",
				"outputs": [
					{
						"internalType": "address",
						"name": "market",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"internalType": "uint160",
						"name": "authority",
						"type": "uint160"
					},
					{
						"internalType": "bytes32",
						"name": "name",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "website",
						"type": "bytes32"
					},
					{
						"internalType": "uint32",
						"name": "createtimestamp",
						"type": "uint32"
					},
					{
						"internalType": "bool",
						"name": "marketunlock",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "unlock",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isUsed",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isValidGator",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lockGatebyGater",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gatoraddress",
						"type": "address"
					}
				],
				"name": "lockGatebyMarketor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "marketCreator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "marketorContractAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockGatebyGater",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gatoraddress",
						"type": "address"
					}
				],
				"name": "unlockGatebyMarketor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "market",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "gateAddress",
								"type": "address"
							},
							{
								"internalType": "uint160",
								"name": "authority",
								"type": "uint160"
							},
							{
								"internalType": "bytes32",
								"name": "name",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "website",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32[10]",
								"name": "webserverip",
								"type": "bytes32[10]"
							},
							{
								"internalType": "uint32",
								"name": "createtimestamp",
								"type": "uint32"
							},
							{
								"internalType": "bool",
								"name": "marketunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "unlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isUsed",
								"type": "bool"
							}
						],
						"internalType": "struct LGate.Info",
						"name": "_gator",
						"type": "tuple"
					}
				],
				"name": "updateGatebyGator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "market",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "gateAddress",
								"type": "address"
							},
							{
								"internalType": "uint160",
								"name": "authority",
								"type": "uint160"
							},
							{
								"internalType": "bytes32",
								"name": "name",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "website",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32[10]",
								"name": "webserverip",
								"type": "bytes32[10]"
							},
							{
								"internalType": "uint32",
								"name": "createtimestamp",
								"type": "uint32"
							},
							{
								"internalType": "bool",
								"name": "marketunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "unlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isUsed",
								"type": "bool"
							}
						],
						"internalType": "struct LGate.Info",
						"name": "_gator",
						"type": "tuple"
					}
				],
				"name": "updateGatebyMarketor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"stateVariables": {
				"marketorContractAddress": {
					"return": "The contract address",
					"returns": {
						"_0": "The contract address"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"marketorContractAddress()": {
					"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Contracts/TTSwapV1Gator.sol": "TTSwapV1Gator"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Contracts/TTSwapV1Gator.sol": {
			"keccak256": "0xa366547600ef5e448dd36a42c3d20fa5e1f9342cf19a9f05f9454654c09319e3",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://f1f2cdc8ffb5c3234d19292fab0a1ffe6b2ed10e6876ed76a0ad7365bf22feea",
				"dweb:/ipfs/QmXxwwrZvBeDsDKZZBjGqPmDqgUvt7W3y96eAQccWedQw6"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1CustomerActions.sol": {
			"keccak256": "0x5166995889ad764ce7379845df7e6f55f5114294f18795a07da173466418c010",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://c101332272e023fd17dd3e96270424a42aa257e02f14650314bf133ff3105221",
				"dweb:/ipfs/QmUznHitEEPeBRc7PxrUMggmyLveBtW2MJyKGUt8KDrjUn"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1Events.sol": {
			"keccak256": "0xcddaf97a05e7a5b4706705dd9618ad9a97ebe6559365deaa3bcbe21eef84d462",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://0432642546822e3e6bb77c89815cda36aea85154bb8431c0837db1b5fb199dcd",
				"dweb:/ipfs/QmYSkG65spVSpN1WDkF5iFtPSBvYeDWvSNRVpYygR9iJkr"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1GatorActions.sol": {
			"keccak256": "0x43e783a765bf4f5a4de8591ceb9556c215372e068e80827637f22aec41460359",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://23b287fe77c961c6f7dc7b7a1591eddd0772b687faf41e7c0400c66114e8a452",
				"dweb:/ipfs/QmVKaaxjY7ya3HSkdUt7zqw2J8BqxMDGvUbUjobVCcUsHk"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1Immutables.sol": {
			"keccak256": "0x8cbeb007a8321dee1ef73ed11e1af76c30acb64c6829d2c0d02c6f6cb4e8fdc3",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://00b5dc4c7cbcec92fdfa6e6d512209d63cf2cac6a1ae6969b853172fc9fb8319",
				"dweb:/ipfs/QmYoRZuN8XvT6eESqy5BFEDxbs12beWtBHgkjxna3Jy7CF"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1MarketorActions.sol": {
			"keccak256": "0xcd27934c7288dbf950975c629280d20b5d2b79f3f1d4cda94e866f2b24255fa9",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://7ea87e856a6e52e3171e4395b05feff4264454f7e5a106117f4f49328aa72492",
				"dweb:/ipfs/QmYZkYNsqvEnKsqN5HLjo2JsWJqksniSkRXkC8bJsPKGJp"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1State.sol": {
			"keccak256": "0xe3c37b988423c5989fce2b078a598788c052dc23403dff95509d57464bb1c12f",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://5c3766825c2fa5442d265a5524ae150626d18e235be99d1b485182ebbc9c0e1e",
				"dweb:/ipfs/Qme7hkgr2K3vEUst6YPBaq55dycpXBaffWLKXDSPX3QnvK"
			]
		},
		"Contracts/interfaces/ITTSwapV1Gator.sol": {
			"keccak256": "0xcc6a9f594874f75e8f19b2d65a3d0892bd9d3f75636e93e8d52cf4aea6703652",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://c434a90d0ac2d2afc87a43147c85d3f9d48530eb2cd8fd2b491262be8a7238db",
				"dweb:/ipfs/QmWyyaWVvSVVduUiS3vKQ4guLHnP4ugcCQp46kNvLsz2iJ"
			]
		},
		"Contracts/interfaces/Marketor/IMarketorV1State.sol": {
			"keccak256": "0xaad87d4ddb4502c8908f30707db6628834d3df7bef3d68d6d50179d0db672ee7",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://905d7e65de99ddf8edc93aac5a9e6139e7813ac472abefa987b4ea85c73e4803",
				"dweb:/ipfs/QmNbEzweLBYEuiTbURiPuoyyqgmx59XtA5Ugo7uEvQXRCS"
			]
		},
		"Contracts/libraries/base/LCustomer.sol": {
			"keccak256": "0x6acb4a762f349ab39bd48ff34c150b55f55aabc4826379838391749136f3aee9",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://58552a104e1a046883cf116fe6748600caf7c8ebe341f82a38aa6fbfb09355cb",
				"dweb:/ipfs/QmQxUAK9fzefN6afoJ2CGyRWtETz1TEcZoJhDFCYJ3WY4V"
			]
		},
		"Contracts/libraries/base/LGate.sol": {
			"keccak256": "0xdbbcc3e545cc8d7d8eebe4b1dbaccee4d2adbce4785cb7ac5f4712093c72db52",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://1d7251ca8ee12ad7009fe9f280aa8be028502f51e7465fe5314b85b9a2815991",
				"dweb:/ipfs/QmRQ5Z78r3qDKhBbRbDs8d4ThNk5fLN5S5g6tosHwa6jdo"
			]
		}
	},
	"version": 1
}