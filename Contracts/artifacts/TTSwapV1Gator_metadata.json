{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_marketorContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_marketCreator",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "name",
						"type": "bytes32"
					}
				],
				"name": "e_addGater",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateaddress",
						"type": "address"
					}
				],
				"name": "e_addGaterDetail",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "marketoraddress",
						"type": "address"
					}
				],
				"name": "e_delGatebyMarketor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					}
				],
				"name": "e_lockGatebyGater",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "marketoraddress",
						"type": "address"
					}
				],
				"name": "e_lockGatebyMarketor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					}
				],
				"name": "e_unlockGatebyGater",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "marketoraddress",
						"type": "address"
					}
				],
				"name": "e_unlockGatebyMarketor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "name",
						"type": "bytes32"
					}
				],
				"name": "e_updateGatebyGator",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "name",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "marketoraddress",
						"type": "address"
					}
				],
				"name": "e_updateGatebyMarketor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "e_updateGater",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "e_updateGaterDetail",
				"type": "event"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint128",
								"name": "gateNo",
								"type": "uint128"
							},
							{
								"internalType": "address",
								"name": "gateAddress",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "name",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "createtimestamp",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "marketunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "gateunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isUsed",
								"type": "bool"
							}
						],
						"internalType": "struct LGate.Info",
						"name": "_gator",
						"type": "tuple"
					}
				],
				"name": "addGater",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "full_name",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "country",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "OfficalWebsite",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "OfficalIp",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "twriterUrl",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "bbsUrl",
								"type": "bytes32"
							}
						],
						"internalType": "struct LGate.DetailInfo",
						"name": "_gatorDatailinfo",
						"type": "tuple"
					}
				],
				"name": "addGaterDetailInfo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint128",
								"name": "gateNo",
								"type": "uint128"
							},
							{
								"internalType": "address",
								"name": "gateAddress",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "name",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "createtimestamp",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "marketunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "gateunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isUsed",
								"type": "bool"
							}
						],
						"internalType": "struct LGate.Info",
						"name": "_gator",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "full_name",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "country",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "OfficalWebsite",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "OfficalIp",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "twriterUrl",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "bbsUrl",
								"type": "bytes32"
							}
						],
						"internalType": "struct LGate.DetailInfo",
						"name": "_gatorDatailinfo",
						"type": "tuple"
					}
				],
				"name": "addfullGater",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gator",
						"type": "address"
					}
				],
				"name": "delGatebyMarketor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "gateDetailList",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "full_name",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "country",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "OfficalWebsite",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "OfficalIp",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "twriterUrl",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "bbsUrl",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "gateList",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "gateNo",
						"type": "uint128"
					},
					{
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "name",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "createtimestamp",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "marketunlock",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "gateunlock",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isUsed",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"name": "gateNumbers",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_gateNumber",
						"type": "uint8"
					}
				],
				"name": "getGaterDetailInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "full_name",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "country",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "OfficalWebsite",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "OfficalIp",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "twriterUrl",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "bbsUrl",
								"type": "bytes32"
							}
						],
						"internalType": "struct LGate.DetailInfo",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gateaddress",
						"type": "address"
					}
				],
				"name": "getGaterDetailInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "full_name",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "country",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "OfficalWebsite",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "OfficalIp",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "twriterUrl",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "bbsUrl",
								"type": "bytes32"
							}
						],
						"internalType": "struct LGate.DetailInfo",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gateaddress",
						"type": "address"
					}
				],
				"name": "getGaterInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint128",
								"name": "gateNo",
								"type": "uint128"
							},
							{
								"internalType": "address",
								"name": "gateAddress",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "name",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "createtimestamp",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "marketunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "gateunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isUsed",
								"type": "bool"
							}
						],
						"internalType": "struct LGate.Info",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_gateNumber",
						"type": "uint8"
					}
				],
				"name": "getGaterInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint128",
								"name": "gateNo",
								"type": "uint128"
							},
							{
								"internalType": "address",
								"name": "gateAddress",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "name",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "createtimestamp",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "marketunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "gateunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isUsed",
								"type": "bool"
							}
						],
						"internalType": "struct LGate.Info",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getGaterNo",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gateAddress",
						"type": "address"
					}
				],
				"name": "getGaterNoFromAddress",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMaxGateNumber",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isValidGator",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "vgaddress",
						"type": "address"
					}
				],
				"name": "isValidGatorFromAddress",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lockGatebyGater",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gatoraddress",
						"type": "address"
					}
				],
				"name": "lockGatebyMarketor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "marketCreator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "marketorContractAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxGateNumbers",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_marketorContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_marketCreator",
						"type": "address"
					}
				],
				"name": "setGaterEnv",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockGatebyGater",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gatoraddress",
						"type": "address"
					}
				],
				"name": "unlockGatebyMarketor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_name",
						"type": "bytes32"
					}
				],
				"name": "updateGatebyGator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint128",
								"name": "gateNo",
								"type": "uint128"
							},
							{
								"internalType": "address",
								"name": "gateAddress",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "name",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "createtimestamp",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "marketunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "gateunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isUsed",
								"type": "bool"
							}
						],
						"internalType": "struct LGate.Info",
						"name": "_gator",
						"type": "tuple"
					}
				],
				"name": "updateGatebyMarketor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint128",
								"name": "gateNo",
								"type": "uint128"
							},
							{
								"internalType": "address",
								"name": "gateAddress",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "name",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "createtimestamp",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "marketunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "gateunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isUsed",
								"type": "bool"
							}
						],
						"internalType": "struct LGate.Info",
						"name": "_gator",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "full_name",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "country",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "OfficalWebsite",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "OfficalIp",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "twriterUrl",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "bbsUrl",
								"type": "bytes32"
							}
						],
						"internalType": "struct LGate.DetailInfo",
						"name": "_gatorDatailinfo",
						"type": "tuple"
					}
				],
				"name": "updatefullGater",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"e_addGater(address,bytes32)": {
					"params": {
						"gateAddress": "The address that minted the liquidity",
						"name": "The owner of the position and recipient of any minted liquidity"
					}
				},
				"e_delGatebyMarketor(address,address)": {
					"params": {
						"gateAddress": "The address that minted the liquidity",
						"marketoraddress": "The owner of the position and recipient of any minted liquidity"
					}
				},
				"e_lockGatebyGater(address)": {
					"params": {
						"gateAddress": "The address that minted the liquidity"
					}
				},
				"e_lockGatebyMarketor(address,address)": {
					"params": {
						"gateAddress": "The address that minted the liquidity",
						"marketoraddress": "The address that minted the liquidity"
					}
				},
				"e_unlockGatebyGater(address)": {
					"params": {
						"gateAddress": "The address that minted the liquidity"
					}
				},
				"e_unlockGatebyMarketor(address,address)": {
					"params": {
						"gateAddress": "The address that minted the liquidity",
						"marketoraddress": "The address that minted the liquidity"
					}
				},
				"e_updateGatebyGator(address,bytes32)": {
					"params": {
						"gateAddress": "The address that minted the liquidity",
						"name": "The owner of the position and recipient of any minted liquidity"
					}
				},
				"e_updateGatebyMarketor(address,bytes32,address)": {
					"params": {
						"gateAddress": "The address that minted the liquidity",
						"marketoraddress": "The owner of the position and recipient of any minted liquidity",
						"name": "The owner of the position and recipient of any minted liquidity"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"addGater((uint128,address,bytes32,uint256,bool,bool,bool))": {
					"details": "申请成为门户"
				},
				"addGaterDetailInfo((bytes32,bytes32,bytes32,bytes32,bytes32,bytes32))": {
					"details": "门户添加门户详情信息"
				},
				"addfullGater((uint128,address,bytes32,uint256,bool,bool,bool),(bytes32,bytes32,bytes32,bytes32,bytes32,bytes32))": {
					"details": "一次性添加门户信息"
				},
				"delGatebyMarketor(address)": {
					"details": "市场管理员删除门户"
				},
				"getGaterDetailInfo(address)": {
					"details": "通过门户地址获取门户详情"
				},
				"getGaterDetailInfo(uint8)": {
					"details": "通过门户编号获取门户详情"
				},
				"getGaterInfo(address)": {
					"details": "调用者获取门户地址对应的门户信息"
				},
				"getGaterInfo(uint8)": {
					"details": "调用者获取门户编号对应的门户信息"
				},
				"getGaterNo()": {
					"details": "获取门户调用者的门户编号"
				},
				"getGaterNoFromAddress(address)": {
					"details": "调用者获取传入地址对应的门户编号"
				},
				"getMaxGateNumber()": {
					"details": "调用者获取市场最大门户编号、或者是下一个门户申请者的编号"
				},
				"isValidGator()": {
					"details": "判断调用者是否是市场已经认证门户"
				},
				"isValidGatorFromAddress(address)": {
					"details": "调用者判断传入地址是否是市场已经认证门户"
				},
				"lockGatebyGater()": {
					"details": "市场认证后的门户临时冻结自己"
				},
				"lockGatebyMarketor(address)": {
					"details": "市场管理员冻结门户"
				},
				"setGaterEnv(address,address)": {
					"details": "设置门户合约的管理员合约"
				},
				"unlockGatebyGater()": {
					"details": "市场认证后的门户临时解冻自己"
				},
				"unlockGatebyMarketor(address)": {
					"details": "市场管理员解冻门户"
				},
				"updateGatebyGator(bytes32)": {
					"details": "市场认证后的门户临时更新自己"
				},
				"updateGatebyMarketor((uint128,address,bytes32,uint256,bool,bool,bool))": {
					"details": "市场管理员更新门户"
				},
				"updatefullGater((uint128,address,bytes32,uint256,bool,bool,bool),(bytes32,bytes32,bytes32,bytes32,bytes32,bytes32))": {
					"details": "一次性更新门户信息"
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"e_addGater(address,bytes32)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_delGatebyMarketor(address,address)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_lockGatebyGater(address)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_lockGatebyMarketor(address,address)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_unlockGatebyGater(address)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_unlockGatebyMarketor(address,address)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_updateGatebyGator(address,bytes32)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_updateGatebyMarketor(address,bytes32,address)": {
					"notice": "Emitted when liquidity is minted for a given position"
				}
			},
			"kind": "user",
			"methods": {
				"addGater((uint128,address,bytes32,uint256,bool,bool,bool))": {
					"notice": "申请成为门户"
				},
				"addGaterDetailInfo((bytes32,bytes32,bytes32,bytes32,bytes32,bytes32))": {
					"notice": "门户添加门户详情信息"
				},
				"addfullGater((uint128,address,bytes32,uint256,bool,bool,bool),(bytes32,bytes32,bytes32,bytes32,bytes32,bytes32))": {
					"notice": "一次性添加门户信息"
				},
				"delGatebyMarketor(address)": {
					"notice": "市场管理员删除门户"
				},
				"getGaterDetailInfo(address)": {
					"notice": "通过门户地址获取门户详情"
				},
				"getGaterDetailInfo(uint8)": {
					"notice": "通过门户编号获取门户详情"
				},
				"getGaterInfo(address)": {
					"notice": "调用者获取门户地址对应的门户信息"
				},
				"getGaterInfo(uint8)": {
					"notice": "调用者获取门户编号对应的门户信息"
				},
				"getGaterNo()": {
					"notice": "获取门户调用者的门户编号"
				},
				"getGaterNoFromAddress(address)": {
					"notice": "调用者获取传入地址对应的门户编号"
				},
				"getMaxGateNumber()": {
					"notice": "调用者获取市场最大门户编号、或者是下一个门户申请者的编号"
				},
				"isValidGator()": {
					"notice": "判断调用者是否是市场已经认证门户"
				},
				"isValidGatorFromAddress(address)": {
					"notice": "调用者判断传入地址是否是市场已经认证门户"
				},
				"lockGatebyGater()": {
					"notice": "市场认证后的门户临时冻结自己"
				},
				"lockGatebyMarketor(address)": {
					"notice": "市场管理员冻结门户"
				},
				"setGaterEnv(address,address)": {
					"notice": "设置门户合约的管理员合约"
				},
				"unlockGatebyGater()": {
					"notice": "市场认证后的门户临时解冻自己"
				},
				"unlockGatebyMarketor(address)": {
					"notice": "市场管理员解冻门户"
				},
				"updateGatebyGator(bytes32)": {
					"notice": "市场认证后的门户临时更新自己"
				},
				"updateGatebyMarketor((uint128,address,bytes32,uint256,bool,bool,bool))": {
					"notice": "市场管理员更新门户"
				},
				"updatefullGater((uint128,address,bytes32,uint256,bool,bool,bool),(bytes32,bytes32,bytes32,bytes32,bytes32,bytes32))": {
					"notice": "一次性更新门户信息"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Contracts/TTSwapV1Gator.sol": "TTSwapV1Gator"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Contracts/TTSwapV1Gator.sol": {
			"keccak256": "0x1384824e85baf9b03dfddb5ec8a170e185de423f6ad8cd3ed4dd9353d0b510d2",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://50ded68fd89de9906f6005ab7ff9694d37969a40d6fa1b4c6e45303ba077100a",
				"dweb:/ipfs/QmYe5TyMFdgohfup3f8qLj8sQCLUqfonZbfDmpgTfrFtXt"
			]
		},
		"Contracts/TTSwapV1Marketor.sol": {
			"keccak256": "0xc213c1e14cab69ab306b1df7fbf854727dfb6e82fd7d4db8bbc9b7b6aa674bdf",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://fe4ec063f1e43b0c810c101a196e837f76ce1fbac24c86ce076fd82f8277f967",
				"dweb:/ipfs/QmcyaRCKx4DJVKN1ByQUaWSucS3KPcwptEBUcoeZNKJKyQ"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1CustomerActions.sol": {
			"keccak256": "0xc4d9f131c078b5e48f5df0257bbe0850cf0d8d9210bff59c3abdc523f728d0e6",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://10ca6f61392ab43e23bed84b002d1f9169047e85c67eeed22545dbddc64ec33b",
				"dweb:/ipfs/QmejU5oSfv9936G6oELfC6jMrkobwFdYqbsy7Z69zjA3Va"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1Events.sol": {
			"keccak256": "0x997fb668d66f5dead653a2e876429ec23deea010f438ac2ea28fc64bde961019",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://ab56552493111f45ed7cc52619b2b4b5eb6350d102bb20190f90008c52731b94",
				"dweb:/ipfs/QmNytoto2bfDft3z5YdwTAiTqsdGH8pvQ9goAAihqcnPEs"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1GatorActions.sol": {
			"keccak256": "0xf718bff8126af4d75f1e58eb9c212f9384a04dd46eff45d472916ee3d87d63df",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://28f05ea6af40657c6978edebaa206710158ed60d041616a47d988ad6781b3e20",
				"dweb:/ipfs/QmTA8hRuzAm11omYF7Q9UHhRmX9CDohuGME4ALZY8dFvo2"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1Immutables.sol": {
			"keccak256": "0x23a8910160e619dfd61aec873a1ac9557a12a1c0913b212fa462d6d0d4f38156",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://e04e7e89b700c14c61df3fcc15482730c5db9eb9a4b81ba9b42664e2dc332391",
				"dweb:/ipfs/QmU7kd2W7AMKbhGzBxMsYSQwGabZ4orABRUmh1GCLSi8tG"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1MarketorActions.sol": {
			"keccak256": "0xa1614880a7698d1bab5838c4affd7f31ef48307e49240d51a0db35124edce982",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://dc159c9ee400d1a3ab4e00ec1c8660a1205d310fbc9fdd5c092e9328afe894f4",
				"dweb:/ipfs/QmTbBfNvQxzPwE2N3ifbDXFD9RgeXqGP7rVFF7dJ7TQoRv"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1State.sol": {
			"keccak256": "0x8c822dffaab4195ba6f7415abdd79b71b00761dd1a55d3f1fd5f4866283be772",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://83741b1e798ed0e1219b85a7434838a886b5b8624199fcf64b9c5806a5c36f99",
				"dweb:/ipfs/QmV77MWKKnRBAHTKesaHG5ekADzn4Mr9KCgw4Nn7QZdoLR"
			]
		},
		"Contracts/interfaces/ITTSwapV1Gator.sol": {
			"keccak256": "0xcc6a9f594874f75e8f19b2d65a3d0892bd9d3f75636e93e8d52cf4aea6703652",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://c434a90d0ac2d2afc87a43147c85d3f9d48530eb2cd8fd2b491262be8a7238db",
				"dweb:/ipfs/QmWyyaWVvSVVduUiS3vKQ4guLHnP4ugcCQp46kNvLsz2iJ"
			]
		},
		"Contracts/interfaces/ITTSwapV1Marketor.sol": {
			"keccak256": "0xcec6819c6010fada016d2adffd3ae7973365e768c6144df626506c5a00873565",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://59feb2895b8fda46ab09fd4b63605aef2bd315169102ef43898501dcdb92b3da",
				"dweb:/ipfs/QmWxs1ftk6xYceq2dRKZ3m5zwrvNYHdLt1xPo1Ntauii9g"
			]
		},
		"Contracts/interfaces/Marketor/IMarketorV1Events.sol": {
			"keccak256": "0x803231eb164204e023a2a11855e0db775df14e181ca68bda8d2b44271ded241f",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://f0dd22561cfc8e32748dbe1adafeefbe93e46baa94797a3e584b03e8777386ea",
				"dweb:/ipfs/QmR38VzdTn3DRiYAdV8FTENp3qcsxKmukSfivisHuFCNbY"
			]
		},
		"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol": {
			"keccak256": "0x2159e6262a224a3fb19bd304f89fab571d6ddad00a01c5bcbc7699bdca627412",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://6fb78be3604a8d3ad5772db5533a3cf5268607997a5f815b6d8809cc8412d126",
				"dweb:/ipfs/QmZVF85N81hmsrzofsPLfDjrv2r82z8Xn4ooj6r2rTNM4F"
			]
		},
		"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol": {
			"keccak256": "0x85fe030c431f4ce0818038e673a58d35b30ac6fdb6760b24c105afbd0b94cc15",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://08d50a6cd32a067e30d45964d7d018fbec1b0b34b00529548815b6a98d4e9ee5",
				"dweb:/ipfs/QmaRBpH3M7vt628KB1UqonAoUD1UcqNXSEsPdeyThZ55VC"
			]
		},
		"Contracts/interfaces/Marketor/IMarketorV1State.sol": {
			"keccak256": "0x5daacc326d8c629ecd56540a6f1f746ed30450e3fbbb7bb6db9e7645fe5cd4d4",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://98cd366c4ce58b9183f96c9fd3b63e4cc9dfc6020e7f7593b5a45b36fa81b9cc",
				"dweb:/ipfs/QmTTDzMTgqMUrkVdFcSzwUZx51SH2Cho6911ni299L1oRd"
			]
		},
		"Contracts/libraries/base/LGate.sol": {
			"keccak256": "0x6a7bb4bdb87290d1284818c04081615fc5d98649095ede141f58524e90491062",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://f7d17cb2b31c30770eee50fbab7505e9b568969fd2a9f872c6892c0e68c3a5a3",
				"dweb:/ipfs/Qmak2qC95zHq89kmXhwPV1CrHTep6Vg1hvYKer3e7bxFNx"
			]
		}
	},
	"version": 1
}