{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_marketorContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_marketCreator",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "e_addGater",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "marketoraddress",
						"type": "address"
					}
				],
				"name": "e_delGatebyMarketor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					}
				],
				"name": "e_lockGatebyGater",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "marketoraddress",
						"type": "address"
					}
				],
				"name": "e_lockGatebyMarketor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					}
				],
				"name": "e_unlockGatebyGater",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "marketoraddress",
						"type": "address"
					}
				],
				"name": "e_unlockGatebyMarketor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "e_updateGatebyGator",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "marketoraddress",
						"type": "address"
					}
				],
				"name": "e_updateGatebyMarketor",
				"type": "event"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint128",
								"name": "gateNo",
								"type": "uint128"
							},
							{
								"internalType": "address",
								"name": "gateAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "createtimestamp",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "marketunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "gateunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isUsed",
								"type": "bool"
							}
						],
						"internalType": "struct LGate.Info",
						"name": "_gator",
						"type": "tuple"
					}
				],
				"name": "addGater",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gator",
						"type": "address"
					}
				],
				"name": "delGatebyMarketor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "gateList",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "gateNo",
						"type": "uint128"
					},
					{
						"internalType": "address",
						"name": "gateAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "createtimestamp",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "marketunlock",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "gateunlock",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isUsed",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"name": "gateNumbers",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_gateNumber",
						"type": "uint8"
					}
				],
				"name": "getGaterInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint128",
								"name": "gateNo",
								"type": "uint128"
							},
							{
								"internalType": "address",
								"name": "gateAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "createtimestamp",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "marketunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "gateunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isUsed",
								"type": "bool"
							}
						],
						"internalType": "struct LGate.Info",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gateAddress",
						"type": "address"
					}
				],
				"name": "getGaterNo",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getGaterNo",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMaxGateNumber",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isValidGator",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "vgaddress",
						"type": "address"
					}
				],
				"name": "isValidGator",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lockGatebyGater",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gatoraddress",
						"type": "address"
					}
				],
				"name": "lockGatebyMarketor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "marketCreator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "marketorContractAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxGateNumbers",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_marketorContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_marketCreator",
						"type": "address"
					}
				],
				"name": "setGaterEnv",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlockGatebyGater",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gatoraddress",
						"type": "address"
					}
				],
				"name": "unlockGatebyMarketor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint128",
								"name": "gateNo",
								"type": "uint128"
							},
							{
								"internalType": "address",
								"name": "gateAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "createtimestamp",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "marketunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "gateunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isUsed",
								"type": "bool"
							}
						],
						"internalType": "struct LGate.Info",
						"name": "_gator",
						"type": "tuple"
					}
				],
				"name": "updateGatebyGator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint128",
								"name": "gateNo",
								"type": "uint128"
							},
							{
								"internalType": "address",
								"name": "gateAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "createtimestamp",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "marketunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "gateunlock",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isUsed",
								"type": "bool"
							}
						],
						"internalType": "struct LGate.Info",
						"name": "_gator",
						"type": "tuple"
					}
				],
				"name": "updateGatebyMarketor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"e_addGater(address,string)": {
					"params": {
						"gateAddress": "The address that minted the liquidity",
						"name": "The owner of the position and recipient of any minted liquidity"
					}
				},
				"e_delGatebyMarketor(address,address)": {
					"params": {
						"gateAddress": "The address that minted the liquidity",
						"marketoraddress": "The owner of the position and recipient of any minted liquidity"
					}
				},
				"e_lockGatebyGater(address)": {
					"params": {
						"gateAddress": "The address that minted the liquidity"
					}
				},
				"e_lockGatebyMarketor(address,address)": {
					"params": {
						"gateAddress": "The address that minted the liquidity",
						"marketoraddress": "The address that minted the liquidity"
					}
				},
				"e_unlockGatebyGater(address)": {
					"params": {
						"gateAddress": "The address that minted the liquidity"
					}
				},
				"e_unlockGatebyMarketor(address,address)": {
					"params": {
						"gateAddress": "The address that minted the liquidity",
						"marketoraddress": "The address that minted the liquidity"
					}
				},
				"e_updateGatebyGator(address,string)": {
					"params": {
						"gateAddress": "The address that minted the liquidity",
						"name": "The owner of the position and recipient of any minted liquidity"
					}
				},
				"e_updateGatebyMarketor(address,string,address)": {
					"params": {
						"gateAddress": "The address that minted the liquidity",
						"marketoraddress": "The owner of the position and recipient of any minted liquidity",
						"name": "The owner of the position and recipient of any minted liquidity"
					}
				}
			},
			"kind": "dev",
			"methods": {},
			"stateVariables": {
				"marketorContractAddress": {
					"return": "The contract address",
					"returns": {
						"_0": "The contract address"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"e_addGater(address,string)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_delGatebyMarketor(address,address)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_lockGatebyGater(address)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_lockGatebyMarketor(address,address)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_unlockGatebyGater(address)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_unlockGatebyMarketor(address,address)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_updateGatebyGator(address,string)": {
					"notice": "Emitted when liquidity is minted for a given position"
				},
				"e_updateGatebyMarketor(address,string,address)": {
					"notice": "Emitted when liquidity is minted for a given position"
				}
			},
			"kind": "user",
			"methods": {
				"marketorContractAddress()": {
					"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Contracts/TTSwapV1Gator.sol": "TTSwapV1Gator"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Contracts/TTSwapV1Gator.sol": {
			"keccak256": "0x77ef6572e48ecc345d22a30a77d13170c846c8c434e60a81f10f3da6380cefbe",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://42bee260bac80c72a343085c7a45e8de9cc41e3443f90e272edcb4a9e2fcb590",
				"dweb:/ipfs/QmPsfZSqyxz1puDZBXGaJYaPXyxrcEGvF8kuZvoFU91VDr"
			]
		},
		"Contracts/TTSwapV1Marketor.sol": {
			"keccak256": "0xfdaf3d2d82af7444e2220f679cc998d6e7ca7b29ac3e2b2adbd8fd018372e342",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://1d93e56c8a12e16cad14f0bdf9448c540509b3e9b934c45cdfd86989aeb8dc01",
				"dweb:/ipfs/QmZ6yF94HcJ5Mjk5JLGnm69DCgK8uxtfLBH7F8hZwSZb69"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1CustomerActions.sol": {
			"keccak256": "0x5166995889ad764ce7379845df7e6f55f5114294f18795a07da173466418c010",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://c101332272e023fd17dd3e96270424a42aa257e02f14650314bf133ff3105221",
				"dweb:/ipfs/QmUznHitEEPeBRc7PxrUMggmyLveBtW2MJyKGUt8KDrjUn"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1Events.sol": {
			"keccak256": "0xace58e51abbb96256abd8c2a356d318ed1145b39b9d4a77fb635abb26ebfd4af",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://509999e221e8873c6bc4a01a9a4dfe46a6c9846d54e07f137c07e477ad99d22a",
				"dweb:/ipfs/QmWE5XXbYxeTx1B18Vg27WM8uSmshgkVfU1WuRwxEYA4kZ"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1GatorActions.sol": {
			"keccak256": "0x43e783a765bf4f5a4de8591ceb9556c215372e068e80827637f22aec41460359",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://23b287fe77c961c6f7dc7b7a1591eddd0772b687faf41e7c0400c66114e8a452",
				"dweb:/ipfs/QmVKaaxjY7ya3HSkdUt7zqw2J8BqxMDGvUbUjobVCcUsHk"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1Immutables.sol": {
			"keccak256": "0x8cbeb007a8321dee1ef73ed11e1af76c30acb64c6829d2c0d02c6f6cb4e8fdc3",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://00b5dc4c7cbcec92fdfa6e6d512209d63cf2cac6a1ae6969b853172fc9fb8319",
				"dweb:/ipfs/QmYoRZuN8XvT6eESqy5BFEDxbs12beWtBHgkjxna3Jy7CF"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1MarketorActions.sol": {
			"keccak256": "0xcd27934c7288dbf950975c629280d20b5d2b79f3f1d4cda94e866f2b24255fa9",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://7ea87e856a6e52e3171e4395b05feff4264454f7e5a106117f4f49328aa72492",
				"dweb:/ipfs/QmYZkYNsqvEnKsqN5HLjo2JsWJqksniSkRXkC8bJsPKGJp"
			]
		},
		"Contracts/interfaces/Gator/IGatorV1State.sol": {
			"keccak256": "0xa949ea977e27e58f507d084c5f6b92c88655e8651a77063935b54dd72722bae9",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://c35e05c3ea802144751519d981b932c65eaa2493a6328afcc5bfb630a1702eb7",
				"dweb:/ipfs/QmY7vTMZHRVvFfT1NJ2crLd73g6J6Sn116NEc5ZHpvq1MQ"
			]
		},
		"Contracts/interfaces/ITTSwapV1Gator.sol": {
			"keccak256": "0xcc6a9f594874f75e8f19b2d65a3d0892bd9d3f75636e93e8d52cf4aea6703652",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://c434a90d0ac2d2afc87a43147c85d3f9d48530eb2cd8fd2b491262be8a7238db",
				"dweb:/ipfs/QmWyyaWVvSVVduUiS3vKQ4guLHnP4ugcCQp46kNvLsz2iJ"
			]
		},
		"Contracts/interfaces/ITTSwapV1Marketor.sol": {
			"keccak256": "0xcec6819c6010fada016d2adffd3ae7973365e768c6144df626506c5a00873565",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://59feb2895b8fda46ab09fd4b63605aef2bd315169102ef43898501dcdb92b3da",
				"dweb:/ipfs/QmWxs1ftk6xYceq2dRKZ3m5zwrvNYHdLt1xPo1Ntauii9g"
			]
		},
		"Contracts/interfaces/Marketor/IMarketorV1Events.sol": {
			"keccak256": "0x803231eb164204e023a2a11855e0db775df14e181ca68bda8d2b44271ded241f",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://f0dd22561cfc8e32748dbe1adafeefbe93e46baa94797a3e584b03e8777386ea",
				"dweb:/ipfs/QmR38VzdTn3DRiYAdV8FTENp3qcsxKmukSfivisHuFCNbY"
			]
		},
		"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol": {
			"keccak256": "0x2159e6262a224a3fb19bd304f89fab571d6ddad00a01c5bcbc7699bdca627412",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://6fb78be3604a8d3ad5772db5533a3cf5268607997a5f815b6d8809cc8412d126",
				"dweb:/ipfs/QmZVF85N81hmsrzofsPLfDjrv2r82z8Xn4ooj6r2rTNM4F"
			]
		},
		"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol": {
			"keccak256": "0x85fe030c431f4ce0818038e673a58d35b30ac6fdb6760b24c105afbd0b94cc15",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://08d50a6cd32a067e30d45964d7d018fbec1b0b34b00529548815b6a98d4e9ee5",
				"dweb:/ipfs/QmaRBpH3M7vt628KB1UqonAoUD1UcqNXSEsPdeyThZ55VC"
			]
		},
		"Contracts/interfaces/Marketor/IMarketorV1State.sol": {
			"keccak256": "0x5daacc326d8c629ecd56540a6f1f746ed30450e3fbbb7bb6db9e7645fe5cd4d4",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://98cd366c4ce58b9183f96c9fd3b63e4cc9dfc6020e7f7593b5a45b36fa81b9cc",
				"dweb:/ipfs/QmTTDzMTgqMUrkVdFcSzwUZx51SH2Cho6911ni299L1oRd"
			]
		},
		"Contracts/libraries/base/LGate.sol": {
			"keccak256": "0x2bda4a9e847cd9673762cd00f4a1f90d880634b828ff0f2ec3f84435bfa0bc8d",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://bf34fafa59ec445dd5e6d1386593b6b70841fa7c2f2c608b0293dce48db43f8d",
				"dweb:/ipfs/QmZ3REfTtgdPuBTjYKNrV4C5qAs65kaHGK7jgapBgW7ewU"
			]
		}
	},
	"version": 1
}